function D2(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();function wy(n,e){const t=Object.create(null),s=n.split(",");for(let r=0;r<s.length;r++)t[s[r]]=!0;return e?r=>!!t[r.toLowerCase()]:r=>!!t[r]}function vy(n){if(Pe(n)){const e={};for(let t=0;t<n.length;t++){const s=n[t],r=Yt(s)?P2(s):vy(s);if(r)for(const o in r)e[o]=r[o]}return e}else{if(Yt(n))return n;if(vt(n))return n}}const O2=/;(?![^(]*\))/g,F2=/:([^]+)/,L2=/\/\*.*?\*\//gs;function P2(n){const e={};return n.replace(L2,"").split(O2).forEach(t=>{if(t){const s=t.split(F2);s.length>1&&(e[s[0].trim()]=s[1].trim())}}),e}function xa(n){let e="";if(Yt(n))e=n;else if(Pe(n))for(let t=0;t<n.length;t++){const s=xa(n[t]);s&&(e+=s+" ")}else if(vt(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const z2="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",M2=wy(z2);function c$(n){return!!n||n===""}const vh=n=>Yt(n)?n:n==null?"":Pe(n)||vt(n)&&(n.toString===p$||!Ue(n.toString))?JSON.stringify(n,u$,2):String(n),u$=(n,e)=>e&&e.__v_isRef?u$(n,e.value):ji(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[s,r])=>(t[`${s} =>`]=r,t),{})}:h$(e)?{[`Set(${e.size})`]:[...e.values()]}:vt(e)&&!Pe(e)&&!f$(e)?String(e):e,bt={},Hi=[],Ps=()=>{},B2=()=>!1,V2=/^on[^a-z]/,Vd=n=>V2.test(n),$y=n=>n.startsWith("onUpdate:"),hn=Object.assign,Iy=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},W2=Object.prototype.hasOwnProperty,Qe=(n,e)=>W2.call(n,e),Pe=Array.isArray,ji=n=>Wd(n)==="[object Map]",h$=n=>Wd(n)==="[object Set]",Ue=n=>typeof n=="function",Yt=n=>typeof n=="string",Cy=n=>typeof n=="symbol",vt=n=>n!==null&&typeof n=="object",d$=n=>vt(n)&&Ue(n.then)&&Ue(n.catch),p$=Object.prototype.toString,Wd=n=>p$.call(n),U2=n=>Wd(n).slice(8,-1),f$=n=>Wd(n)==="[object Object]",Sy=n=>Yt(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,Hh=wy(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ud=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},G2=/-(\w)/g,Ji=Ud(n=>n.replace(G2,(e,t)=>t?t.toUpperCase():"")),H2=/\B([A-Z])/g,wa=Ud(n=>n.replace(H2,"-$1").toLowerCase()),m$=Ud(n=>n.charAt(0).toUpperCase()+n.slice(1)),Dm=Ud(n=>n?`on${m$(n)}`:""),lc=(n,e)=>!Object.is(n,e),Om=(n,e)=>{for(let t=0;t<n.length;t++)n[t](e)},ed=(n,e,t)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,value:t})},Ny=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let Uw;const j2=()=>Uw||(Uw=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Qs;class q2{constructor(e=!1){this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Qs,!e&&Qs&&(this.index=(Qs.scopes||(Qs.scopes=[])).push(this)-1)}run(e){if(this.active){const t=Qs;try{return Qs=this,e()}finally{Qs=t}}}on(){Qs=this}off(){Qs=this.parent}stop(e){if(this.active){let t,s;for(t=0,s=this.effects.length;t<s;t++)this.effects[t].stop();for(t=0,s=this.cleanups.length;t<s;t++)this.cleanups[t]();if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}}}function K2(n,e=Qs){e&&e.active&&e.effects.push(n)}const Ty=n=>{const e=new Set(n);return e.w=0,e.n=0,e},g$=n=>(n.w&fo)>0,y$=n=>(n.n&fo)>0,X2=({deps:n})=>{if(n.length)for(let e=0;e<n.length;e++)n[e].w|=fo},Y2=n=>{const{deps:e}=n;if(e.length){let t=0;for(let s=0;s<e.length;s++){const r=e[s];g$(r)&&!y$(r)?r.delete(n):e[t++]=r,r.w&=~fo,r.n&=~fo}e.length=t}},hg=new WeakMap;let Yl=0,fo=1;const dg=30;let Ds;const Zo=Symbol(""),pg=Symbol("");class ky{constructor(e,t=null,s){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,K2(this,s)}run(){if(!this.active)return this.fn();let e=Ds,t=ao;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=Ds,Ds=this,ao=!0,fo=1<<++Yl,Yl<=dg?X2(this):Gw(this),this.fn()}finally{Yl<=dg&&Y2(this),fo=1<<--Yl,Ds=this.parent,ao=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Ds===this?this.deferStop=!0:this.active&&(Gw(this),this.onStop&&this.onStop(),this.active=!1)}}function Gw(n){const{deps:e}=n;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(n);e.length=0}}let ao=!0;const b$=[];function va(){b$.push(ao),ao=!1}function $a(){const n=b$.pop();ao=n===void 0?!0:n}function os(n,e,t){if(ao&&Ds){let s=hg.get(n);s||hg.set(n,s=new Map);let r=s.get(t);r||s.set(t,r=Ty()),x$(r)}}function x$(n,e){let t=!1;Yl<=dg?y$(n)||(n.n|=fo,t=!g$(n)):t=!n.has(Ds),t&&(n.add(Ds),Ds.deps.push(n))}function kr(n,e,t,s,r,o){const i=hg.get(n);if(!i)return;let a=[];if(e==="clear")a=[...i.values()];else if(t==="length"&&Pe(n)){const l=Ny(s);i.forEach((c,u)=>{(u==="length"||u>=l)&&a.push(c)})}else switch(t!==void 0&&a.push(i.get(t)),e){case"add":Pe(n)?Sy(t)&&a.push(i.get("length")):(a.push(i.get(Zo)),ji(n)&&a.push(i.get(pg)));break;case"delete":Pe(n)||(a.push(i.get(Zo)),ji(n)&&a.push(i.get(pg)));break;case"set":ji(n)&&a.push(i.get(Zo));break}if(a.length===1)a[0]&&fg(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);fg(Ty(l))}}function fg(n,e){const t=Pe(n)?n:[...n];for(const s of t)s.computed&&Hw(s);for(const s of t)s.computed||Hw(s)}function Hw(n,e){(n!==Ds||n.allowRecurse)&&(n.scheduler?n.scheduler():n.run())}const Z2=wy("__proto__,__v_isRef,__isVue"),w$=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(Cy)),J2=Ey(),Q2=Ey(!1,!0),eE=Ey(!0),jw=tE();function tE(){const n={};return["includes","indexOf","lastIndexOf"].forEach(e=>{n[e]=function(...t){const s=nt(this);for(let o=0,i=this.length;o<i;o++)os(s,"get",o+"");const r=s[e](...t);return r===-1||r===!1?s[e](...t.map(nt)):r}}),["push","pop","shift","unshift","splice"].forEach(e=>{n[e]=function(...t){va();const s=nt(this)[e].apply(this,t);return $a(),s}}),n}function Ey(n=!1,e=!1){return function(s,r,o){if(r==="__v_isReactive")return!n;if(r==="__v_isReadonly")return n;if(r==="__v_isShallow")return e;if(r==="__v_raw"&&o===(n?e?yE:S$:e?C$:I$).get(s))return s;const i=Pe(s);if(!n&&i&&Qe(jw,r))return Reflect.get(jw,r,o);const a=Reflect.get(s,r,o);return(Cy(r)?w$.has(r):Z2(r))||(n||os(s,"get",r),e)?a:ln(a)?i&&Sy(r)?a:a.value:vt(a)?n?N$(a):Ry(a):a}}const nE=v$(),sE=v$(!0);function v$(n=!1){return function(t,s,r,o){let i=t[s];if(Qi(i)&&ln(i)&&!ln(r))return!1;if(!n&&(!td(r)&&!Qi(r)&&(i=nt(i),r=nt(r)),!Pe(t)&&ln(i)&&!ln(r)))return i.value=r,!0;const a=Pe(t)&&Sy(s)?Number(s)<t.length:Qe(t,s),l=Reflect.set(t,s,r,o);return t===nt(o)&&(a?lc(r,i)&&kr(t,"set",s,r):kr(t,"add",s,r)),l}}function rE(n,e){const t=Qe(n,e);n[e];const s=Reflect.deleteProperty(n,e);return s&&t&&kr(n,"delete",e,void 0),s}function oE(n,e){const t=Reflect.has(n,e);return(!Cy(e)||!w$.has(e))&&os(n,"has",e),t}function iE(n){return os(n,"iterate",Pe(n)?"length":Zo),Reflect.ownKeys(n)}const $$={get:J2,set:nE,deleteProperty:rE,has:oE,ownKeys:iE},aE={get:eE,set(n,e){return!0},deleteProperty(n,e){return!0}},lE=hn({},$$,{get:Q2,set:sE}),_y=n=>n,Gd=n=>Reflect.getPrototypeOf(n);function $h(n,e,t=!1,s=!1){n=n.__v_raw;const r=nt(n),o=nt(e);t||(e!==o&&os(r,"get",e),os(r,"get",o));const{has:i}=Gd(r),a=s?_y:t?Oy:cc;if(i.call(r,e))return a(n.get(e));if(i.call(r,o))return a(n.get(o));n!==r&&n.get(e)}function Ih(n,e=!1){const t=this.__v_raw,s=nt(t),r=nt(n);return e||(n!==r&&os(s,"has",n),os(s,"has",r)),n===r?t.has(n):t.has(n)||t.has(r)}function Ch(n,e=!1){return n=n.__v_raw,!e&&os(nt(n),"iterate",Zo),Reflect.get(n,"size",n)}function qw(n){n=nt(n);const e=nt(this);return Gd(e).has.call(e,n)||(e.add(n),kr(e,"add",n,n)),this}function Kw(n,e){e=nt(e);const t=nt(this),{has:s,get:r}=Gd(t);let o=s.call(t,n);o||(n=nt(n),o=s.call(t,n));const i=r.call(t,n);return t.set(n,e),o?lc(e,i)&&kr(t,"set",n,e):kr(t,"add",n,e),this}function Xw(n){const e=nt(this),{has:t,get:s}=Gd(e);let r=t.call(e,n);r||(n=nt(n),r=t.call(e,n)),s&&s.call(e,n);const o=e.delete(n);return r&&kr(e,"delete",n,void 0),o}function Yw(){const n=nt(this),e=n.size!==0,t=n.clear();return e&&kr(n,"clear",void 0,void 0),t}function Sh(n,e){return function(s,r){const o=this,i=o.__v_raw,a=nt(i),l=e?_y:n?Oy:cc;return!n&&os(a,"iterate",Zo),i.forEach((c,u)=>s.call(r,l(c),l(u),o))}}function Nh(n,e,t){return function(...s){const r=this.__v_raw,o=nt(r),i=ji(o),a=n==="entries"||n===Symbol.iterator&&i,l=n==="keys"&&i,c=r[n](...s),u=t?_y:e?Oy:cc;return!e&&os(o,"iterate",l?pg:Zo),{next(){const{value:h,done:d}=c.next();return d?{value:h,done:d}:{value:a?[u(h[0]),u(h[1])]:u(h),done:d}},[Symbol.iterator](){return this}}}}function qr(n){return function(...e){return n==="delete"?!1:this}}function cE(){const n={get(o){return $h(this,o)},get size(){return Ch(this)},has:Ih,add:qw,set:Kw,delete:Xw,clear:Yw,forEach:Sh(!1,!1)},e={get(o){return $h(this,o,!1,!0)},get size(){return Ch(this)},has:Ih,add:qw,set:Kw,delete:Xw,clear:Yw,forEach:Sh(!1,!0)},t={get(o){return $h(this,o,!0)},get size(){return Ch(this,!0)},has(o){return Ih.call(this,o,!0)},add:qr("add"),set:qr("set"),delete:qr("delete"),clear:qr("clear"),forEach:Sh(!0,!1)},s={get(o){return $h(this,o,!0,!0)},get size(){return Ch(this,!0)},has(o){return Ih.call(this,o,!0)},add:qr("add"),set:qr("set"),delete:qr("delete"),clear:qr("clear"),forEach:Sh(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{n[o]=Nh(o,!1,!1),t[o]=Nh(o,!0,!1),e[o]=Nh(o,!1,!0),s[o]=Nh(o,!0,!0)}),[n,t,e,s]}const[uE,hE,dE,pE]=cE();function Ay(n,e){const t=e?n?pE:dE:n?hE:uE;return(s,r,o)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?s:Reflect.get(Qe(t,r)&&r in s?t:s,r,o)}const fE={get:Ay(!1,!1)},mE={get:Ay(!1,!0)},gE={get:Ay(!0,!1)},I$=new WeakMap,C$=new WeakMap,S$=new WeakMap,yE=new WeakMap;function bE(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function xE(n){return n.__v_skip||!Object.isExtensible(n)?0:bE(U2(n))}function Ry(n){return Qi(n)?n:Dy(n,!1,$$,fE,I$)}function wE(n){return Dy(n,!1,lE,mE,C$)}function N$(n){return Dy(n,!0,aE,gE,S$)}function Dy(n,e,t,s,r){if(!vt(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const o=r.get(n);if(o)return o;const i=xE(n);if(i===0)return n;const a=new Proxy(n,i===2?s:t);return r.set(n,a),a}function qi(n){return Qi(n)?qi(n.__v_raw):!!(n&&n.__v_isReactive)}function Qi(n){return!!(n&&n.__v_isReadonly)}function td(n){return!!(n&&n.__v_isShallow)}function T$(n){return qi(n)||Qi(n)}function nt(n){const e=n&&n.__v_raw;return e?nt(e):n}function k$(n){return ed(n,"__v_skip",!0),n}const cc=n=>vt(n)?Ry(n):n,Oy=n=>vt(n)?N$(n):n;function E$(n){ao&&Ds&&(n=nt(n),x$(n.dep||(n.dep=Ty())))}function _$(n,e){n=nt(n),n.dep&&fg(n.dep)}function ln(n){return!!(n&&n.__v_isRef===!0)}function oi(n){return vE(n,!1)}function vE(n,e){return ln(n)?n:new $E(n,e)}class $E{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:nt(e),this._value=t?e:cc(e)}get value(){return E$(this),this._value}set value(e){const t=this.__v_isShallow||td(e)||Qi(e);e=t?e:nt(e),lc(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:cc(e),_$(this))}}function gs(n){return ln(n)?n.value:n}const IE={get:(n,e,t)=>gs(Reflect.get(n,e,t)),set:(n,e,t,s)=>{const r=n[e];return ln(r)&&!ln(t)?(r.value=t,!0):Reflect.set(n,e,t,s)}};function A$(n){return qi(n)?n:new Proxy(n,IE)}var R$;class CE{constructor(e,t,s,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[R$]=!1,this._dirty=!0,this.effect=new ky(e,()=>{this._dirty||(this._dirty=!0,_$(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=s}get value(){const e=nt(this);return E$(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}R$="__v_isReadonly";function SE(n,e,t=!1){let s,r;const o=Ue(n);return o?(s=n,r=Ps):(s=n.get,r=n.set),new CE(s,r,o||!r,t)}function lo(n,e,t,s){let r;try{r=s?n(...s):n()}catch(o){Hd(o,e,t)}return r}function $s(n,e,t,s){if(Ue(n)){const o=lo(n,e,t,s);return o&&d$(o)&&o.catch(i=>{Hd(i,e,t)}),o}const r=[];for(let o=0;o<n.length;o++)r.push($s(n[o],e,t,s));return r}function Hd(n,e,t,s=!0){const r=e?e.vnode:null;if(e){let o=e.parent;const i=e.proxy,a=t;for(;o;){const c=o.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](n,i,a)===!1)return}o=o.parent}const l=e.appContext.config.errorHandler;if(l){lo(l,null,10,[n,i,a]);return}}NE(n,t,r,s)}function NE(n,e,t,s=!0){console.error(n)}let uc=!1,mg=!1;const mn=[];let or=0;const Ki=[];let vr=null,Wo=0;const D$=Promise.resolve();let Fy=null;function TE(n){const e=Fy||D$;return n?e.then(this?n.bind(this):n):e}function kE(n){let e=or+1,t=mn.length;for(;e<t;){const s=e+t>>>1;hc(mn[s])<n?e=s+1:t=s}return e}function Ly(n){(!mn.length||!mn.includes(n,uc&&n.allowRecurse?or+1:or))&&(n.id==null?mn.push(n):mn.splice(kE(n.id),0,n),O$())}function O$(){!uc&&!mg&&(mg=!0,Fy=D$.then(L$))}function EE(n){const e=mn.indexOf(n);e>or&&mn.splice(e,1)}function _E(n){Pe(n)?Ki.push(...n):(!vr||!vr.includes(n,n.allowRecurse?Wo+1:Wo))&&Ki.push(n),O$()}function Zw(n,e=uc?or+1:0){for(;e<mn.length;e++){const t=mn[e];t&&t.pre&&(mn.splice(e,1),e--,t())}}function F$(n){if(Ki.length){const e=[...new Set(Ki)];if(Ki.length=0,vr){vr.push(...e);return}for(vr=e,vr.sort((t,s)=>hc(t)-hc(s)),Wo=0;Wo<vr.length;Wo++)vr[Wo]();vr=null,Wo=0}}const hc=n=>n.id==null?1/0:n.id,AE=(n,e)=>{const t=hc(n)-hc(e);if(t===0){if(n.pre&&!e.pre)return-1;if(e.pre&&!n.pre)return 1}return t};function L$(n){mg=!1,uc=!0,mn.sort(AE);const e=Ps;try{for(or=0;or<mn.length;or++){const t=mn[or];t&&t.active!==!1&&lo(t,null,14)}}finally{or=0,mn.length=0,F$(),uc=!1,Fy=null,(mn.length||Ki.length)&&L$()}}function RE(n,e,...t){if(n.isUnmounted)return;const s=n.vnode.props||bt;let r=t;const o=e.startsWith("update:"),i=o&&e.slice(7);if(i&&i in s){const u=`${i==="modelValue"?"model":i}Modifiers`,{number:h,trim:d}=s[u]||bt;d&&(r=t.map(p=>Yt(p)?p.trim():p)),h&&(r=t.map(Ny))}let a,l=s[a=Dm(e)]||s[a=Dm(Ji(e))];!l&&o&&(l=s[a=Dm(wa(e))]),l&&$s(l,n,6,r);const c=s[a+"Once"];if(c){if(!n.emitted)n.emitted={};else if(n.emitted[a])return;n.emitted[a]=!0,$s(c,n,6,r)}}function P$(n,e,t=!1){const s=e.emitsCache,r=s.get(n);if(r!==void 0)return r;const o=n.emits;let i={},a=!1;if(!Ue(n)){const l=c=>{const u=P$(c,e,!0);u&&(a=!0,hn(i,u))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!o&&!a?(vt(n)&&s.set(n,null),null):(Pe(o)?o.forEach(l=>i[l]=null):hn(i,o),vt(n)&&s.set(n,i),i)}function jd(n,e){return!n||!Vd(e)?!1:(e=e.slice(2).replace(/Once$/,""),Qe(n,e[0].toLowerCase()+e.slice(1))||Qe(n,wa(e))||Qe(n,e))}let kn=null,qd=null;function nd(n){const e=kn;return kn=n,qd=n&&n.type.__scopeId||null,e}function z$(n){qd=n}function M$(){qd=null}function ms(n,e=kn,t){if(!e||n._n)return n;const s=(...r)=>{s._d&&i1(-1);const o=nd(e);let i;try{i=n(...r)}finally{nd(o),s._d&&i1(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function Fm(n){const{type:e,vnode:t,proxy:s,withProxy:r,props:o,propsOptions:[i],slots:a,attrs:l,emit:c,render:u,renderCache:h,data:d,setupState:p,ctx:f,inheritAttrs:m}=n;let g,y;const b=nd(n);try{if(t.shapeFlag&4){const x=r||s;g=tr(u.call(x,x,h,o,p,d,f)),y=l}else{const x=e;g=tr(x.length>1?x(o,{attrs:l,slots:a,emit:c}):x(o,null)),y=e.props?l:DE(l)}}catch(x){oc.length=0,Hd(x,n,1),g=Je(Is)}let w=g;if(y&&m!==!1){const x=Object.keys(y),{shapeFlag:$}=w;x.length&&$&7&&(i&&x.some($y)&&(y=OE(y,i)),w=mo(w,y))}return t.dirs&&(w=mo(w),w.dirs=w.dirs?w.dirs.concat(t.dirs):t.dirs),t.transition&&(w.transition=t.transition),g=w,nd(b),g}const DE=n=>{let e;for(const t in n)(t==="class"||t==="style"||Vd(t))&&((e||(e={}))[t]=n[t]);return e},OE=(n,e)=>{const t={};for(const s in n)(!$y(s)||!(s.slice(9)in e))&&(t[s]=n[s]);return t};function FE(n,e,t){const{props:s,children:r,component:o}=n,{props:i,children:a,patchFlag:l}=e,c=o.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return s?Jw(s,i,c):!!i;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const d=u[h];if(i[d]!==s[d]&&!jd(c,d))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:s===i?!1:s?i?Jw(s,i,c):!0:!!i;return!1}function Jw(n,e,t){const s=Object.keys(e);if(s.length!==Object.keys(n).length)return!0;for(let r=0;r<s.length;r++){const o=s[r];if(e[o]!==n[o]&&!jd(t,o))return!0}return!1}function LE({vnode:n,parent:e},t){for(;e&&e.subTree===n;)(n=e.vnode).el=t,e=e.parent}const PE=n=>n.__isSuspense;function zE(n,e){e&&e.pendingBranch?Pe(n)?e.effects.push(...n):e.effects.push(n):_E(n)}function ME(n,e){if(an){let t=an.provides;const s=an.parent&&an.parent.provides;s===t&&(t=an.provides=Object.create(s)),t[n]=e}}function jh(n,e,t=!1){const s=an||kn;if(s){const r=s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(r&&n in r)return r[n];if(arguments.length>1)return t&&Ue(e)?e.call(s.proxy):e}}function BE(n,e){return Py(n,null,e)}const Th={};function Lm(n,e,t){return Py(n,e,t)}function Py(n,e,{immediate:t,deep:s,flush:r,onTrack:o,onTrigger:i}=bt){const a=an;let l,c=!1,u=!1;if(ln(n)?(l=()=>n.value,c=td(n)):qi(n)?(l=()=>n,s=!0):Pe(n)?(u=!0,c=n.some(w=>qi(w)||td(w)),l=()=>n.map(w=>{if(ln(w))return w.value;if(qi(w))return Wi(w);if(Ue(w))return lo(w,a,2)})):Ue(n)?e?l=()=>lo(n,a,2):l=()=>{if(!(a&&a.isUnmounted))return h&&h(),$s(n,a,3,[d])}:l=Ps,e&&s){const w=l;l=()=>Wi(w())}let h,d=w=>{h=y.onStop=()=>{lo(w,a,4)}},p;if(fc)if(d=Ps,e?t&&$s(e,a,3,[l(),u?[]:void 0,d]):l(),r==="sync"){const w=O_();p=w.__watcherHandles||(w.__watcherHandles=[])}else return Ps;let f=u?new Array(n.length).fill(Th):Th;const m=()=>{if(!!y.active)if(e){const w=y.run();(s||c||(u?w.some((x,$)=>lc(x,f[$])):lc(w,f)))&&(h&&h(),$s(e,a,3,[w,f===Th?void 0:u&&f[0]===Th?[]:f,d]),f=w)}else y.run()};m.allowRecurse=!!e;let g;r==="sync"?g=m:r==="post"?g=()=>Pn(m,a&&a.suspense):(m.pre=!0,a&&(m.id=a.uid),g=()=>Ly(m));const y=new ky(l,g);e?t?m():f=y.run():r==="post"?Pn(y.run.bind(y),a&&a.suspense):y.run();const b=()=>{y.stop(),a&&a.scope&&Iy(a.scope.effects,y)};return p&&p.push(b),b}function VE(n,e,t){const s=this.proxy,r=Yt(n)?n.includes(".")?B$(s,n):()=>s[n]:n.bind(s,s);let o;Ue(e)?o=e:(o=e.handler,t=e);const i=an;ea(this);const a=Py(r,o.bind(s),t);return i?ea(i):Jo(),a}function B$(n,e){const t=e.split(".");return()=>{let s=n;for(let r=0;r<t.length&&s;r++)s=s[t[r]];return s}}function Wi(n,e){if(!vt(n)||n.__v_skip||(e=e||new Set,e.has(n)))return n;if(e.add(n),ln(n))Wi(n.value,e);else if(Pe(n))for(let t=0;t<n.length;t++)Wi(n[t],e);else if(h$(n)||ji(n))n.forEach(t=>{Wi(t,e)});else if(f$(n))for(const t in n)Wi(n[t],e);return n}function WE(){const n={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return H$(()=>{n.isMounted=!0}),j$(()=>{n.isUnmounting=!0}),n}const us=[Function,Array],UE={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:us,onEnter:us,onAfterEnter:us,onEnterCancelled:us,onBeforeLeave:us,onLeave:us,onAfterLeave:us,onLeaveCancelled:us,onBeforeAppear:us,onAppear:us,onAfterAppear:us,onAppearCancelled:us},setup(n,{slots:e}){const t=N_(),s=WE();let r;return()=>{const o=e.default&&U$(e.default(),!0);if(!o||!o.length)return;let i=o[0];if(o.length>1){for(const m of o)if(m.type!==Is){i=m;break}}const a=nt(n),{mode:l}=a;if(s.isLeaving)return Pm(i);const c=Qw(i);if(!c)return Pm(i);const u=gg(c,a,s,t);yg(c,u);const h=t.subTree,d=h&&Qw(h);let p=!1;const{getTransitionKey:f}=c.type;if(f){const m=f();r===void 0?r=m:m!==r&&(r=m,p=!0)}if(d&&d.type!==Is&&(!Uo(c,d)||p)){const m=gg(d,a,s,t);if(yg(d,m),l==="out-in")return s.isLeaving=!0,m.afterLeave=()=>{s.isLeaving=!1,t.update.active!==!1&&t.update()},Pm(i);l==="in-out"&&c.type!==Is&&(m.delayLeave=(g,y,b)=>{const w=W$(s,d);w[String(d.key)]=d,g._leaveCb=()=>{y(),g._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=b})}return i}}},V$=UE;function W$(n,e){const{leavingVNodes:t}=n;let s=t.get(e.type);return s||(s=Object.create(null),t.set(e.type,s)),s}function gg(n,e,t,s){const{appear:r,mode:o,persisted:i=!1,onBeforeEnter:a,onEnter:l,onAfterEnter:c,onEnterCancelled:u,onBeforeLeave:h,onLeave:d,onAfterLeave:p,onLeaveCancelled:f,onBeforeAppear:m,onAppear:g,onAfterAppear:y,onAppearCancelled:b}=e,w=String(n.key),x=W$(t,n),$=(C,k)=>{C&&$s(C,s,9,k)},S=(C,k)=>{const E=k[1];$(C,k),Pe(C)?C.every(A=>A.length<=1)&&E():C.length<=1&&E()},I={mode:o,persisted:i,beforeEnter(C){let k=a;if(!t.isMounted)if(r)k=m||a;else return;C._leaveCb&&C._leaveCb(!0);const E=x[w];E&&Uo(n,E)&&E.el._leaveCb&&E.el._leaveCb(),$(k,[C])},enter(C){let k=l,E=c,A=u;if(!t.isMounted)if(r)k=g||l,E=y||c,A=b||u;else return;let _=!1;const O=C._enterCb=M=>{_||(_=!0,M?$(A,[C]):$(E,[C]),I.delayedLeave&&I.delayedLeave(),C._enterCb=void 0)};k?S(k,[C,O]):O()},leave(C,k){const E=String(n.key);if(C._enterCb&&C._enterCb(!0),t.isUnmounting)return k();$(h,[C]);let A=!1;const _=C._leaveCb=O=>{A||(A=!0,k(),O?$(f,[C]):$(p,[C]),C._leaveCb=void 0,x[E]===n&&delete x[E])};x[E]=n,d?S(d,[C,_]):_()},clone(C){return gg(C,e,t,s)}};return I}function Pm(n){if(Kd(n))return n=mo(n),n.children=null,n}function Qw(n){return Kd(n)?n.children?n.children[0]:void 0:n}function yg(n,e){n.shapeFlag&6&&n.component?yg(n.component.subTree,e):n.shapeFlag&128?(n.ssContent.transition=e.clone(n.ssContent),n.ssFallback.transition=e.clone(n.ssFallback)):n.transition=e}function U$(n,e=!1,t){let s=[],r=0;for(let o=0;o<n.length;o++){let i=n[o];const a=t==null?i.key:String(t)+String(i.key!=null?i.key:o);i.type===Jn?(i.patchFlag&128&&r++,s=s.concat(U$(i.children,e,a))):(e||i.type!==Is)&&s.push(a!=null?mo(i,{key:a}):i)}if(r>1)for(let o=0;o<s.length;o++)s[o].patchFlag=-2;return s}function Lr(n){return Ue(n)?{setup:n,name:n.name}:n}const sc=n=>!!n.type.__asyncLoader,Kd=n=>n.type.__isKeepAlive;function GE(n,e){G$(n,"a",e)}function HE(n,e){G$(n,"da",e)}function G$(n,e,t=an){const s=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(Xd(e,s,t),t){let r=t.parent;for(;r&&r.parent;)Kd(r.parent.vnode)&&jE(s,e,t,r),r=r.parent}}function jE(n,e,t,s){const r=Xd(e,n,s,!0);q$(()=>{Iy(s[e],r)},t)}function Xd(n,e,t=an,s=!1){if(t){const r=t[n]||(t[n]=[]),o=e.__weh||(e.__weh=(...i)=>{if(t.isUnmounted)return;va(),ea(t);const a=$s(e,t,n,i);return Jo(),$a(),a});return s?r.unshift(o):r.push(o),o}}const Pr=n=>(e,t=an)=>(!fc||n==="sp")&&Xd(n,(...s)=>e(...s),t),qE=Pr("bm"),H$=Pr("m"),KE=Pr("bu"),XE=Pr("u"),j$=Pr("bum"),q$=Pr("um"),YE=Pr("sp"),ZE=Pr("rtg"),JE=Pr("rtc");function QE(n,e=an){Xd("ec",n,e)}function Do(n,e,t,s){const r=n.dirs,o=e&&e.dirs;for(let i=0;i<r.length;i++){const a=r[i];o&&(a.oldValue=o[i].value);let l=a.dir[s];l&&(va(),$s(l,t,8,[n.el,a,n,e]),$a())}}const e_=Symbol();function K$(n,e,t={},s,r){if(kn.isCE||kn.parent&&sc(kn.parent)&&kn.parent.isCE)return e!=="default"&&(t.name=e),Je("slot",t,s&&s());let o=n[e];o&&o._c&&(o._d=!1),Wt();const i=o&&X$(o(t)),a=oI(Jn,{key:t.key||i&&i.key||`_${e}`},i||(s?s():[]),i&&n._===1?64:-2);return!r&&a.scopeId&&(a.slotScopeIds=[a.scopeId+"-s"]),o&&o._c&&(o._d=!0),a}function X$(n){return n.some(e=>rd(e)?!(e.type===Is||e.type===Jn&&!X$(e.children)):!0)?n:null}const bg=n=>n?aI(n)?Vy(n)||n.proxy:bg(n.parent):null,rc=hn(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>bg(n.parent),$root:n=>bg(n.root),$emit:n=>n.emit,$options:n=>zy(n),$forceUpdate:n=>n.f||(n.f=()=>Ly(n.update)),$nextTick:n=>n.n||(n.n=TE.bind(n.proxy)),$watch:n=>VE.bind(n)}),zm=(n,e)=>n!==bt&&!n.__isScriptSetup&&Qe(n,e),t_={get({_:n},e){const{ctx:t,setupState:s,data:r,props:o,accessCache:i,type:a,appContext:l}=n;let c;if(e[0]!=="$"){const p=i[e];if(p!==void 0)switch(p){case 1:return s[e];case 2:return r[e];case 4:return t[e];case 3:return o[e]}else{if(zm(s,e))return i[e]=1,s[e];if(r!==bt&&Qe(r,e))return i[e]=2,r[e];if((c=n.propsOptions[0])&&Qe(c,e))return i[e]=3,o[e];if(t!==bt&&Qe(t,e))return i[e]=4,t[e];xg&&(i[e]=0)}}const u=rc[e];let h,d;if(u)return e==="$attrs"&&os(n,"get",e),u(n);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==bt&&Qe(t,e))return i[e]=4,t[e];if(d=l.config.globalProperties,Qe(d,e))return d[e]},set({_:n},e,t){const{data:s,setupState:r,ctx:o}=n;return zm(r,e)?(r[e]=t,!0):s!==bt&&Qe(s,e)?(s[e]=t,!0):Qe(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(o[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:s,appContext:r,propsOptions:o}},i){let a;return!!t[i]||n!==bt&&Qe(n,i)||zm(e,i)||(a=o[0])&&Qe(a,i)||Qe(s,i)||Qe(rc,i)||Qe(r.config.globalProperties,i)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:Qe(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};let xg=!0;function n_(n){const e=zy(n),t=n.proxy,s=n.ctx;xg=!1,e.beforeCreate&&e1(e.beforeCreate,n,"bc");const{data:r,computed:o,methods:i,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:d,beforeUpdate:p,updated:f,activated:m,deactivated:g,beforeDestroy:y,beforeUnmount:b,destroyed:w,unmounted:x,render:$,renderTracked:S,renderTriggered:I,errorCaptured:C,serverPrefetch:k,expose:E,inheritAttrs:A,components:_,directives:O,filters:M}=e;if(c&&s_(c,s,null,n.appContext.config.unwrapInjectedRef),i)for(const j in i){const G=i[j];Ue(G)&&(s[j]=G.bind(t))}if(r){const j=r.call(t,t);vt(j)&&(n.data=Ry(j))}if(xg=!0,o)for(const j in o){const G=o[j],Z=Ue(G)?G.bind(t,t):Ue(G.get)?G.get.bind(t,t):Ps,se=!Ue(G)&&Ue(G.set)?G.set.bind(t):Ps,ee=ic({get:Z,set:se});Object.defineProperty(s,j,{enumerable:!0,configurable:!0,get:()=>ee.value,set:oe=>ee.value=oe})}if(a)for(const j in a)Y$(a[j],s,t,j);if(l){const j=Ue(l)?l.call(t):l;Reflect.ownKeys(j).forEach(G=>{ME(G,j[G])})}u&&e1(u,n,"c");function z(j,G){Pe(G)?G.forEach(Z=>j(Z.bind(t))):G&&j(G.bind(t))}if(z(qE,h),z(H$,d),z(KE,p),z(XE,f),z(GE,m),z(HE,g),z(QE,C),z(JE,S),z(ZE,I),z(j$,b),z(q$,x),z(YE,k),Pe(E))if(E.length){const j=n.exposed||(n.exposed={});E.forEach(G=>{Object.defineProperty(j,G,{get:()=>t[G],set:Z=>t[G]=Z})})}else n.exposed||(n.exposed={});$&&n.render===Ps&&(n.render=$),A!=null&&(n.inheritAttrs=A),_&&(n.components=_),O&&(n.directives=O)}function s_(n,e,t=Ps,s=!1){Pe(n)&&(n=wg(n));for(const r in n){const o=n[r];let i;vt(o)?"default"in o?i=jh(o.from||r,o.default,!0):i=jh(o.from||r):i=jh(o),ln(i)&&s?Object.defineProperty(e,r,{enumerable:!0,configurable:!0,get:()=>i.value,set:a=>i.value=a}):e[r]=i}}function e1(n,e,t){$s(Pe(n)?n.map(s=>s.bind(e.proxy)):n.bind(e.proxy),e,t)}function Y$(n,e,t,s){const r=s.includes(".")?B$(t,s):()=>t[s];if(Yt(n)){const o=e[n];Ue(o)&&Lm(r,o)}else if(Ue(n))Lm(r,n.bind(t));else if(vt(n))if(Pe(n))n.forEach(o=>Y$(o,e,t,s));else{const o=Ue(n.handler)?n.handler.bind(t):e[n.handler];Ue(o)&&Lm(r,o,n)}}function zy(n){const e=n.type,{mixins:t,extends:s}=e,{mixins:r,optionsCache:o,config:{optionMergeStrategies:i}}=n.appContext,a=o.get(e);let l;return a?l=a:!r.length&&!t&&!s?l=e:(l={},r.length&&r.forEach(c=>sd(l,c,i,!0)),sd(l,e,i)),vt(e)&&o.set(e,l),l}function sd(n,e,t,s=!1){const{mixins:r,extends:o}=e;o&&sd(n,o,t,!0),r&&r.forEach(i=>sd(n,i,t,!0));for(const i in e)if(!(s&&i==="expose")){const a=r_[i]||t&&t[i];n[i]=a?a(n[i],e[i]):e[i]}return n}const r_={data:t1,props:Mo,emits:Mo,methods:Mo,computed:Mo,beforeCreate:Nn,created:Nn,beforeMount:Nn,mounted:Nn,beforeUpdate:Nn,updated:Nn,beforeDestroy:Nn,beforeUnmount:Nn,destroyed:Nn,unmounted:Nn,activated:Nn,deactivated:Nn,errorCaptured:Nn,serverPrefetch:Nn,components:Mo,directives:Mo,watch:i_,provide:t1,inject:o_};function t1(n,e){return e?n?function(){return hn(Ue(n)?n.call(this,this):n,Ue(e)?e.call(this,this):e)}:e:n}function o_(n,e){return Mo(wg(n),wg(e))}function wg(n){if(Pe(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function Nn(n,e){return n?[...new Set([].concat(n,e))]:e}function Mo(n,e){return n?hn(hn(Object.create(null),n),e):e}function i_(n,e){if(!n)return e;if(!e)return n;const t=hn(Object.create(null),n);for(const s in e)t[s]=Nn(n[s],e[s]);return t}function a_(n,e,t,s=!1){const r={},o={};ed(o,Zd,1),n.propsDefaults=Object.create(null),Z$(n,e,r,o);for(const i in n.propsOptions[0])i in r||(r[i]=void 0);t?n.props=s?r:wE(r):n.type.props?n.props=r:n.props=o,n.attrs=o}function l_(n,e,t,s){const{props:r,attrs:o,vnode:{patchFlag:i}}=n,a=nt(r),[l]=n.propsOptions;let c=!1;if((s||i>0)&&!(i&16)){if(i&8){const u=n.vnode.dynamicProps;for(let h=0;h<u.length;h++){let d=u[h];if(jd(n.emitsOptions,d))continue;const p=e[d];if(l)if(Qe(o,d))p!==o[d]&&(o[d]=p,c=!0);else{const f=Ji(d);r[f]=vg(l,a,f,p,n,!1)}else p!==o[d]&&(o[d]=p,c=!0)}}}else{Z$(n,e,r,o)&&(c=!0);let u;for(const h in a)(!e||!Qe(e,h)&&((u=wa(h))===h||!Qe(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=vg(l,a,h,void 0,n,!0)):delete r[h]);if(o!==a)for(const h in o)(!e||!Qe(e,h)&&!0)&&(delete o[h],c=!0)}c&&kr(n,"set","$attrs")}function Z$(n,e,t,s){const[r,o]=n.propsOptions;let i=!1,a;if(e)for(let l in e){if(Hh(l))continue;const c=e[l];let u;r&&Qe(r,u=Ji(l))?!o||!o.includes(u)?t[u]=c:(a||(a={}))[u]=c:jd(n.emitsOptions,l)||(!(l in s)||c!==s[l])&&(s[l]=c,i=!0)}if(o){const l=nt(t),c=a||bt;for(let u=0;u<o.length;u++){const h=o[u];t[h]=vg(r,l,h,c[h],n,!Qe(c,h))}}return i}function vg(n,e,t,s,r,o){const i=n[t];if(i!=null){const a=Qe(i,"default");if(a&&s===void 0){const l=i.default;if(i.type!==Function&&Ue(l)){const{propsDefaults:c}=r;t in c?s=c[t]:(ea(r),s=c[t]=l.call(null,e),Jo())}else s=l}i[0]&&(o&&!a?s=!1:i[1]&&(s===""||s===wa(t))&&(s=!0))}return s}function J$(n,e,t=!1){const s=e.propsCache,r=s.get(n);if(r)return r;const o=n.props,i={},a=[];let l=!1;if(!Ue(n)){const u=h=>{l=!0;const[d,p]=J$(h,e,!0);hn(i,d),p&&a.push(...p)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!o&&!l)return vt(n)&&s.set(n,Hi),Hi;if(Pe(o))for(let u=0;u<o.length;u++){const h=Ji(o[u]);n1(h)&&(i[h]=bt)}else if(o)for(const u in o){const h=Ji(u);if(n1(h)){const d=o[u],p=i[h]=Pe(d)||Ue(d)?{type:d}:Object.assign({},d);if(p){const f=o1(Boolean,p.type),m=o1(String,p.type);p[0]=f>-1,p[1]=m<0||f<m,(f>-1||Qe(p,"default"))&&a.push(h)}}}const c=[i,a];return vt(n)&&s.set(n,c),c}function n1(n){return n[0]!=="$"}function s1(n){const e=n&&n.toString().match(/^\s*function (\w+)/);return e?e[1]:n===null?"null":""}function r1(n,e){return s1(n)===s1(e)}function o1(n,e){return Pe(e)?e.findIndex(t=>r1(t,n)):Ue(e)&&r1(e,n)?0:-1}const Q$=n=>n[0]==="_"||n==="$stable",My=n=>Pe(n)?n.map(tr):[tr(n)],c_=(n,e,t)=>{if(e._n)return e;const s=ms((...r)=>My(e(...r)),t);return s._c=!1,s},eI=(n,e,t)=>{const s=n._ctx;for(const r in n){if(Q$(r))continue;const o=n[r];if(Ue(o))e[r]=c_(r,o,s);else if(o!=null){const i=My(o);e[r]=()=>i}}},tI=(n,e)=>{const t=My(e);n.slots.default=()=>t},u_=(n,e)=>{if(n.vnode.shapeFlag&32){const t=e._;t?(n.slots=nt(e),ed(e,"_",t)):eI(e,n.slots={})}else n.slots={},e&&tI(n,e);ed(n.slots,Zd,1)},h_=(n,e,t)=>{const{vnode:s,slots:r}=n;let o=!0,i=bt;if(s.shapeFlag&32){const a=e._;a?t&&a===1?o=!1:(hn(r,e),!t&&a===1&&delete r._):(o=!e.$stable,eI(e,r)),i=e}else e&&(tI(n,e),i={default:1});if(o)for(const a in r)!Q$(a)&&!(a in i)&&delete r[a]};function nI(){return{app:null,config:{isNativeTag:B2,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let d_=0;function p_(n,e){return function(s,r=null){Ue(s)||(s=Object.assign({},s)),r!=null&&!vt(r)&&(r=null);const o=nI(),i=new Set;let a=!1;const l=o.app={_uid:d_++,_component:s,_props:r,_container:null,_context:o,_instance:null,version:F_,get config(){return o.config},set config(c){},use(c,...u){return i.has(c)||(c&&Ue(c.install)?(i.add(c),c.install(l,...u)):Ue(c)&&(i.add(c),c(l,...u))),l},mixin(c){return o.mixins.includes(c)||o.mixins.push(c),l},component(c,u){return u?(o.components[c]=u,l):o.components[c]},directive(c,u){return u?(o.directives[c]=u,l):o.directives[c]},mount(c,u,h){if(!a){const d=Je(s,r);return d.appContext=o,u&&e?e(d,c):n(d,c,h),a=!0,l._container=c,c.__vue_app__=l,Vy(d.component)||d.component.proxy}},unmount(){a&&(n(null,l._container),delete l._container.__vue_app__)},provide(c,u){return o.provides[c]=u,l}};return l}}function $g(n,e,t,s,r=!1){if(Pe(n)){n.forEach((d,p)=>$g(d,e&&(Pe(e)?e[p]:e),t,s,r));return}if(sc(s)&&!r)return;const o=s.shapeFlag&4?Vy(s.component)||s.component.proxy:s.el,i=r?null:o,{i:a,r:l}=n,c=e&&e.r,u=a.refs===bt?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(Yt(c)?(u[c]=null,Qe(h,c)&&(h[c]=null)):ln(c)&&(c.value=null)),Ue(l))lo(l,a,12,[i,u]);else{const d=Yt(l),p=ln(l);if(d||p){const f=()=>{if(n.f){const m=d?Qe(h,l)?h[l]:u[l]:l.value;r?Pe(m)&&Iy(m,o):Pe(m)?m.includes(o)||m.push(o):d?(u[l]=[o],Qe(h,l)&&(h[l]=u[l])):(l.value=[o],n.k&&(u[n.k]=l.value))}else d?(u[l]=i,Qe(h,l)&&(h[l]=i)):p&&(l.value=i,n.k&&(u[n.k]=i))};i?(f.id=-1,Pn(f,t)):f()}}}const Pn=zE;function f_(n){return m_(n)}function m_(n,e){const t=j2();t.__VUE__=!0;const{insert:s,remove:r,patchProp:o,createElement:i,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:d,setScopeId:p=Ps,insertStaticContent:f}=n,m=(R,B,q,J=null,Y=null,ne=null,ce=!1,le=null,ie=!!B.dynamicChildren)=>{if(R===B)return;R&&!Uo(R,B)&&(J=ve(R),oe(R,Y,ne,!0),R=null),B.patchFlag===-2&&(ie=!1,B.dynamicChildren=null);const{type:re,ref:xe,shapeFlag:be}=B;switch(re){case Yd:g(R,B,q,J);break;case Is:y(R,B,q,J);break;case qh:R==null&&b(B,q,J,ce);break;case Jn:_(R,B,q,J,Y,ne,ce,le,ie);break;default:be&1?$(R,B,q,J,Y,ne,ce,le,ie):be&6?O(R,B,q,J,Y,ne,ce,le,ie):(be&64||be&128)&&re.process(R,B,q,J,Y,ne,ce,le,ie,Ne)}xe!=null&&Y&&$g(xe,R&&R.ref,ne,B||R,!B)},g=(R,B,q,J)=>{if(R==null)s(B.el=a(B.children),q,J);else{const Y=B.el=R.el;B.children!==R.children&&c(Y,B.children)}},y=(R,B,q,J)=>{R==null?s(B.el=l(B.children||""),q,J):B.el=R.el},b=(R,B,q,J)=>{[R.el,R.anchor]=f(R.children,B,q,J,R.el,R.anchor)},w=({el:R,anchor:B},q,J)=>{let Y;for(;R&&R!==B;)Y=d(R),s(R,q,J),R=Y;s(B,q,J)},x=({el:R,anchor:B})=>{let q;for(;R&&R!==B;)q=d(R),r(R),R=q;r(B)},$=(R,B,q,J,Y,ne,ce,le,ie)=>{ce=ce||B.type==="svg",R==null?S(B,q,J,Y,ne,ce,le,ie):k(R,B,Y,ne,ce,le,ie)},S=(R,B,q,J,Y,ne,ce,le)=>{let ie,re;const{type:xe,props:be,shapeFlag:Ie,transition:_e,dirs:Fe}=R;if(ie=R.el=i(R.type,ne,be&&be.is,be),Ie&8?u(ie,R.children):Ie&16&&C(R.children,ie,null,J,Y,ne&&xe!=="foreignObject",ce,le),Fe&&Do(R,null,J,"created"),be){for(const je in be)je!=="value"&&!Hh(je)&&o(ie,je,null,be[je],ne,R.children,J,Y,de);"value"in be&&o(ie,"value",null,be.value),(re=be.onVnodeBeforeMount)&&Js(re,J,R)}I(ie,R,R.scopeId,ce,J),Fe&&Do(R,null,J,"beforeMount");const Xe=(!Y||Y&&!Y.pendingBranch)&&_e&&!_e.persisted;Xe&&_e.beforeEnter(ie),s(ie,B,q),((re=be&&be.onVnodeMounted)||Xe||Fe)&&Pn(()=>{re&&Js(re,J,R),Xe&&_e.enter(ie),Fe&&Do(R,null,J,"mounted")},Y)},I=(R,B,q,J,Y)=>{if(q&&p(R,q),J)for(let ne=0;ne<J.length;ne++)p(R,J[ne]);if(Y){let ne=Y.subTree;if(B===ne){const ce=Y.vnode;I(R,ce,ce.scopeId,ce.slotScopeIds,Y.parent)}}},C=(R,B,q,J,Y,ne,ce,le,ie=0)=>{for(let re=ie;re<R.length;re++){const xe=R[re]=le?eo(R[re]):tr(R[re]);m(null,xe,B,q,J,Y,ne,ce,le)}},k=(R,B,q,J,Y,ne,ce)=>{const le=B.el=R.el;let{patchFlag:ie,dynamicChildren:re,dirs:xe}=B;ie|=R.patchFlag&16;const be=R.props||bt,Ie=B.props||bt;let _e;q&&Oo(q,!1),(_e=Ie.onVnodeBeforeUpdate)&&Js(_e,q,B,R),xe&&Do(B,R,q,"beforeUpdate"),q&&Oo(q,!0);const Fe=Y&&B.type!=="foreignObject";if(re?E(R.dynamicChildren,re,le,q,J,Fe,ne):ce||G(R,B,le,null,q,J,Fe,ne,!1),ie>0){if(ie&16)A(le,B,be,Ie,q,J,Y);else if(ie&2&&be.class!==Ie.class&&o(le,"class",null,Ie.class,Y),ie&4&&o(le,"style",be.style,Ie.style,Y),ie&8){const Xe=B.dynamicProps;for(let je=0;je<Xe.length;je++){const ut=Xe[je],Cn=be[ut],Xs=Ie[ut];(Xs!==Cn||ut==="value")&&o(le,ut,Cn,Xs,Y,R.children,q,J,de)}}ie&1&&R.children!==B.children&&u(le,B.children)}else!ce&&re==null&&A(le,B,be,Ie,q,J,Y);((_e=Ie.onVnodeUpdated)||xe)&&Pn(()=>{_e&&Js(_e,q,B,R),xe&&Do(B,R,q,"updated")},J)},E=(R,B,q,J,Y,ne,ce)=>{for(let le=0;le<B.length;le++){const ie=R[le],re=B[le],xe=ie.el&&(ie.type===Jn||!Uo(ie,re)||ie.shapeFlag&70)?h(ie.el):q;m(ie,re,xe,null,J,Y,ne,ce,!0)}},A=(R,B,q,J,Y,ne,ce)=>{if(q!==J){if(q!==bt)for(const le in q)!Hh(le)&&!(le in J)&&o(R,le,q[le],null,ce,B.children,Y,ne,de);for(const le in J){if(Hh(le))continue;const ie=J[le],re=q[le];ie!==re&&le!=="value"&&o(R,le,re,ie,ce,B.children,Y,ne,de)}"value"in J&&o(R,"value",q.value,J.value)}},_=(R,B,q,J,Y,ne,ce,le,ie)=>{const re=B.el=R?R.el:a(""),xe=B.anchor=R?R.anchor:a("");let{patchFlag:be,dynamicChildren:Ie,slotScopeIds:_e}=B;_e&&(le=le?le.concat(_e):_e),R==null?(s(re,q,J),s(xe,q,J),C(B.children,q,xe,Y,ne,ce,le,ie)):be>0&&be&64&&Ie&&R.dynamicChildren?(E(R.dynamicChildren,Ie,q,Y,ne,ce,le),(B.key!=null||Y&&B===Y.subTree)&&sI(R,B,!0)):G(R,B,q,xe,Y,ne,ce,le,ie)},O=(R,B,q,J,Y,ne,ce,le,ie)=>{B.slotScopeIds=le,R==null?B.shapeFlag&512?Y.ctx.activate(B,q,J,ce,ie):M(B,q,J,Y,ne,ce,ie):W(R,B,ie)},M=(R,B,q,J,Y,ne,ce)=>{const le=R.component=S_(R,J,Y);if(Kd(R)&&(le.ctx.renderer=Ne),T_(le),le.asyncDep){if(Y&&Y.registerDep(le,z),!R.el){const ie=le.subTree=Je(Is);y(null,ie,B,q)}return}z(le,R,B,q,Y,ne,ce)},W=(R,B,q)=>{const J=B.component=R.component;if(FE(R,B,q))if(J.asyncDep&&!J.asyncResolved){j(J,B,q);return}else J.next=B,EE(J.update),J.update();else B.el=R.el,J.vnode=B},z=(R,B,q,J,Y,ne,ce)=>{const le=()=>{if(R.isMounted){let{next:xe,bu:be,u:Ie,parent:_e,vnode:Fe}=R,Xe=xe,je;Oo(R,!1),xe?(xe.el=Fe.el,j(R,xe,ce)):xe=Fe,be&&Om(be),(je=xe.props&&xe.props.onVnodeBeforeUpdate)&&Js(je,_e,xe,Fe),Oo(R,!0);const ut=Fm(R),Cn=R.subTree;R.subTree=ut,m(Cn,ut,h(Cn.el),ve(Cn),R,Y,ne),xe.el=ut.el,Xe===null&&LE(R,ut.el),Ie&&Pn(Ie,Y),(je=xe.props&&xe.props.onVnodeUpdated)&&Pn(()=>Js(je,_e,xe,Fe),Y)}else{let xe;const{el:be,props:Ie}=B,{bm:_e,m:Fe,parent:Xe}=R,je=sc(B);if(Oo(R,!1),_e&&Om(_e),!je&&(xe=Ie&&Ie.onVnodeBeforeMount)&&Js(xe,Xe,B),Oo(R,!0),be&&Me){const ut=()=>{R.subTree=Fm(R),Me(be,R.subTree,R,Y,null)};je?B.type.__asyncLoader().then(()=>!R.isUnmounted&&ut()):ut()}else{const ut=R.subTree=Fm(R);m(null,ut,q,J,R,Y,ne),B.el=ut.el}if(Fe&&Pn(Fe,Y),!je&&(xe=Ie&&Ie.onVnodeMounted)){const ut=B;Pn(()=>Js(xe,Xe,ut),Y)}(B.shapeFlag&256||Xe&&sc(Xe.vnode)&&Xe.vnode.shapeFlag&256)&&R.a&&Pn(R.a,Y),R.isMounted=!0,B=q=J=null}},ie=R.effect=new ky(le,()=>Ly(re),R.scope),re=R.update=()=>ie.run();re.id=R.uid,Oo(R,!0),re()},j=(R,B,q)=>{B.component=R;const J=R.vnode.props;R.vnode=B,R.next=null,l_(R,B.props,J,q),h_(R,B.children,q),va(),Zw(),$a()},G=(R,B,q,J,Y,ne,ce,le,ie=!1)=>{const re=R&&R.children,xe=R?R.shapeFlag:0,be=B.children,{patchFlag:Ie,shapeFlag:_e}=B;if(Ie>0){if(Ie&128){se(re,be,q,J,Y,ne,ce,le,ie);return}else if(Ie&256){Z(re,be,q,J,Y,ne,ce,le,ie);return}}_e&8?(xe&16&&de(re,Y,ne),be!==re&&u(q,be)):xe&16?_e&16?se(re,be,q,J,Y,ne,ce,le,ie):de(re,Y,ne,!0):(xe&8&&u(q,""),_e&16&&C(be,q,J,Y,ne,ce,le,ie))},Z=(R,B,q,J,Y,ne,ce,le,ie)=>{R=R||Hi,B=B||Hi;const re=R.length,xe=B.length,be=Math.min(re,xe);let Ie;for(Ie=0;Ie<be;Ie++){const _e=B[Ie]=ie?eo(B[Ie]):tr(B[Ie]);m(R[Ie],_e,q,null,Y,ne,ce,le,ie)}re>xe?de(R,Y,ne,!0,!1,be):C(B,q,J,Y,ne,ce,le,ie,be)},se=(R,B,q,J,Y,ne,ce,le,ie)=>{let re=0;const xe=B.length;let be=R.length-1,Ie=xe-1;for(;re<=be&&re<=Ie;){const _e=R[re],Fe=B[re]=ie?eo(B[re]):tr(B[re]);if(Uo(_e,Fe))m(_e,Fe,q,null,Y,ne,ce,le,ie);else break;re++}for(;re<=be&&re<=Ie;){const _e=R[be],Fe=B[Ie]=ie?eo(B[Ie]):tr(B[Ie]);if(Uo(_e,Fe))m(_e,Fe,q,null,Y,ne,ce,le,ie);else break;be--,Ie--}if(re>be){if(re<=Ie){const _e=Ie+1,Fe=_e<xe?B[_e].el:J;for(;re<=Ie;)m(null,B[re]=ie?eo(B[re]):tr(B[re]),q,Fe,Y,ne,ce,le,ie),re++}}else if(re>Ie)for(;re<=be;)oe(R[re],Y,ne,!0),re++;else{const _e=re,Fe=re,Xe=new Map;for(re=Fe;re<=Ie;re++){const Sn=B[re]=ie?eo(B[re]):tr(B[re]);Sn.key!=null&&Xe.set(Sn.key,re)}let je,ut=0;const Cn=Ie-Fe+1;let Xs=!1,xh=0;const Ys=new Array(Cn);for(re=0;re<Cn;re++)Ys[re]=0;for(re=_e;re<=be;re++){const Sn=R[re];if(ut>=Cn){oe(Sn,Y,ne,!0);continue}let Zs;if(Sn.key!=null)Zs=Xe.get(Sn.key);else for(je=Fe;je<=Ie;je++)if(Ys[je-Fe]===0&&Uo(Sn,B[je])){Zs=je;break}Zs===void 0?oe(Sn,Y,ne,!0):(Ys[Zs-Fe]=re+1,Zs>=xh?xh=Zs:Xs=!0,m(Sn,B[Zs],q,null,Y,ne,ce,le,ie),ut++)}const wh=Xs?g_(Ys):Hi;for(je=wh.length-1,re=Cn-1;re>=0;re--){const Sn=Fe+re,Zs=B[Sn],Ww=Sn+1<xe?B[Sn+1].el:J;Ys[re]===0?m(null,Zs,q,Ww,Y,ne,ce,le,ie):Xs&&(je<0||re!==wh[je]?ee(Zs,q,Ww,2):je--)}}},ee=(R,B,q,J,Y=null)=>{const{el:ne,type:ce,transition:le,children:ie,shapeFlag:re}=R;if(re&6){ee(R.component.subTree,B,q,J);return}if(re&128){R.suspense.move(B,q,J);return}if(re&64){ce.move(R,B,q,Ne);return}if(ce===Jn){s(ne,B,q);for(let be=0;be<ie.length;be++)ee(ie[be],B,q,J);s(R.anchor,B,q);return}if(ce===qh){w(R,B,q);return}if(J!==2&&re&1&&le)if(J===0)le.beforeEnter(ne),s(ne,B,q),Pn(()=>le.enter(ne),Y);else{const{leave:be,delayLeave:Ie,afterLeave:_e}=le,Fe=()=>s(ne,B,q),Xe=()=>{be(ne,()=>{Fe(),_e&&_e()})};Ie?Ie(ne,Fe,Xe):Xe()}else s(ne,B,q)},oe=(R,B,q,J=!1,Y=!1)=>{const{type:ne,props:ce,ref:le,children:ie,dynamicChildren:re,shapeFlag:xe,patchFlag:be,dirs:Ie}=R;if(le!=null&&$g(le,null,q,R,!0),xe&256){B.ctx.deactivate(R);return}const _e=xe&1&&Ie,Fe=!sc(R);let Xe;if(Fe&&(Xe=ce&&ce.onVnodeBeforeUnmount)&&Js(Xe,B,R),xe&6)ue(R.component,q,J);else{if(xe&128){R.suspense.unmount(q,J);return}_e&&Do(R,null,B,"beforeUnmount"),xe&64?R.type.remove(R,B,q,Y,Ne,J):re&&(ne!==Jn||be>0&&be&64)?de(re,B,q,!1,!0):(ne===Jn&&be&384||!Y&&xe&16)&&de(ie,B,q),J&&ae(R)}(Fe&&(Xe=ce&&ce.onVnodeUnmounted)||_e)&&Pn(()=>{Xe&&Js(Xe,B,R),_e&&Do(R,null,B,"unmounted")},q)},ae=R=>{const{type:B,el:q,anchor:J,transition:Y}=R;if(B===Jn){fe(q,J);return}if(B===qh){x(R);return}const ne=()=>{r(q),Y&&!Y.persisted&&Y.afterLeave&&Y.afterLeave()};if(R.shapeFlag&1&&Y&&!Y.persisted){const{leave:ce,delayLeave:le}=Y,ie=()=>ce(q,ne);le?le(R.el,ne,ie):ie()}else ne()},fe=(R,B)=>{let q;for(;R!==B;)q=d(R),r(R),R=q;r(B)},ue=(R,B,q)=>{const{bum:J,scope:Y,update:ne,subTree:ce,um:le}=R;J&&Om(J),Y.stop(),ne&&(ne.active=!1,oe(ce,R,B,q)),le&&Pn(le,B),Pn(()=>{R.isUnmounted=!0},B),B&&B.pendingBranch&&!B.isUnmounted&&R.asyncDep&&!R.asyncResolved&&R.suspenseId===B.pendingId&&(B.deps--,B.deps===0&&B.resolve())},de=(R,B,q,J=!1,Y=!1,ne=0)=>{for(let ce=ne;ce<R.length;ce++)oe(R[ce],B,q,J,Y)},ve=R=>R.shapeFlag&6?ve(R.component.subTree):R.shapeFlag&128?R.suspense.next():d(R.anchor||R.el),Ee=(R,B,q)=>{R==null?B._vnode&&oe(B._vnode,null,null,!0):m(B._vnode||null,R,B,null,null,null,q),Zw(),F$(),B._vnode=R},Ne={p:m,um:oe,m:ee,r:ae,mt:M,mc:C,pc:G,pbc:E,n:ve,o:n};let Re,Me;return e&&([Re,Me]=e(Ne)),{render:Ee,hydrate:Re,createApp:p_(Ee,Re)}}function Oo({effect:n,update:e},t){n.allowRecurse=e.allowRecurse=t}function sI(n,e,t=!1){const s=n.children,r=e.children;if(Pe(s)&&Pe(r))for(let o=0;o<s.length;o++){const i=s[o];let a=r[o];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[o]=eo(r[o]),a.el=i.el),t||sI(i,a)),a.type===Yd&&(a.el=i.el)}}function g_(n){const e=n.slice(),t=[0];let s,r,o,i,a;const l=n.length;for(s=0;s<l;s++){const c=n[s];if(c!==0){if(r=t[t.length-1],n[r]<c){e[s]=r,t.push(s);continue}for(o=0,i=t.length-1;o<i;)a=o+i>>1,n[t[a]]<c?o=a+1:i=a;c<n[t[o]]&&(o>0&&(e[s]=t[o-1]),t[o]=s)}}for(o=t.length,i=t[o-1];o-- >0;)t[o]=i,i=e[i];return t}const y_=n=>n.__isTeleport,Jn=Symbol(void 0),Yd=Symbol(void 0),Is=Symbol(void 0),qh=Symbol(void 0),oc=[];let Os=null;function Wt(n=!1){oc.push(Os=n?null:[])}function b_(){oc.pop(),Os=oc[oc.length-1]||null}let dc=1;function i1(n){dc+=n}function rI(n){return n.dynamicChildren=dc>0?Os||Hi:null,b_(),dc>0&&Os&&Os.push(n),n}function un(n,e,t,s,r,o){return rI(et(n,e,t,s,r,o,!0))}function oI(n,e,t,s,r){return rI(Je(n,e,t,s,r,!0))}function rd(n){return n?n.__v_isVNode===!0:!1}function Uo(n,e){return n.type===e.type&&n.key===e.key}const Zd="__vInternal",iI=({key:n})=>n??null,Kh=({ref:n,ref_key:e,ref_for:t})=>n!=null?Yt(n)||ln(n)||Ue(n)?{i:kn,r:n,k:e,f:!!t}:n:null;function et(n,e=null,t=null,s=0,r=null,o=n===Jn?0:1,i=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&iI(e),ref:e&&Kh(e),scopeId:qd,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:s,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:kn};return a?(By(l,t),o&128&&n.normalize(l)):t&&(l.shapeFlag|=Yt(t)?8:16),dc>0&&!i&&Os&&(l.patchFlag>0||o&6)&&l.patchFlag!==32&&Os.push(l),l}const Je=x_;function x_(n,e=null,t=null,s=0,r=null,o=!1){if((!n||n===e_)&&(n=Is),rd(n)){const a=mo(n,e,!0);return t&&By(a,t),dc>0&&!o&&Os&&(a.shapeFlag&6?Os[Os.indexOf(n)]=a:Os.push(a)),a.patchFlag|=-2,a}if(A_(n)&&(n=n.__vccOpts),e){e=w_(e);let{class:a,style:l}=e;a&&!Yt(a)&&(e.class=xa(a)),vt(l)&&(T$(l)&&!Pe(l)&&(l=hn({},l)),e.style=vy(l))}const i=Yt(n)?1:PE(n)?128:y_(n)?64:vt(n)?4:Ue(n)?2:0;return et(n,e,t,s,r,i,o,!0)}function w_(n){return n?T$(n)||Zd in n?hn({},n):n:null}function mo(n,e,t=!1){const{props:s,ref:r,patchFlag:o,children:i}=n,a=e?$_(s||{},e):s;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:a,key:a&&iI(a),ref:e&&e.ref?t&&r?Pe(r)?r.concat(Kh(e)):[r,Kh(e)]:Kh(e):r,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:i,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==Jn?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&mo(n.ssContent),ssFallback:n.ssFallback&&mo(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx}}function er(n=" ",e=0){return Je(Yd,null,n,e)}function v_(n,e){const t=Je(qh,null,n);return t.staticCount=e,t}function pc(n="",e=!1){return e?(Wt(),oI(Is,null,n)):Je(Is,null,n)}function tr(n){return n==null||typeof n=="boolean"?Je(Is):Pe(n)?Je(Jn,null,n.slice()):typeof n=="object"?eo(n):Je(Yd,null,String(n))}function eo(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:mo(n)}function By(n,e){let t=0;const{shapeFlag:s}=n;if(e==null)e=null;else if(Pe(e))t=16;else if(typeof e=="object")if(s&65){const r=e.default;r&&(r._c&&(r._d=!1),By(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!(Zd in e)?e._ctx=kn:r===3&&kn&&(kn.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else Ue(e)?(e={default:e,_ctx:kn},t=32):(e=String(e),s&64?(t=16,e=[er(e)]):t=8);n.children=e,n.shapeFlag|=t}function $_(...n){const e={};for(let t=0;t<n.length;t++){const s=n[t];for(const r in s)if(r==="class")e.class!==s.class&&(e.class=xa([e.class,s.class]));else if(r==="style")e.style=vy([e.style,s.style]);else if(Vd(r)){const o=e[r],i=s[r];i&&o!==i&&!(Pe(o)&&o.includes(i))&&(e[r]=o?[].concat(o,i):i)}else r!==""&&(e[r]=s[r])}return e}function Js(n,e,t,s=null){$s(n,e,7,[t,s])}const I_=nI();let C_=0;function S_(n,e,t){const s=n.type,r=(e?e.appContext:n.appContext)||I_,o={uid:C_++,vnode:n,type:s,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new q2(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:J$(s,r),emitsOptions:P$(s,r),emit:null,emitted:null,propsDefaults:bt,inheritAttrs:s.inheritAttrs,ctx:bt,data:bt,props:bt,attrs:bt,slots:bt,refs:bt,setupState:bt,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=e?e.root:o,o.emit=RE.bind(null,o),n.ce&&n.ce(o),o}let an=null;const N_=()=>an||kn,ea=n=>{an=n,n.scope.on()},Jo=()=>{an&&an.scope.off(),an=null};function aI(n){return n.vnode.shapeFlag&4}let fc=!1;function T_(n,e=!1){fc=e;const{props:t,children:s}=n.vnode,r=aI(n);a_(n,t,r,e),u_(n,s);const o=r?k_(n,e):void 0;return fc=!1,o}function k_(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=k$(new Proxy(n.ctx,t_));const{setup:s}=t;if(s){const r=n.setupContext=s.length>1?__(n):null;ea(n),va();const o=lo(s,n,0,[n.props,r]);if($a(),Jo(),d$(o)){if(o.then(Jo,Jo),e)return o.then(i=>{a1(n,i,e)}).catch(i=>{Hd(i,n,0)});n.asyncDep=o}else a1(n,o,e)}else lI(n,e)}function a1(n,e,t){Ue(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:vt(e)&&(n.setupState=A$(e)),lI(n,t)}let l1;function lI(n,e,t){const s=n.type;if(!n.render){if(!e&&l1&&!s.render){const r=s.template||zy(n).template;if(r){const{isCustomElement:o,compilerOptions:i}=n.appContext.config,{delimiters:a,compilerOptions:l}=s,c=hn(hn({isCustomElement:o,delimiters:a},i),l);s.render=l1(r,c)}}n.render=s.render||Ps}ea(n),va(),n_(n),$a(),Jo()}function E_(n){return new Proxy(n.attrs,{get(e,t){return os(n,"get","$attrs"),e[t]}})}function __(n){const e=s=>{n.exposed=s||{}};let t;return{get attrs(){return t||(t=E_(n))},slots:n.slots,emit:n.emit,expose:e}}function Vy(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(A$(k$(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in rc)return rc[t](n)},has(e,t){return t in e||t in rc}}))}function A_(n){return Ue(n)&&"__vccOpts"in n}const ic=(n,e)=>SE(n,e,fc);function R_(n,e,t){const s=arguments.length;return s===2?vt(e)&&!Pe(e)?rd(e)?Je(n,null,[e]):Je(n,e):Je(n,null,e):(s>3?t=Array.prototype.slice.call(arguments,2):s===3&&rd(t)&&(t=[t]),Je(n,e,t))}const D_=Symbol(""),O_=()=>jh(D_),F_="3.2.45",L_="http://www.w3.org/2000/svg",Go=typeof document<"u"?document:null,c1=Go&&Go.createElement("template"),P_={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,s)=>{const r=e?Go.createElementNS(L_,n):Go.createElement(n,t?{is:t}:void 0);return n==="select"&&s&&s.multiple!=null&&r.setAttribute("multiple",s.multiple),r},createText:n=>Go.createTextNode(n),createComment:n=>Go.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Go.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,s,r,o){const i=t?t.previousSibling:e.lastChild;if(r&&(r===o||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===o||!(r=r.nextSibling)););else{c1.innerHTML=s?`<svg>${n}</svg>`:n;const a=c1.content;if(s){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[i?i.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}};function z_(n,e,t){const s=n._vtc;s&&(e=(e?[e,...s]:[...s]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}function M_(n,e,t){const s=n.style,r=Yt(t);if(t&&!r){for(const o in t)Ig(s,o,t[o]);if(e&&!Yt(e))for(const o in e)t[o]==null&&Ig(s,o,"")}else{const o=s.display;r?e!==t&&(s.cssText=t):e&&n.removeAttribute("style"),"_vod"in n&&(s.display=o)}}const u1=/\s*!important$/;function Ig(n,e,t){if(Pe(t))t.forEach(s=>Ig(n,e,s));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const s=B_(n,e);u1.test(t)?n.setProperty(wa(s),t.replace(u1,""),"important"):n[s]=t}}const h1=["Webkit","Moz","ms"],Mm={};function B_(n,e){const t=Mm[e];if(t)return t;let s=Ji(e);if(s!=="filter"&&s in n)return Mm[e]=s;s=m$(s);for(let r=0;r<h1.length;r++){const o=h1[r]+s;if(o in n)return Mm[e]=o}return e}const d1="http://www.w3.org/1999/xlink";function V_(n,e,t,s,r){if(s&&e.startsWith("xlink:"))t==null?n.removeAttributeNS(d1,e.slice(6,e.length)):n.setAttributeNS(d1,e,t);else{const o=M2(e);t==null||o&&!c$(t)?n.removeAttribute(e):n.setAttribute(e,o?"":t)}}function W_(n,e,t,s,r,o,i){if(e==="innerHTML"||e==="textContent"){s&&i(s,r,o),n[e]=t??"";return}if(e==="value"&&n.tagName!=="PROGRESS"&&!n.tagName.includes("-")){n._value=t;const l=t??"";(n.value!==l||n.tagName==="OPTION")&&(n.value=l),t==null&&n.removeAttribute(e);return}let a=!1;if(t===""||t==null){const l=typeof n[e];l==="boolean"?t=c$(t):t==null&&l==="string"?(t="",a=!0):l==="number"&&(t=0,a=!0)}try{n[e]=t}catch{}a&&n.removeAttribute(e)}function U_(n,e,t,s){n.addEventListener(e,t,s)}function G_(n,e,t,s){n.removeEventListener(e,t,s)}function H_(n,e,t,s,r=null){const o=n._vei||(n._vei={}),i=o[e];if(s&&i)i.value=s;else{const[a,l]=j_(e);if(s){const c=o[e]=X_(s,r);U_(n,a,c,l)}else i&&(G_(n,a,i,l),o[e]=void 0)}}const p1=/(?:Once|Passive|Capture)$/;function j_(n){let e;if(p1.test(n)){e={};let s;for(;s=n.match(p1);)n=n.slice(0,n.length-s[0].length),e[s[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):wa(n.slice(2)),e]}let Bm=0;const q_=Promise.resolve(),K_=()=>Bm||(q_.then(()=>Bm=0),Bm=Date.now());function X_(n,e){const t=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=t.attached)return;$s(Y_(s,t.value),e,5,[s])};return t.value=n,t.attached=K_(),t}function Y_(n,e){if(Pe(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(s=>r=>!r._stopped&&s&&s(r))}else return e}const f1=/^on[a-z]/,Z_=(n,e,t,s,r=!1,o,i,a,l)=>{e==="class"?z_(n,s,r):e==="style"?M_(n,t,s):Vd(e)?$y(e)||H_(n,e,t,s,i):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):J_(n,e,s,r))?W_(n,e,s,o,i,a,l):(e==="true-value"?n._trueValue=s:e==="false-value"&&(n._falseValue=s),V_(n,e,s,r))};function J_(n,e,t,s){return s?!!(e==="innerHTML"||e==="textContent"||e in n&&f1.test(e)&&Ue(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA"||f1.test(e)&&Yt(t)?!1:e in n}const Kr="transition",Gl="animation",Jd=(n,{slots:e})=>R_(V$,Q_(n),e);Jd.displayName="Transition";const cI={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};Jd.props=hn({},V$.props,cI);const Fo=(n,e=[])=>{Pe(n)?n.forEach(t=>t(...e)):n&&n(...e)},m1=n=>n?Pe(n)?n.some(e=>e.length>1):n.length>1:!1;function Q_(n){const e={};for(const _ in n)_ in cI||(e[_]=n[_]);if(n.css===!1)return e;const{name:t="v",type:s,duration:r,enterFromClass:o=`${t}-enter-from`,enterActiveClass:i=`${t}-enter-active`,enterToClass:a=`${t}-enter-to`,appearFromClass:l=o,appearActiveClass:c=i,appearToClass:u=a,leaveFromClass:h=`${t}-leave-from`,leaveActiveClass:d=`${t}-leave-active`,leaveToClass:p=`${t}-leave-to`}=n,f=eA(r),m=f&&f[0],g=f&&f[1],{onBeforeEnter:y,onEnter:b,onEnterCancelled:w,onLeave:x,onLeaveCancelled:$,onBeforeAppear:S=y,onAppear:I=b,onAppearCancelled:C=w}=e,k=(_,O,M)=>{Lo(_,O?u:a),Lo(_,O?c:i),M&&M()},E=(_,O)=>{_._isLeaving=!1,Lo(_,h),Lo(_,p),Lo(_,d),O&&O()},A=_=>(O,M)=>{const W=_?I:b,z=()=>k(O,_,M);Fo(W,[O,z]),g1(()=>{Lo(O,_?l:o),Xr(O,_?u:a),m1(W)||y1(O,s,m,z)})};return hn(e,{onBeforeEnter(_){Fo(y,[_]),Xr(_,o),Xr(_,i)},onBeforeAppear(_){Fo(S,[_]),Xr(_,l),Xr(_,c)},onEnter:A(!1),onAppear:A(!0),onLeave(_,O){_._isLeaving=!0;const M=()=>E(_,O);Xr(_,h),sA(),Xr(_,d),g1(()=>{!_._isLeaving||(Lo(_,h),Xr(_,p),m1(x)||y1(_,s,g,M))}),Fo(x,[_,M])},onEnterCancelled(_){k(_,!1),Fo(w,[_])},onAppearCancelled(_){k(_,!0),Fo(C,[_])},onLeaveCancelled(_){E(_),Fo($,[_])}})}function eA(n){if(n==null)return null;if(vt(n))return[Vm(n.enter),Vm(n.leave)];{const e=Vm(n);return[e,e]}}function Vm(n){return Ny(n)}function Xr(n,e){e.split(/\s+/).forEach(t=>t&&n.classList.add(t)),(n._vtc||(n._vtc=new Set)).add(e)}function Lo(n,e){e.split(/\s+/).forEach(s=>s&&n.classList.remove(s));const{_vtc:t}=n;t&&(t.delete(e),t.size||(n._vtc=void 0))}function g1(n){requestAnimationFrame(()=>{requestAnimationFrame(n)})}let tA=0;function y1(n,e,t,s){const r=n._endId=++tA,o=()=>{r===n._endId&&s()};if(t)return setTimeout(o,t);const{type:i,timeout:a,propCount:l}=nA(n,e);if(!i)return s();const c=i+"end";let u=0;const h=()=>{n.removeEventListener(c,d),o()},d=p=>{p.target===n&&++u>=l&&h()};setTimeout(()=>{u<l&&h()},a+1),n.addEventListener(c,d)}function nA(n,e){const t=window.getComputedStyle(n),s=f=>(t[f]||"").split(", "),r=s(`${Kr}Delay`),o=s(`${Kr}Duration`),i=b1(r,o),a=s(`${Gl}Delay`),l=s(`${Gl}Duration`),c=b1(a,l);let u=null,h=0,d=0;e===Kr?i>0&&(u=Kr,h=i,d=o.length):e===Gl?c>0&&(u=Gl,h=c,d=l.length):(h=Math.max(i,c),u=h>0?i>c?Kr:Gl:null,d=u?u===Kr?o.length:l.length:0);const p=u===Kr&&/\b(transform|all)(,|$)/.test(s(`${Kr}Property`).toString());return{type:u,timeout:h,propCount:d,hasTransform:p}}function b1(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max(...e.map((t,s)=>x1(t)+x1(n[s])))}function x1(n){return Number(n.slice(0,-1).replace(",","."))*1e3}function sA(){return document.body.offsetHeight}const rA=hn({patchProp:Z_},P_);let w1;function oA(){return w1||(w1=f_(rA))}const iA=(...n)=>{const e=oA().createApp(...n),{mount:t}=e;return e.mount=s=>{const r=aA(s);if(!r)return;const o=e._component;!Ue(o)&&!o.render&&!o.template&&(o.template=r.innerHTML),r.innerHTML="";const i=t(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),i},e};function aA(n){return Yt(n)?document.querySelector(n):n}const yr=(n,e)=>{const t=n.__vccOpts||n;for(const[s,r]of e)t[s]=r;return t},lA={},cA={class:"AppTitle"},uA=v_('<span class="large" data-v-d9a58470>あし</span><span class="small" data-v-d9a58470>の</span><span class="large" data-v-d9a58470>さき</span><span class="small" data-v-d9a58470>の</span><span class="large" data-v-d9a58470>動物パンプリン占い</span>',5),hA=[uA];function dA(n,e){return Wt(),un("div",cA,hA)}const pA=yr(lA,[["render",dA],["__scopeId","data-v-d9a58470"]]);var v1;const Qd=typeof window<"u",fA=()=>{};Qd&&((v1=window==null?void 0:window.navigator)==null?void 0:v1.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function mA(n){return n}function gA(n,e,t){let s;ln(t)?s={evaluating:t}:s=t||{};const{lazy:r=!1,evaluating:o=void 0,onError:i=fA}=s,a=oi(!r),l=oi(e);let c=0;return BE(async u=>{if(!a.value)return;c++;const h=c;let d=!1;o&&Promise.resolve().then(()=>{o.value=!0});try{const p=await n(f=>{u(()=>{o&&(o.value=!1),d||f()})});h===c&&(l.value=p)}catch(p){i(p)}finally{o&&h===c&&(o.value=!1),d=!0}}),r?ic(()=>(a.value=!0,l.value)):l}Qd&&window.document;Qd&&window.navigator;Qd&&window.location;const Cg=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Sg="__vueuse_ssr_handlers__";Cg[Sg]=Cg[Sg]||{};Cg[Sg];var $1;(function(n){n.UP="UP",n.RIGHT="RIGHT",n.DOWN="DOWN",n.LEFT="LEFT",n.NONE="NONE"})($1||($1={}));var yA=Object.defineProperty,I1=Object.getOwnPropertySymbols,bA=Object.prototype.hasOwnProperty,xA=Object.prototype.propertyIsEnumerable,C1=(n,e,t)=>e in n?yA(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,wA=(n,e)=>{for(var t in e||(e={}))bA.call(e,t)&&C1(n,t,e[t]);if(I1)for(var t of I1(e))xA.call(e,t)&&C1(n,t,e[t]);return n};const vA={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};wA({linear:mA},vA);const S1=n=>{const e=Math.floor(Math.random()*n.length);return n[e]},$A={fine:[["お日様パンプリン","今日はとても運が良さそう！<ANIMAL>たちがいるからかもしれませんね！"],["真夏の太陽パンプリン","暑さに負けず、快適に過ごすためのヒントを<ANIMAL>たちがお届けします！"],["晴天の霹靂パンプリン","今日は晴れた空を見上げて、新しい出会いやチャンスを探してみましょう！<ANIMAL>たちはきっと応援してくれます！"],["晴天お出かけパンプリン","晴れた日差しに包まれた素敵な一日を過ごしましょう！その際は、<ANIMAL>たちがお供にどうぞ！"],["晴天ラッキースイーツパンプリン","今日はラッキーな1日になりそう！そんな日には、<ANIMAL>たちがおすすめするスイーツがおいしいですよ！"],["晴天ハッピーエナジーパンプリン","晴れた日は元気が出ますよね！今日も元気に過ごすためのエナジーパンプリンを作ってみましょう！<ANIMAL>たちの力を借りましょう！"]],cloudy:[["曇りのお昼寝パンプリン","曇り空が落ち着いた雰囲気が気持ちいいですね！今日はのんびりお昼寝を楽しみましょう！<ANIMAL>たちも一緒におやすみします！"],["曇りの雨降りパンプリン","雨が降るとどこか心地よいですよね！今日も雨が降りましたね！そんな日は、<ANIMAL>たちがおすすめする降り続く雨のためのパンプリンがおいしいですよ！"],["曇りのおでかけパンプリン","曇り空は旅行にぴったりですよ！今日は旅行先で<ANIMAL>たちがおすすめするパンプリンを食べて、新しい風景を楽しみましょう！"],["曇りの新しい一日パンプリン","曇り空は新しい一日の始まりを感じさせてくれます！今日も新しい1日が始まります！そんな日は、<ANIMAL>たちがおすすめする新しい1日のためのパンプリンがおいしいですよ！"],["曇りのまったりパンプリン","曇り空はまったりする日にぴったりですよ！今日も曇り空が続きますね！そんな日は、<ANIMAL>たちがおすすめするまったりするためのパンプリンがおいしいですよ！"],["曇りのお昼寝パンプリン","曇り空が落ち着いた雰囲気が気持ちいいですね！今日はのんびりお昼寝を楽しみましょう！<ANIMAL>たちも一緒におやすみします！"]],rainy:[["雨の日お茶会パンプリン","雨の日は家でのんびりと過ごすのが一番ですよね！お茶会にぴったりな<ANIMAL>のパンプリンを作って、おしゃべりを楽しみましょう！"],["雨の日お洗濯パンプリン","雨の日は洗濯もできますよ！今日はお洗濯を済ませてから、<ANIMAL>のパンプリンをつくって、のんびりと過ごしましょう！"],["雨の日映画鑑賞パンプリン","雨の日はおうちでのんびりと映画を鑑賞するのも楽しいですよね！今日はお気に入りの映画を観て、<ANIMAL>のパンプリンを作って、ゆっくりと楽しみましょう！"],["雨の日本屋さん巡りパンプリン","雨の日は本屋さん巡りも楽しいですよね！今日はお気に入りの店を巡りながら、<ANIMAL>のパンプリンを作って、のんびりと過ごしましょう！"],["雨の歌うパンプリン","雨の日は歌いたくなる気分になりますね！そんな日は、<ANIMAL>たちがおすすめする歌うパンプリンがおいしいですよ！"],["雨の芝生香るパンプリン","雨の日は芝生の香りが漂いますね！そんな日は、<ANIMAL>たちがおすすめする芝生香るパンプリンがおいしいですよ！"]]},IA=["ホッキョクグマ","マカク","フクロウ","シマウマ","ラッコ","クマ","キツネ","トナカイ","カモメ","カンガルー","ペンギン","パンダ","テントウムシ","メジロ","イノシシ","トラ"],CA=(n,e)=>{const[t,s]=S1($A[n]),r=S1(IA);return{name:`${r}の${t}`,msg:s.replace(/<ANIMAL>/g,r),weather:n,probability:e}};var rt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Wy(n){var e=n.default;if(typeof e=="function"){var t=function s(){if(this instanceof s){var r=[null];r.push.apply(r,arguments);var o=Function.bind.apply(e,r);return new o}return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var uI={},Uy={};const SA=1e-7,NA=1e-4;class Gy{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ep{refCount(e){return Ln("refCount")}incRef(e){return Ln("incRef")}timerAvailable(){return!0}time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}readToGPU(e,t){return Ln("readToGPU")}numDataIds(){return Ln("numDataIds")}disposeData(e,t){return Ln("disposeData")}write(e,t,s){return Ln("write")}move(e,t,s,r,o){return Ln("move")}createTensorFromTexture(e,t,s){return Ln("createTensorFromTexture")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return this.floatPrecision()===32?SA:NA}dispose(){return Ln("dispose")}}function Ln(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Hy(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Sr(n,e,t)}function TA(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,Sr(n,t,s),Sr(e,t,s)}function go(n,e,t){return Math.max(n,Math.min(e,t))}function tp(n){return n%2===0?n:n+1}function Sr(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function hI(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function kA(n,e){const t=Math.random();return e*t+(1-t)*n}function EA(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function N(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Qt(n,e,t=""){N(He(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function $i(n){N(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Er(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||Kt(n)&&!t)for(let s=0;s<n.length;++s)Er(n[s],e,t);else e.push(n);return e}function K(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function _A(n){return n.length===0}function He(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function ii(n){return n%1===0}function AA(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function od(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function RA(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return Hy(e),e}function Qo(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Ng(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const l=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function jy(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Ve(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),N(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),N(n.every(s=>ii(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function zr(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Ve(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Mt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Ct(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function dI(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function pI(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function qy(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Kt(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function id(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function fI(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function ir(n){return typeof n=="string"||n instanceof String}function mI(n){return typeof n=="boolean"}function ad(n){return typeof n=="number"}function Ia(n){return Array.isArray(n)?Ia(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":ad(n)?"float32":ir(n)?"string":mI(n)?"bool":"float32"}function yo(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ld(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Te(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function gI(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<o;l++)r[l]=gI(n+l*a,i,t,s)}return r}function ss(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return gI(0,n,e,t)}function np(n,e){const t=Zt(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Zt(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Ky(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return ss(n,new Float32Array(t));if(e==="int32")return ss(n,new Int32Array(t));if(e==="bool")return ss(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Xn(n){n.forEach(e=>{N(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function zs(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Ii(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function bo(n){return n&&n.then&&typeof n.then=="function"}const N1="tfjsflags";class yI{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=DA,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(bo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);N1 in e&&e[N1].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=FA(r,o)})}}function DA(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(OA(e,s[0],s[1]),s.join("="))),e}function OA(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function FA(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function H(){return Xy}let Xy=null;function LA(n){Xy=n}let Wm;function bI(){if(Wm==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Wm=n}return Wm}function PA(){const n=bI();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Yy(n,e){const t=PA();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Ac="Abs",Ca="Acos",Sa="Acosh",Ci="Add",Rc="AddN",sp="All",rp="Any",Dc="ArgMax",Oc="ArgMin",Na="Asin",Ta="Asinh",ka="Atan",Ea="Atanh",_a="Atan2",Fc="AvgPool",op="AvgPoolGrad",Lc="AvgPool3D",ip="AvgPool3DGrad",Pc="BatchMatMul",zc="BatchToSpaceND",ap="Bincount",xI="BroadcastTo",lp="BroadcastArgs",Aa="Cast",Ra="Ceil",Da="ClipByValue",cp="Complex",Mc="ComplexAbs",Bc="Concat",Vc="Conv2D",up="Conv2DBackpropFilter",Wc="Conv2DBackpropInput",Uc="Conv3D",hp="Conv3DBackpropFilterV2",dp="Conv3DBackpropInputV2",Oa="Cos",Fa="Cosh",pp="Cumprod",Gc="Cumsum",fp="CropAndResize",mp="DenseBincount",gp="DepthToSpace",Hc="DepthwiseConv2dNative",yp="DepthwiseConv2dNativeBackpropFilter",bp="DepthwiseConv2dNativeBackpropInput",xp="Diag",jc="Dilation2D",cd="Dilation2DBackpropInput",ud="Dilation2DBackpropFilter",La="RealDiv",wp="Einsum",Pa="Elu",vp="EluGrad",za="Erf",qc="Equal",Ma="Exp",Kc="ExpandDims",Ba="Expm1",$p="FFT",Ip="Fill",Cp="FlipLeftRight",Va="Floor",Wa="FloorDiv",Xc="FusedBatchNorm",Yc="GatherV2",Sp="GatherNd",Zc="Greater",Ua="GreaterEqual",Ga="Identity",Np="IFFT",Tp="Imag",Ha="IsFinite",ja="IsInf",qa="IsNan",Jc="LeakyRelu",Qc="Less",eu="LessEqual",kp="LinSpace",Ka="Log",Xa="Log1p",tu="LogicalAnd",nu="LogicalNot",su="LogicalOr",zA="LogicalXor",wI="LogSoftmax",MA="LowerBound",ru="LRN",Ep="LRNGrad",ou="Max",Ya="Maximum",iu="MaxPool",_p="MaxPoolGrad",au="MaxPool3D",Ap="MaxPool3DGrad",Rp="MaxPoolWithArgmax",lu="Mean",cu="Min",Za="Minimum",uu="MirrorPad",Ja="Mod",Dp="Multinomial",Qa="Multiply",hu="Neg",du="NotEqual",Op="NonMaxSuppressionV3",Fp="NonMaxSuppressionV4",Lp="NonMaxSuppressionV5",pu="OnesLike",fu="OneHot",mu="Pack",gu="PadV2",BA="Pool",el="Pow",yu="Prelu",bu="Prod",Pp="RaggedGather",zp="RaggedRange",Mp="RaggedTensorToTensor",Bp="Range",Vp="Real",tl="Reciprocal",nl="Relu",xu="Reshape",wu="ResizeNearestNeighbor",Wp="ResizeNearestNeighborGrad",vu="ResizeBilinear",Up="ResizeBilinearGrad",sl="Relu6",$u="Reverse",rl="Round",ol="Rsqrt",Gp="ScatterNd",Hp="SearchSorted",Iu="Select",il="Selu",Cu="Slice",al="Sin",ll="Sinh",cl="Sign",ul="Sigmoid",hl="Softplus",dl="Sqrt",Su="Sum",Nu="SpaceToBatchND",Tu="SplitV",ku="Softmax",jp="SparseFillEmptyRows",qp="SparseReshape",Kp="SparseSegmentMean",Xp="SparseSegmentSum",Yp="SparseToDense",pl="SquaredDifference",Zp="Square",Jp="StridedSlice",Qp="StringNGrams",ef="StringSplit",tf="StringToHashBucketFast",fl="Sub",ml="Tan",gl="Tanh",yl="Tile",nf="TopK",sf="Transform",ei="Transpose",rf="Unique",Eu="Unpack",_u="UnsortedSegmentSum",VA="UpperBound",Au="ZerosLike",bl="Step",hd="FromPixels",of="RotateWithOffset",mc="_FusedMatMul",gc="FusedConv2D",yc="FusedDepthwiseConv2D";function Qn(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...n)}function WA(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...n)}const ta=Yy("kernelRegistry",()=>new Map),bc=Yy("gradRegistry",()=>new Map);function dd(n,e){const t=Zy(n,e);return ta.get(t)}function Tg(n){return bc.get(n)}function pd(n){const e=ta.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}function af(n){const{kernelName:e,backendName:t}=n,s=Zy(e,t);ta.has(s)&&Qn(`The kernel '${e}' for backend '${t}' is already registered`),ta.set(s,n)}function vI(n){const{kernelName:e}=n;bc.has(e)&&H().getBool("DEBUG")&&Qn(`Overriding the gradient for '${e}'`),bc.set(e,n)}function UA(n,e){const t=Zy(n,e);if(!ta.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);ta.delete(t)}function GA(n){if(!bc.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);bc.delete(n)}function HA(n,e){pd(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});af(r)})}function Zy(n,e){return`${e}_${n}`}var kg=dt,ys=null;try{ys=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function dt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}dt.prototype.__isLong__;Object.defineProperty(dt.prototype,"__isLong__",{value:!0});function Yn(n){return(n&&n.__isLong__)===!0}dt.isLong=Yn;var T1={},k1={};function Si(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=k1[n],s)?s:(t=pt(n,(n|0)<0?-1:0,!0),r&&(k1[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=T1[n],s)?s:(t=pt(n,n<0?-1:0,!1),r&&(T1[n]=t),t))}dt.fromInt=Si;function bs(n,e){if(isNaN(n))return e?Ko:xs;if(e){if(n<0)return Ko;if(n>=$I)return SI}else{if(n<=-_1)return Vn;if(n+1>=_1)return CI}return n<0?bs(-n,e).neg():pt(n%na|0,n/na|0,e)}dt.fromNumber=bs;function pt(n,e,t){return new dt(n,e,t)}dt.fromBits=pt;var fd=Math.pow;function Jy(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return xs;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Jy(n.substring(1),e,t).neg();for(var r=bs(fd(t,8)),o=xs,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),l=parseInt(n.substring(i,i+a),t);if(a<8){var c=bs(fd(t,a));o=o.mul(c).add(bs(l))}else o=o.mul(r),o=o.add(bs(l))}return o.unsigned=e,o}dt.fromString=Jy;function Hs(n,e){return typeof n=="number"?bs(n,e):typeof n=="string"?Jy(n,e):pt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}dt.fromValue=Hs;var E1=1<<16,jA=1<<24,na=E1*E1,$I=na*na,_1=$I/2,A1=Si(jA),xs=Si(0);dt.ZERO=xs;var Ko=Si(0,!0);dt.UZERO=Ko;var Ui=Si(1);dt.ONE=Ui;var II=Si(1,!0);dt.UONE=II;var Eg=Si(-1);dt.NEG_ONE=Eg;var CI=pt(-1,2147483647,!1);dt.MAX_VALUE=CI;var SI=pt(-1,-1,!0);dt.MAX_UNSIGNED_VALUE=SI;var Vn=pt(0,-2147483648,!1);dt.MIN_VALUE=Vn;var pe=dt.prototype;pe.toInt=function(){return this.unsigned?this.low>>>0:this.low};pe.toNumber=function(){return this.unsigned?(this.high>>>0)*na+(this.low>>>0):this.high*na+(this.low>>>0)};pe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Vn)){var t=bs(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=bs(fd(e,6),this.unsigned),i=this,a="";;){var l=i.div(o),c=i.sub(l.mul(o)).toInt()>>>0,u=c.toString(e);if(i=l,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};pe.getHighBits=function(){return this.high};pe.getHighBitsUnsigned=function(){return this.high>>>0};pe.getLowBits=function(){return this.low};pe.getLowBitsUnsigned=function(){return this.low>>>0};pe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Vn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};pe.isZero=function(){return this.high===0&&this.low===0};pe.eqz=pe.isZero;pe.isNegative=function(){return!this.unsigned&&this.high<0};pe.isPositive=function(){return this.unsigned||this.high>=0};pe.isOdd=function(){return(this.low&1)===1};pe.isEven=function(){return(this.low&1)===0};pe.equals=function(e){return Yn(e)||(e=Hs(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};pe.eq=pe.equals;pe.notEquals=function(e){return!this.eq(e)};pe.neq=pe.notEquals;pe.ne=pe.notEquals;pe.lessThan=function(e){return this.comp(e)<0};pe.lt=pe.lessThan;pe.lessThanOrEqual=function(e){return this.comp(e)<=0};pe.lte=pe.lessThanOrEqual;pe.le=pe.lessThanOrEqual;pe.greaterThan=function(e){return this.comp(e)>0};pe.gt=pe.greaterThan;pe.greaterThanOrEqual=function(e){return this.comp(e)>=0};pe.gte=pe.greaterThanOrEqual;pe.ge=pe.greaterThanOrEqual;pe.compare=function(e){if(Yn(e)||(e=Hs(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};pe.comp=pe.compare;pe.negate=function(){return!this.unsigned&&this.eq(Vn)?Vn:this.not().add(Ui)};pe.neg=pe.negate;pe.add=function(e){Yn(e)||(e=Hs(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,c=e.low&65535,u=0,h=0,d=0,p=0;return p+=o+c,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+a,u+=h>>>16,h&=65535,u+=t+i,u&=65535,pt(d<<16|p,u<<16|h,this.unsigned)};pe.subtract=function(e){return Yn(e)||(e=Hs(e)),this.add(e.neg())};pe.sub=pe.subtract;pe.multiply=function(e){if(this.isZero())return xs;if(Yn(e)||(e=Hs(e)),ys){var t=ys.mul(this.low,this.high,e.low,e.high);return pt(t,ys.get_high(),this.unsigned)}if(e.isZero())return xs;if(this.eq(Vn))return e.isOdd()?Vn:xs;if(e.eq(Vn))return this.isOdd()?Vn:xs;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(A1)&&e.lt(A1))return bs(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,c=e.low>>>16,u=e.low&65535,h=0,d=0,p=0,f=0;return f+=i*u,p+=f>>>16,f&=65535,p+=o*u,d+=p>>>16,p&=65535,p+=i*c,d+=p>>>16,p&=65535,d+=r*u,h+=d>>>16,d&=65535,d+=o*c,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*u+r*c+o*l+i*a,h&=65535,pt(p<<16|f,h<<16|d,this.unsigned)};pe.mul=pe.multiply;pe.divide=function(e){if(Yn(e)||(e=Hs(e)),e.isZero())throw Error("division by zero");if(ys){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?ys.div_u:ys.div_s)(this.low,this.high,e.low,e.high);return pt(t,ys.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ko:xs;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ko;if(e.gt(this.shru(1)))return II;o=Ko}else{if(this.eq(Vn)){if(e.eq(Ui)||e.eq(Eg))return Vn;if(e.eq(Vn))return Ui;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(xs)?e.isNegative()?Ui:Eg:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(Vn))return this.unsigned?Ko:xs;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=xs}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:fd(2,a-48),c=bs(s),u=c.mul(e);u.isNegative()||u.gt(r);)s-=l,c=bs(s,this.unsigned),u=c.mul(e);c.isZero()&&(c=Ui),o=o.add(c),r=r.sub(u)}return o};pe.div=pe.divide;pe.modulo=function(e){if(Yn(e)||(e=Hs(e)),ys){var t=(this.unsigned?ys.rem_u:ys.rem_s)(this.low,this.high,e.low,e.high);return pt(t,ys.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};pe.mod=pe.modulo;pe.rem=pe.modulo;pe.not=function(){return pt(~this.low,~this.high,this.unsigned)};pe.and=function(e){return Yn(e)||(e=Hs(e)),pt(this.low&e.low,this.high&e.high,this.unsigned)};pe.or=function(e){return Yn(e)||(e=Hs(e)),pt(this.low|e.low,this.high|e.high,this.unsigned)};pe.xor=function(e){return Yn(e)||(e=Hs(e)),pt(this.low^e.low,this.high^e.high,this.unsigned)};pe.shiftLeft=function(e){return Yn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?pt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):pt(0,this.low<<e-32,this.unsigned)};pe.shl=pe.shiftLeft;pe.shiftRight=function(e){return Yn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?pt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):pt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};pe.shr=pe.shiftRight;pe.shiftRightUnsigned=function(e){if(Yn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return pt(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?pt(t,0,this.unsigned):pt(t>>>e-32,0,this.unsigned)};pe.shru=pe.shiftRightUnsigned;pe.shr_u=pe.shiftRightUnsigned;pe.toSigned=function(){return this.unsigned?pt(this.low,this.high,!1):this};pe.toUnsigned=function(){return this.unsigned?this:pt(this.low,this.high,!0)};pe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};pe.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};pe.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};dt.fromBytes=function(e,t,s){return s?dt.fromBytesLE(e,t):dt.fromBytesBE(e,t)};dt.fromBytesLE=function(e,t){return new dt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};dt.fromBytesBE=function(e,t){return new dt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const qA=D2({__proto__:null,default:kg},[kg]);const Ho=kg||qA;function Ru(n){return Ho.fromString(n,!0,16)}const NI=Ru("c3a5c85c97cb3127"),Bo=Ru("b492b66fbe98f273"),fn=Ru("9ae16a3b2f90404f");function _g(n){return n.xor(n.shru(47))}function TI(n,e,t){const s=n.slice(e,e+t);return Ho.fromBytes(Array.from(s),!0,!0)}function at(n,e){return TI(n,e,8)}function R1(n,e){return TI(n,e,4)}function Bt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function co(n,e,t=Ru("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function KA(n,e,t,s,r,o){r=r.add(n),o=Bt(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(Bt(r,44)),[r.add(s),o.add(i)]}function kh(n,e,t,s){return KA(at(n,e),at(n,e+8),at(n,e+16),at(n,e+24),t,s)}function XA(n,e=n.length){if(e>=8){const t=fn.add(e*2),s=at(n,0).add(fn),r=at(n,e-8),o=Bt(r,37).mul(t).add(s),i=Bt(s,25).add(r).mul(t);return co(o,i,t)}if(e>=4){const t=fn.add(e*2),s=R1(n,0);return co(s.shl(3).add(e),R1(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return _g(fn.mul(o).xor(NI.mul(i))).mul(fn)}return fn}function YA(n,e=n.length){const t=fn.add(e*2),s=at(n,0).mul(Bo),r=at(n,8),o=at(n,e-8).mul(t),i=at(n,e-16).mul(fn);return co(Bt(s.add(r),43).add(Bt(o,30)).add(i),s.add(Bt(r.add(fn),18)).add(o),t)}function ZA(n,e=n.length){const t=fn.add(e*2),s=at(n,0).mul(fn),r=at(n,8),o=at(n,e-8).mul(t),i=at(n,e-16).mul(fn),a=Bt(s.add(r),43).add(Bt(o,30)).add(i),l=co(a,s.add(Bt(r.add(fn),18)).add(o),t),c=at(n,16).mul(t),u=at(n,24),h=a.add(at(n,e-32)).mul(t),d=l.add(at(n,e-24)).mul(t);return co(Bt(c.add(u),43).add(Bt(h,30)).add(d),c.add(Bt(u.add(s),18)).add(h),t)}function kI(n,e=n.length){const t=Ho.fromNumber(81,!0);if(e<=32)return e<=16?XA(n,e):YA(n,e);if(e<=64)return ZA(n,e);let s=t,r=t.mul(Bo).add(113),o=_g(r.mul(fn).add(113)).mul(fn),i=[Ho.UZERO,Ho.UZERO],a=[Ho.UZERO,Ho.UZERO];s=s.mul(fn).add(at(n,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=Bt(s.add(r).add(i[0]).add(at(n,l+8)),37).mul(Bo),r=Bt(r.add(i[1]).add(at(n,l+48)),42).mul(Bo),s=s.xor(a[1]),r=r.add(i[0]).add(at(n,l+40)),o=Bt(o.add(a[0]),33).mul(Bo),i=kh(n,l,i[1].mul(Bo),s.add(a[0])),a=kh(n,l+32,o.add(a[1]),r.add(at(n,l+16))),[o,s]=[s,o],l+=64;while(l!==c);const h=Bo.add(o.and(255).shl(1));return l=u,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=Bt(s.add(r).add(i[0]).add(at(n,l+8)),37).mul(h),r=Bt(r.add(i[1]).add(at(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(at(n,l+40))),o=Bt(o.add(a[0]),33).mul(h),i=kh(n,l,i[1].mul(h),s.add(a[0])),a=kh(n,l+32,o.add(a[1]),r.add(at(n,l+16))),[o,s]=[s,o],co(co(i[0],a[0],h).add(_g(r).mul(NI)).add(o),co(i[1],a[1],h).add(s),h)}function Mr(n,e){return e==="string"?cr(n):So([n],e)}function JA(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function So(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Er(n)),H().getBool("DEBUG")&&dI(n,e),JA(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function qt(){return H().platform.now()}function EI(n,e){return H().platform.fetch(n,e)}function cr(n,e="utf-8"){return e=e||"utf-8",H().platform.encode(n,e)}function _r(n,e="utf-8"){return e=e||"utf-8",H().platform.decode(n,e)}const QA=Object.freeze(Object.defineProperty({__proto__:null,createScalarValue:Mr,toTypedArray:So,now:qt,fetch:EI,encodeString:cr,decodeString:_r,shuffle:Hy,shuffleCombo:TA,clamp:go,nearestLargerEven:tp,swap:Sr,sum:hI,randUniform:kA,distSquared:EA,assert:N,assertShapesMatch:Qt,assertNonNull:$i,flatten:Er,sizeFromShape:K,isScalarShape:_A,arraysEqual:He,isInt:ii,tanh:AA,sizeToSquarishShape:od,createShuffledIndices:RA,rightPad:Qo,repeatedTry:Ng,inferFromImplicitShape:jy,parseAxisParam:Ve,squeezeShape:zr,getTypedArrayFromDType:Mt,getArrayFromDType:Ct,checkConversionForErrors:dI,isValidDtype:pI,hasEncodingLoss:qy,isTypedArray:Kt,bytesPerElement:id,bytesFromStringArray:fI,isString:ir,isBoolean:mI,isNumber:ad,inferDtype:Ia,isFunction:yo,nearestDivisor:ld,computeStrides:Te,toNestedArray:ss,makeOnesTypedArray:np,makeZerosTypedArray:Zt,makeZerosNestedTypedArray:Ky,assertNonNegativeIntegerDimensions:Xn,locToIndex:zs,indexToLoc:Ii,isPromise:bo,hexToLong:Ru,fingerPrint64:kI},Symbol.toStringTag,{value:"Module"}));class eR{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new nR)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let i;const a=qt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();i=Promise.resolve({kernelMs:qt()-a})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const u=r[c];u.data().then(h=>{tR(h,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],o,l[2])})})}}function tR(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class nR{logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?Qo(`${r}ms`,9):r.error,l=Qo(e,25),c=t.rank,u=t.size,h=Qo(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function sR(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in u)o[u[d].id]=!0,i[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&i[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function rR(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const c=n[l.id];c!=null?i.push(c):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=o.inputs[l];if(!He(c.shape,u.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}const D1=20,Hl=3,Um=7;function oR(n,e,t,s){const r=Te(e),o=iR(n,e,t,r),i=e.length,a=Xh(n,e,t,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function iR(n,e,t,s){const r=K(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=t==="complex64"?Jl(n):n;if(a>1)for(let c=0;c<r/o;c++){const u=c*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],Zl(l[u+h],0,t).length)}return i}function Zl(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Um))} + ${parseFloat(n[1].toFixed(Um))}j`:ir(n)?s=`'${n}'`:t==="bool"?s=_I(n):s=parseFloat(n.toFixed(Um)).toString(),Qo(s,e)}function _I(n){return n===0?"false":"true"}function Xh(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=Jl(n);return[Zl(m[0],0,t)]}return t==="bool"?[_I(n[0])]:[n[0].toString()]}if(l===1){if(a>D1){const g=Hl*i;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((a-Hl)*i,a*i));return t==="complex64"&&(y=Jl(y),b=Jl(b)),["["+y.map((w,x)=>Zl(w,r[x],t)).join(", ")+", ..., "+b.map((w,x)=>Zl(w,r[a-Hl+x],t)).join(", ")+"]"]}return["["+(t==="complex64"?Jl(n):Array.from(n)).map((g,y)=>Zl(g,r[y],t)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*i,d=[];if(a>D1){for(let m=0;m<Hl;m++){const g=m*h,y=g+h;d.push(...Xh(n.slice(g,y),c,t,u,r,!1))}d.push("...");for(let m=a-Hl;m<a;m++){const g=m*h,y=g+h;d.push(...Xh(n.slice(g,y),c,t,u,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,y=g+h;d.push(...Xh(n.slice(g,y),c,t,u,r,m===a-1))}const p=l===2?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Jl(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}class Lt{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=K(e),s!=null){const r=s.length;N(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ct(t,this.size),this.strides=Te(e)}set(e,...t){t.length===0&&(t=[0]),N(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return As().makeTensor(this.values,this.shape,this.dtype)}}let As=null,Bi=null;function aR(n){As=n}function lR(n){Bi=n}class Ye{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=K(e),this.strides=Te(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Bi.buffer(this.shape,this.dtype,e)}bufferSync(){return Bi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ss(this.shape,e,this.dtype==="complex64")}arraySync(){return ss(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=As().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>_r(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),As().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=As().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>_r(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await As().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(As().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bi.print(this,e)}clone(){return this.throwIfDisposed(),Bi.clone(this)}toString(e=!1){const t=this.dataSync();return oR(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bi.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),As().makeVariable(this,e,t,s)}}Object.defineProperty(Ye,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function X(){return Yy("Tensor",()=>Ye)}X();class xc extends Ye{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!He(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);As().disposeTensor(this),this.dataId=e.dataId,As().incRef(this,null)}dispose(){As().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(xc,Symbol.hasInstance,{value:n=>n instanceof Ye&&n.assign!=null&&n.assign instanceof Function});var Ag;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Ag||(Ag={}));var Rg;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Rg||(Rg={}));var Dg;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Dg||(Dg={}));var Og;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Og||(Og={}));var Fg;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Fg||(Fg={}));const cR={float32:Og,int32:Rg,bool:Dg,complex64:Fg};function _n(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return cR[n][e]}function lf(n){return _n(n,"int32")}function $t(n,e){if(n.dtype===e.dtype)return[n,e];const t=_n(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function AI(n,e){N(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function cf(n,e){return e.some(t=>t.id===n.id)}function Ar(n){const e=[];return RI(n,e,new Set),e}function RI(n,e,t){if(n==null)return;if(n instanceof Ye){e.push(n);return}if(!uR(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),RI(o,e,t))}}function uR(n){return Array.isArray(n)||typeof n=="object"}const hR=Object.freeze(Object.defineProperty({__proto__:null,makeTypesMatch:$t,assertTypesMatch:AI,isTensorInList:cf,getTensorsInContainer:Ar},Symbol.toStringTag,{value:"Module"}));function Gm(n){return n.kernelName!=null}class O1{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class sa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new O1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Qn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new eR(this.backendInstance),!0}setupRegisteredKernels(){pd(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){pd(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof ep)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Qn(`Initialization of backend ${e} failed`),Qn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Qn(`Initialization of backend ${e} failed`),Qn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return sa.nextTensorId++}nextVariableId(){return sa.nextVariableId++}clone(e){const t=D.runKernel(Ga,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},c={dtype:a};return D.runKernel(Aa,l,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(dd(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=Gm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Gm(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=dd(f,this.backendName);N(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,w);const x=w.map($=>$.rank!=null?$:this.makeTensorFromTensorInfo($));if(r){const $=this.getTensorsForGradient(f,m,x);s=this.saveTensorsForBackwardMode($)}return x}}else{const{forwardFunc:f}=e,m=g=>{!r||(s=g.map(y=>this.keep(this.clone(y))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:u,attrs:h}=e,d=Gm(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(c,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Tg(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(N(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=o.map(c=>t[c]);const l=s.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&ir(e[0])&&(o=e.map(l=>cr(l)));const i=r.write(o,t,s),a=new Ye(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),c=fI(o);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new Ye(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new xc(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*id(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof xc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*id(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},l=Tg(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=Zt(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),r(c.length>1?c:c[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ar(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(N(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));N(o instanceof Ye,()=>"The result y returned by f() must be a tensor.");const i=sR(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??dR(o.shape),rR(a,i,c=>this.tidy(c),pR);const l=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return N(yo(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{N(t.every(a=>a instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...t,l),N(s.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(yo(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];N(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(u.every(d=>d instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=qt(),s=await this.backend.time(e);return s.wallMs=qt()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new O1;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}sa.nextTensorId=0;sa.nextVariableId=0;function dR(n){const e=np(K(n),"float32");return D.makeTensor(e,n,"float32")}function DI(){const n=bI();if(n._tfengine==null){const e=new yI(n);n._tfengine=new sa(e)}return LA(n._tfengine.ENV),aR(()=>n._tfengine),n._tfengine}const D=DI();function pR(n,e){const t={a:n,b:e};return D.runKernel(Ci,t)}function fR(){return typeof navigator<"u"&&navigator!=null}let Lg;function mR(n){Lg=n}function Qy(n){if(Lg!==void 0)return Lg;if(n||fR()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function eb(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const gR=Object.freeze(Object.defineProperty({__proto__:null,mockIsMobile:mR,isMobile:Qy,isBrowser:eb},Symbol.toStringTag,{value:"Module"}));const is=H();is.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});is.registerFlag("IS_BROWSER",()=>eb());is.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");is.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));is.registerFlag("PROD",()=>!1);is.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>is.getBool("DEBUG"));is.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);is.registerFlag("IS_TEST",()=>!1);is.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);is.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);is.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);is.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function fr(n,e){let t=n;if(Kt(n))return e==="string"?[]:[n.length];if(typeof n=="object"&&"texture"in n){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Kt(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&OI(n,s,[]),s}function OI(n,e,t){if(t=t||[],!Array.isArray(n)&&!Kt(n)){N(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}N(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),N(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)OI(n[r],s,t.concat(r))}function F1(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function T(n,e,t,s="numeric"){if(n instanceof Ye)return F1(s,n.dtype,e,t),n;let r=Ia(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),F1(s,r,e,t),n==null||!Kt(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const o=fr(n,r);!Kt(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?So(n,r):Er(n,[],!0);return D.makeTensor(a,o,r)}function wc(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>T(o,`${e}[${i}]`,t,s))}const tb="__op";function F(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+tb;const r=(...o)=>{D.startScope(t);try{const i=s(...o);return bo(i)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(i),i}catch(i){throw D.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}function yR(n,e){const t=T(n,"real","complex"),s=T(e,"imag","complex");Qt(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return D.runKernel(cp,r)}const Rr=F({complex_:yR});function No(n,e,t,s){if(s==null&&(s=Ia(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&"texture"in n){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return n.channels=n.channels||"RGBA",D.backend.createTensorFromTexture(n,e||t,s)}if(!Kt(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Xn(e);const r=K(e),o=K(t);N(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==K(e.slice(i)):!0;N(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Kt(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?So(n,s):Er(n,[],!0),D.makeTensor(n,e,s)}function Un(n,e,t){const s=fr(n,t);return No(n,e,s,t)}const Pg={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};const md=4;async function zg(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,y)=>g+y.length,0)+md*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=md,f.set(y,m),m+=y.length}h(f)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(s);return{data:bR(o),specs:t}}function nb(n,e){const t={};let s,r=0;for(const o of e){const i=o.name,a=o.dtype,l=o.shape,c=K(l);let u;if("quantization"in o){const h=o.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${o.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${o.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=Pg[h.dtype],p=n.slice(r,r+c*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=CR()),u=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);r+=c*d}else if(a==="string"){const h=K(o.shape);u=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(r,r+md))[0];r+=md;const f=new Uint8Array(n.slice(r,r+p));u.push(f),r+=p}}else{const h=Pg[a],d=n.slice(r,r+c*h);if(a==="float32")u=new Float32Array(d);else if(a==="int32")u=new Int32Array(d);else if(a==="bool")u=new Uint8Array(d);else if(a==="complex64"){u=new Float32Array(d);const p=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<p.length;y++)p[y]=u[y*2],f[y]=u[y*2+1];const m=Un(p,l,"float32"),g=Un(f,l,"float32");t[i]=Rr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);r+=c*h}a!=="complex64"&&(t[i]=Un(u,l,a))}return t}function bR(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const sb=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function L1(n){return sb?Buffer.byteLength(n):new Blob([n]).size}function xR(n){if(sb)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function wR(n){if(sb){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function uf(n){if(n.length===1)return n[0];let e=0;n.forEach(r=>{e+=r.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(r=>{t.set(new Uint8Array(r),s),s+=r.byteLength}),t.buffer}function P1(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function FI(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function rb(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function ob(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),rb(n,t,s)}function Du(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:L1(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:L1(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function ib(n){const e=[];for(const t of n)e.push(...t.weights);return e}function vR(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function $R(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function IR(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function CR(){const n=vR(),e=$R(),t=IR();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}class yt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return yt.instance==null&&(yt.instance=new yt),yt.instance}static registerSaveRouter(e){yt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){yt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return yt.getHandlers(e,"save")}static getLoadHandlers(e,t){return yt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?yt.getInstance().loadRouters:yt.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const SR=n=>yt.registerSaveRouter(n),NR=n=>yt.registerLoadRouter(n),LI=n=>yt.getSaveHandlers(n),PI=(n,e)=>yt.getLoadHandlers(n,e);const Mg="tensorflowjs",Bg=1,Xo="models_store",so="model_info_store";function zI(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Vg(n){const e=n.result;e.createObjectStore(Xo,{keyPath:"modelPath"}),e.createObjectStore(so,{keyPath:"modelPath"})}class ai{constructor(e){if(this.indexedDB=zI(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Mg,Bg);o.onupgradeneeded=()=>Vg(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(Xo,"readonly"),c=a.objectStore(Xo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(i.close(),r(c.error)),a.oncomplete=()=>i.close()}else{const a=Du(t),l=i.transaction(so,"readwrite");let c=l.objectStore(so);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=i.transaction(Xo,"readwrite");const p=h.objectStore(Xo).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{c=l.objectStore(so);const m=c.delete(this.modelPath);m.onsuccess=()=>(i.close(),r(p.error)),m.onerror=g=>(i.close(),r(p.error))}},u.onerror=d=>(i.close(),r(u.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}ai.URL_SCHEME="indexeddb://";const MI=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ai.URL_SCHEME)?TR(n.slice(ai.URL_SCHEME.length)):null;yt.registerSaveRouter(MI);yt.registerLoadRouter(MI);function TR(n){return new ai(n)}function kR(n){return n.startsWith(ai.URL_SCHEME)?n.slice(ai.URL_SCHEME.length):n}class ER{constructor(){this.indexedDB=zI()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Mg,Bg);s.onupgradeneeded=()=>Vg(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(so,"readonly"),a=o.objectStore(so).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=kR(e),new Promise((t,s)=>{const r=this.indexedDB.open(Mg,Bg);r.onupgradeneeded=()=>Vg(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(so,"readwrite"),a=i.objectStore(so),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{c=o.transaction(Xo,"readwrite");const p=c.objectStore(Xo).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=u=>(o.close(),s(l.error)),i.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}const Nr="/",Vi="tensorflowjs_models",BI="info",_R="model_topology",AR="weight_specs",RR="weight_data",DR="model_metadata";function VI(n){return{info:[Vi,n,BI].join(Nr),topology:[Vi,n,_R].join(Nr),weightSpecs:[Vi,n,AR].join(Nr),weightData:[Vi,n,RR].join(Nr),modelMetadata:[Vi,n,DR].join(Nr)}}function WI(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function OR(n){const e=n.split(Nr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Nr)}function FR(n){return n.startsWith(li.URL_SCHEME)?n.slice(li.URL_SCHEME.length):n}class li{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=VI(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Du(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,xR(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw WI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=wR(i),t}}li.URL_SCHEME="localstorage://";const UI=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(li.URL_SCHEME)?LR(n.slice(li.URL_SCHEME.length)):null;yt.registerSaveRouter(UI);yt.registerLoadRouter(UI);function LR(n){return new li(n)}class PR{constructor(){N(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Vi+Nr,s=Nr+BI;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=OR(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=FR(e);const t=VI(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return WI(t),s}}const Xi="://";class pn{constructor(){this.managers={}}static getInstance(){return pn.instance==null&&(pn.instance=new pn),pn.instance}static registerManager(e,t){N(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Xi)&&(e=e.slice(0,e.indexOf(Xi))),N(e.length>0,()=>"scheme must not be an empty string.");const s=pn.getInstance();N(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=pn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(pn.getInstance().managers)}}function Yh(n){if(n.indexOf(Xi)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pn.getSchemes().join(",")}`);return{scheme:n.split(Xi)[0],path:n.split(Xi)[1]}}async function GI(n,e,t=!1){N(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=yt.getLoadHandlers(n);N(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),N(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=yt.getSaveHandlers(e);N(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),N(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=Yh(n).scheme,l=Yh(n).path,c=a===Yh(n).scheme,u=await r.load();t&&c&&await pn.getManager(a).removeModel(l);const h=await i.save(u);return t&&!c&&await pn.getManager(a).removeModel(l),h.modelArtifactsInfo}async function zR(){const n=pn.getSchemes(),e={};for(const t of n){const s=await pn.getManager(t).listModels();for(const r in s){const o=t+Xi+r;e[o]=s[r]}}return e}async function MR(n){const e=Yh(n);return pn.getManager(e.scheme).removeModel(e.path)}async function BR(n,e){return GI(n,e,!1)}async function VR(n,e){return GI(n,e,!0)}class WR{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new WR);try{pn.registerManager(li.URL_SCHEME,new PR)}catch{}try{pn.registerManager(ai.URL_SCHEME,new ER)}catch{}}const UR={importFetch:()=>require("node-fetch")};let Hm;class GR{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(Hm==null&&(Hm=UR.importFetch()),Hm(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new GR);function ze(n,e="float32",t){return e=e||"float32",Xn(n),new Lt(n,e,t)}function HR(n,e){const t=T(n,"x","cast");if(!pI(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return D.runKernel(Aa,s,r)}const he=F({cast_:HR});function jR(n){const t={x:T(n,"x","clone","string_or_numeric")};return D.runKernel(Ga,t)}const ur=F({clone_:jR});function ab(n,e=!1){console.log(n.toString(e))}DI();const qR={buffer:ze,cast:he,clone:ur,print:ab};lR(qR);const KR="model",XR=".json",YR=".weights.bin";function z1(n){return new Promise(e=>setTimeout(e)).then(n)}class ci{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ci.URL_SCHEME)&&(e=e.slice(ci.URL_SCHEME.length)),(e==null||e.length===0)&&(e=KR),this.modelJsonFileName=e+XR,this.weightDataFileName=e+YR}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=FI(e,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=o,await z1(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await z1(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Du(e)}}}}ci.URL_SCHEME="downloads://";class ZR{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=ob(o,c=>this.loadWeights(c));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,uf(i)])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>P1(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=P1(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const JR=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ci.URL_SCHEME)?QR(n.slice(ci.URL_SCHEME.length)):null;yt.registerSaveRouter(JR);function QR(n="model"){return new ci(n)}function eD(n){return new ZR(n)}function M1(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=l=>(l.then(c=>{const u=t+ ++r/n.length*(s-t);return e(u),c}),l);function i(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),N(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(o))}async function HI(n,e){e==null&&(e={});const t=e.fetchFunc==null?H().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),r=0,o=.5,a=(e.onProgress==null?await Promise.all(s):await M1(s,e.onProgress,r,o)).map(h=>h.arrayBuffer()),l=.5,c=1;return e.onProgress==null?await Promise.all(a):await M1(a,e.onProgress,l,c)}async function jI(n,e="",t,s){return qI(i=>HI(i,{requestInit:s}))(n,e,t)}function qI(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,b=Pg[y]*K(g.shape),w=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};s!=null?s.forEach((x,$)=>{x===g.name&&(w(),i[$]=!0)}):w(),a.push(g.name),m+=b})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),c=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=t+(t.endsWith("/")?"":"/")+f;c.push(m)})});const u=await n(c),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length;let m=0;for(let x=0;x<f;x++)m+=u[d+x].byteLength;const g=new ArrayBuffer(m),y=new Uint8Array(g);let b=0;for(let x=0;x<f;x++){const $=new Uint8Array(u[d+x]);y.set($,b),b+=$.byteLength}o[p].forEach(x=>{const $=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),S=nb($,[x.manifestEntry]);for(const I in S)h[I]=S[I]}),d+=f}),h}}const tD="application/octet-stream",nD="application/json";class lb{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(N(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,N(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&N(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=FI(e,s);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:nD}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:tD}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Du(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return ob(t,o=>this.loadWeights(o))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=sD(t),o=this.weightPathPrefix||s,i=ib(e),a=[],l=[];for(const u of e)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(o+h+r);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await HI(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,uf(c)]}}lb.URL_SCHEME_REGEX=/^https?:\/\//;function sD(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function Wg(n){return n.match(lb.URL_SCHEME_REGEX)!=null}const KI=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Wg(s)):t=Wg(n),t)return cb(n,e)}return null};yt.registerSaveRouter(KI);yt.registerLoadRouter(KI);function cb(n,e){return new lb(n,e)}function XI(n,e){return cb(n,e)}class jm{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class YI{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class rD{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function oD(n,e,t,s){const r=arguments;return new rD(gd(...r))}function gd(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new jm(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jm({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jm({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function iD(n){return new YI(n)}function aD(n){return new YI(n)}const ub=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:eD,browserHTTPRequest:XI,concatenateArrayBuffers:uf,decodeWeights:nb,encodeWeights:zg,fromMemory:oD,fromMemorySync:gd,getLoadHandlers:PI,getModelArtifactsForJSON:ob,getModelArtifactsForJSONSync:rb,getModelArtifactsInfoForJSON:Du,getSaveHandlers:LI,getWeightSpecs:ib,http:cb,isHTTPScheme:Wg,loadWeights:jI,registerLoadRouter:NR,registerSaveRouter:SR,weightsLoaderFactory:qI,withSaveHandler:iD,withSaveHandlerSync:aD,copyModel:BR,listModels:zR,moveModel:VR,removeModel:MR},Symbol.toStringTag,{value:"Module"}));function lD(n,e,t=!1,s=!1){let r=T(n,"a","matMul"),o=T(e,"b","matMul");[r,o]=$t(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return D.runKernel(Pc,i,a)}const Be=F({matMul_:lD});function cD(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:T(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return D.runKernel(fu,i,a)}const ra=F({oneHot_:cD});function uD(){H().set("PROD",!0)}function hD(){H().set("DEBUG",!0)}function dD(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function pD(n){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function fD(){D.disposeVariables()}function _s(){return D}function yd(){return D.memory()}function mD(n){return D.profile(n)}function U(n,e){return D.tidy(n,e)}function De(n){Ar(n).forEach(t=>t.dispose())}function Ot(n){return D.keep(n)}function gD(n){return D.time(n)}function yD(n){return D.setBackend(n)}function bD(){return D.ready()}function xD(){return D.backendName}function wD(n){D.removeBackend(n)}function vD(n){return D.findBackend(n)}function $D(n){return D.findBackendFactory(n)}function hb(n,e,t=1){return D.registerBackend(n,e,t)}function ZI(){return D.backend}function ID(n,e){H().setPlatform(n,e)}function CD(n){const t={input:T(n,"input","imag")};return D.runKernel(Tp,t)}const Ou=F({imag_:CD});function SD(n){const t={x:T(n,"x","neg")};return D.runKernel(hu,t)}const ft=F({neg_:SD});function ND(n){const t={input:T(n,"input","real")};return D.runKernel(Vp,t)}const oa=F({real_:ND});function TD(n,e,t){const s=T(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),N(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{N(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?U(()=>{let i=oa(s),a=Ou(s);return i=D.runKernel(ei,{x:i},o),a=D.runKernel(ei,{x:a},o),t&&(a=ft(a)),Rr(i,a)}):D.runKernel(ei,r,o)}const Ge=F({transpose_:TD});function kD(n,e,t){const s=T(n,"labels","confusionMatrix"),r=T(e,"predictions","confusionMatrix");N(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),N(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),N(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),N(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),N(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=ra(he(s,"int32"),t),i=ra(he(r,"int32"),t),a=Ge(o),l=Be(a,i);return he(l,"int32")}const ED=F({confusionMatrix_:kD});const _D=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:ED},Symbol.toStringTag,{value:"Module"}));function ui(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Rt(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function Oe(n,e){const t=[],s=Math.max(n.length,e.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)t.unshift(i);else if(i===1)t.unshift(o);else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else t.unshift(o)}return t}const AD=Object.freeze(Object.defineProperty({__proto__:null,getBroadcastDims:ui,getReductionAxes:Rt,assertAndGetBroadcastShape:Oe},Symbol.toStringTag,{value:"Module"}));function db(n,e,t){if($i(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=fr(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return No(n,e,s,t)}let Po;function JI(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(dd(hd,D.backendName)!=null){const f={pixels:n},m={numChannels:e};return D.runKernel(hd,f,m)}const[c,u]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(i)h=n.getContext("2d").getImageData(0,0,c,u).data;else if(s||t)h=n.data;else if(o||r||a){if(Po==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Po=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Po=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Po.canvas.width=c,Po.canvas.height=u,Po.drawImage(n,0,0,c,u),h=Po.getImageData(0,0,c,u).data}let d;if(e===4)d=new Int32Array(h);else{const f=c*u;d=new Int32Array(f*e);for(let m=0;m<f;m++)for(let g=0;g<e;++g)d[m*e+g]=h[m*4+g]}return db(d,[u,c,e],"int32")}function RD(n){return n!=null&&n.data instanceof Uint8Array}function DD(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function OD(n){return n!=null&&n.width!==0&&n.height!==0}function FD(n){return DD()&&!(n instanceof ImageBitmap)&&OD(n)&&!RD(n)}async function LD(n,e=3){let t=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&FD(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return JI(t,e)}async function PD(n,e){let t=T(n,"img","toPixels");if(!(n instanceof Ye)){const c=t;t=he(c,"int32"),c.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2];if(o>4||o===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const i=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){const u=[0,0,0,255];for(let d=0;d<o;d++){const p=i[c*o+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(u[0]=p*a,u[1]=p*a,u[2]=p*a):u[d]=p*a}const h=c*4;l[h+0]=Math.round(u[0]),l[h+1]=Math.round(u[1]),l[h+2]=Math.round(u[2]),l[h+3]=Math.round(u[3])}if(e!=null){e.width=r,e.height=s;const c=e.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return t!==n&&t.dispose(),l}const QI=F({fromPixels_:JI}),zD=Object.freeze(Object.defineProperty({__proto__:null,fromPixelsAsync:LD,toPixels:PD,fromPixels:QI},Symbol.toStringTag,{value:"Module"}));function hf(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(K(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,l=r.slice();l.pop();let c=1;for(let h=o;h<t;++h)c*=a[h],l.push(a[h]);const u=[...Te(n.shape).map(h=>h/c),1].slice(0,o);return[l,i,c,u]}const MD=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:hf},Symbol.toStringTag,{value:"Module"}));function pb(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function fb(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}pb(t,e,n)}function xl(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let h=r;h<o;++h)i*=t[h];const a=r<1?1:r,l=K(e.shape)/a,c=[...Te(t.slice(0,r)),1],u=K(t);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}const BD=Object.freeze(Object.defineProperty({__proto__:null,validateUpdateShape:pb,validateInput:fb,calculateShapes:xl},Symbol.toStringTag,{value:"Module"}));const Ug=-2,VD=-1;function mb(n,e,t){const s=n.shape.length;N(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),N(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)N(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function WD(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function gb(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function eC(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function tC(n,e,t){return t<=n?t:t-(e-1)}function nC(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function UD(n,e,t,s,r,o,i,a,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;u=sC(i,p,f,s,n),h=rC(a,p,f,r,n),d=eC(o,p,f,n)}else for(let p=0;p<c;p++)u[p]=iC(i,s,o,n,p,l),h[p]=aC(a,r,o,n,p,l),d[p]=oC(o,p,l);return{begin:u,end:h,strides:d}}function sC(n,e,t,s,r){const o=[...r],i=nC(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=tC(e,t,a);let c=s[l];n&1<<l&&(c=0),o[a]=c}return o}function rC(n,e,t,s,r){const o=[...r],i=nC(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=tC(e,t,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),o[a]=c}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=go(0,o[a],r[a])}return o}function oC(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function iC(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=go(0,i,l-1),i}function aC(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=go(0,i,l):i=go(-1,i,l-1),i}function yb(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function bb(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function df(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{N(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(N(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function xb(n,e,t,s,r,o,i,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)u&&(1<<w&a)!==0&&h.numAddAxisAfterEllipsis++,1<<w&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};GD(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const x=!!(d.shrinkAxisMask&1<<w),$=n[w];if($===-1){g.push(x?1:-1);continue}const S=[d.beginMask&1<<w,d.endMask&1<<w],I=[d.strides[w]>0?0:-1,d.strides[w]>0?$:$-1];if(x&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const C=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(x){const _=d.begin[w]<0?$+d.begin[w]:d.begin[w];if(d.begin[w]=_,d.end[w]=d.begin[w]+1,_<0||_>=$)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=B1(d.begin[w],0,d.strides[w],$,S,I),d.end[w]=B1(d.end[w],1,d.strides[w],$,S,I);const A=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===$;p=p&&A,f=f&&(w===0&&d.strides[w]===1||A)}else p=p&&d.strides[w]===1&&C,f=f&&(w===0&&d.strides[w]===1||C);let k,E=!1;if(d.beginValid&&d.endValid?(k=d.end[w]-d.begin[w],E=!0):x?(k=1,E=!0):C&&$>=0&&(d.strides[w]<0?k=-$:k=$,E=!0),E){let A;k===0||k<0!=d.strides[w]<0?A=0:A=Math.trunc(k/d.strides[w])+(k%d.strides[w]!==0?1:0),g.push(A)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const x=d.finalShapeGatherIndices[w];x>=0?y.push(g[x]):x===Ug&&y.push(1)}return{finalShapeSparse:y.filter((w,x)=>d.finalShapeGatherIndices[x]!==Ug),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function GD(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Ug),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(VD),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function B1(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const lC=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:mb,maskToAxes:WD,computeOutShape:gb,stridesWithElidedDims:eC,getNormalizedAxes:UD,startIndicesWithElidedDims:sC,stopIndicesWithElidedDims:rC,stridesForAxis:oC,startForAxis:iC,stopForAxis:aC,isSliceContinous:yb,computeFlatOffset:bb,parseSliceParams:df,sliceInfo:xb},Symbol.toStringTag,{value:"Module"}));class Ni{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class es{constructor(){this.classNameMap={}}static getMap(){return es.instance==null&&(es.instance=new es),es.instance}static register(e){es.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Q(n){N(n.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),N(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),es.register(n)}const HD=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Ni,SerializationMap:es,registerClass:Q},Symbol.toStringTag,{value:"Module"}));const jD=.001,cC=.1;function qD(n,e,t){return t==null&&(t=wb()),Gg(n,e,(s,r)=>vb(s,r,t))}function wb(){return D.backend.floatPrecision()===32?jD:cC}function Gg(n,e,t){let s=!0;if((Kt(n)||Kt(e))&&(s=!1),Kt(n)&&Kt(e)&&(s=!0),s){const i=n.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const i=fr(n),a=fr(e);if(!He(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}const r=Kt(n)?n:Er(n),o=Kt(e)?e:Er(e);if(r.length!==o.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${o.length}.
Actual:   ${r}.
Expected: ${o}.`);for(let i=0;i<o.length;++i){const a=r[i],l=o[i];if(!t(a,l))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function KD(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function XD(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ir(n)||ir(n[0])||ir(e)||ir(e[0])?Gg(n,t,(s,r)=>s==r):Gg(n,e,(s,r)=>vb(s,r,0))}function YD(n,e,t){if(t==null&&(t=wb()),!vb(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function vb(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function ZD(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function JD(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let r=0;r<s.length;r++)if(t[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${t[r]} instead`)}function uC(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?uC(t):n[e]=cr(t)}return n}function QD(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function eO(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const tO=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:cC,expectArraysClose:qD,testEpsilon:wb,expectPromiseToFail:KD,expectArraysEqual:XD,expectNumbersClose:YD,expectValuesInRange:ZD,expectArrayBuffersEqual:JD,encodeStrings:uC,createVideoElement:QD,play:eO},Symbol.toStringTag,{value:"Module"}));const hC="4.1.0";function nO(n,e){let t=T(n,"a","add"),s=T(e,"b","add");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(Ci,r)}const te=F({add_:nO});function sO(n,e){let t=T(n,"a","floorDiv"),s=T(e,"b","floorDiv");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(Wa,r)}const pf=F({floorDiv_:sO});function rO(n,e){let t=T(n,"a","div"),s=T(e,"b","div");if([t,s]=$t(t,s),t.dtype==="int32"&&s.dtype==="int32")return pf(t,s);const r={a:t,b:s},o={};return D.runKernel(La,r,o)}const Ce=F({div_:rO});function oO(n,e){let t=T(n,"a","mul"),s=T(e,"b","mul");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(Qa,r)}const L=F({mul_:oO});function iO(n){const e=T(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(Mc,t)}else{const t={x:e};return D.runKernel(Ac,t)}}const Et=F({abs_:iO});function aO(n){const t={x:T(n,"x","acos")};return D.runKernel(Ca,t)}const $b=F({acos_:aO});function lO(n){const t={x:T(n,"x","acosh")};return D.runKernel(Sa,t)}const Ib=F({acosh_:lO});function cO(n){N(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),N(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>T(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!He(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return D.runKernel(Rc,s)}const dC=F({addN_:cO});function uO(n,e=null,t=!1){const r={x:T(n,"x","all","bool")},o={axis:e,keepDims:t};return D.runKernel(sp,r,o)}const ff=F({all_:uO});function hO(n,e=null,t=!1){const r={x:T(n,"x","any","bool")},o={axis:e,keepDims:t};return D.runKernel(rp,r,o)}const vc=F({any_:hO});function dO(n,e=0){const s={x:T(n,"x","argMax")},r={axis:e};return D.runKernel(Dc,s,r)}const hi=F({argMax_:dO});function pO(n,e=0){const s={x:T(n,"x","argMin")},r={axis:e};return D.runKernel(Oc,s,r)}const Cb=F({argMin_:pO});function fO(n){const t={x:T(n,"x","asin")};return D.runKernel(Na,t)}const Sb=F({asin_:fO});function mO(n){const t={x:T(n,"x","asinh")};return D.runKernel(Ta,t)}const Nb=F({asinh_:mO});function gO(n){const t={x:T(n,"x","atan")};return D.runKernel(ka,t)}const Tb=F({atan_:gO});function yO(n,e){let t=T(n,"a","atan2"),s=T(e,"b","atan2");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(_a,r)}const kb=F({atan2_:yO});function bO(n){const t={x:T(n,"x","atanh")};return D.runKernel(Ea,t)}const Eb=F({atanh_:bO});function Fu(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],l=Vr(r);return Gt(n,a,t,o,s,null,null,l)}function Ss(n,e,t,s,r,o,i="channelsLast"){const[a,l]=bd(e);let c;if(i==="channelsLast")c=[a,l,n[3],n[3]];else if(i==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Gt(n,c,t,s,r,o,!1,i)}function Br(n,e,t,s,r,o,i="NDHWC"){const[a,l,c]=Hg(e);let u,h;if(i==="NDHWC")h="channelsLast",u=[a,l,c,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return To(n,u,t,s,r,!1,h,o)}function Gt(n,e,t,s,r,o,i=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=n;else if(a==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=bd(t),[y,b]=bd(s),w=Yi(d,y),x=Yi(p,b),{padInfo:$,outHeight:S,outWidth:I}=vO(r,c,u,m,g,w,x,o,a),C=i?f*h:f;let k;return a==="channelsFirst"?k=[l,C,S,I]:a==="channelsLast"&&(k=[l,S,I,C]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:S,outWidth:I,outChannels:C,padInfo:$,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:n,outShape:k,filterShape:e}}function To(n,e,t,s,r,o=!1,i="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,h,d]=n;else if(i==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[y,b,w]=Hg(t),[x,$,S]=Hg(s),I=Yi(p,x),C=Yi(f,$),k=Yi(m,S),{padInfo:E,outDepth:A,outHeight:_,outWidth:O}=$O(r,c,u,h,y,b,w,I,C,k,a),M=o?g*d:g;let W;return i==="channelsFirst"?W=[l,M,A,_,O]:i==="channelsLast"&&(W=[l,A,_,O,M]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:_,outWidth:O,outChannels:M,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:k,dilationDepth:x,dilationHeight:$,dilationWidth:S,inShape:n,outShape:W,filterShape:e}}function xO(n,e,t,s,r){s==null&&(s=_b(n,e,t));const o=n[0],i=n[1],a=ti((o-e+2*s)/t+1,r),l=ti((i-e+2*s)/t+1,r);return[a,l]}function wO(n,e,t,s,r,o){r==null&&(r=_b(n,e,s));const i=n[0],a=n[1],l=n[2],c=ti((i-e+2*r)/s+1,o),u=ti((a-e+2*r)/s+1,o),h=ti((l-e+2*r)/s+1,o);return[c,u,h,t]}function _b(n,e,t,s=1){const r=Yi(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function bd(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Hg(n){return typeof n=="number"?[n,n,n]:n}function Yi(n,e){return e<=1?n:n+(n-1)*(e-1)}function vO(n,e,t,s,r,o,i,a,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=xO([e,t],o,s,n,a);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/r);const d=Math.max(0,(u-1)*s+o-e),p=Math.max(0,(h-1)*r+i-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),y=p-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-o+1)/s),h=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=ti((e-o+d+p)/s+1,a),h=ti((t-i+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function $O(n,e,t,s,r,o,i,a,l,c,u){let h,d,p,f;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=wO([e,t,s,1],a,1,r,n,u);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/i);const m=(d-1)*r+a-e,g=(p-1)*o+l-t,y=(f-1)*i+c-s,b=Math.floor(m/2),w=m-b,x=Math.floor(g/2),$=g-x,S=Math.floor(y/2),I=y-S;h={top:x,bottom:$,left:S,right:I,front:b,back:w,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/r),p=Math.ceil((t-l+1)/o),f=Math.ceil((s-c+1)/i);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function ti(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function xo(n){const[e,t,s]=bd(n);return e===1&&t===1&&s===1}function en(n,e){return xo(n)||xo(e)}function Vr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function wn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")N(ii(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{N(ii(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}function IO(n,e){const s={x:T(n,"x","reshape","string_or_numeric")},r={shape:e};return D.runKernel(xu,s,r)}const P=F({reshape_:IO});function CO(n,e,t,s,r){const o=T(n,"x","avgPool","float32"),i=1;N(en(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),wn("avgPool",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=D.runKernel(Fc,c,u);return h=he(h,o.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Lu=F({avgPool_:CO});function SO(n,e,t,s,r,o="NDHWC"){const i=T(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),N(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),wn("avgPool3d",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let h=D.runKernel(Lc,c,u);return h=he(h,a.dtype),l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Ab=F({avgPool3d_:SO});function NO(n,e=0){N(n.length>=1,()=>"Pass at least one tensor to concat");const t=wc(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return ur(t[0]);const s=t,r={axis:e};return D.runKernel(Bc,s,r)}const St=F({concat_:NO});function TO(n){const t={x:T(n,"x","sigmoid","float32")};return D.runKernel(ul,t)}const Ms=F({sigmoid_:TO});function kO(n,e,t){const s=T(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return D.runKernel(Cu,r,o)}const qe=F({slice_:kO});function EO(n){const t={x:T(n,"x","tanh","float32")};return D.runKernel(gl,t)}const di=F({tanh_:EO});function _O(n,e,t,s,r,o){const i=T(n,"forgetBias","basicLSTMCell"),a=T(e,"lstmKernel","basicLSTMCell"),l=T(t,"lstmBias","basicLSTMCell"),c=T(s,"data","basicLSTMCell"),u=T(r,"c","basicLSTMCell"),h=T(o,"h","basicLSTMCell"),d=St([c,h],1),p=Be(d,a),f=te(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=qe(f,[0,0],y),w=qe(f,[0,g],y),x=qe(f,[0,g*2],y),$=qe(f,[0,g*3],y),S=te(L(Ms(b),di(w)),L(u,Ms(te(i,x)))),I=L(di(S),Ms($));return[S,I]}const pC=F({basicLSTMCell_:_O});function AO(n,e,t){const s=T(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);N(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),N(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),N(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return D.runKernel(zc,o,i)}const Pu=F({batchToSpaceND_:AO});function RO(n){let e;return n.rank===0||n.rank===1?e=P(n,[1,1,1,n.size]):n.rank===2?e=P(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=P(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}function DO(n,e,t,s,r,o){o==null&&(o=.001);const i=T(n,"x","batchNorm"),a=T(e,"mean","batchNorm"),l=T(t,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;s!=null&&(u=T(s,"offset","batchNorm")),N(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:RO(i),scale:c,offset:u,mean:a,variance:l},p={varianceEpsilon:o},f=D.runKernel(Xc,d,p);return P(f,i.shape)}const wl=F({batchNorm_:DO});function OO(n,e,t,s,r,o){const i=T(n,"x","batchNorm"),a=T(e,"mean","batchNorm"),l=T(t,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),N(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),wl(i,a,l,u,c,o)}const Rb=F({batchNorm2d_:OO});function FO(n,e,t,s,r,o){const i=T(n,"x","batchNorm"),a=T(e,"mean","batchNorm"),l=T(t,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),N(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),wl(i,a,l,u,c,o)}const Db=F({batchNorm3d_:FO});function LO(n,e,t,s,r,o){const i=T(n,"x","batchNorm"),a=T(e,"mean","batchNorm"),l=T(t,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),N(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),wl(i,a,l,u,c,o)}const Ob=F({batchNorm4d_:LO});function PO(n,e,t){const s=T(n,"x","bincount"),r=T(e,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return D.runKernel(ap,o,i)}const Fb=F({bincount_:PO});function zO(n,e){const t=T(n,"s0","broadcastArgs","int32"),s=T(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return D.runKernel(lp,r)}const fC=F({broadcastArgs_:zO});function MO(n,e){let t=T(n,"broadcastTo","x");const s=t.shape;if(Xn(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=P(t,c)}const r=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return ur(t);const a={x:t},l={reps:o};return D.runKernel(yl,a,l)}const ni=F({broadcastTo_:MO});function BO(n){const t={x:T(n,"x","ceil","float32")};return D.runKernel(Ra,t)}const Lb=F({ceil_:BO});function Ti(n,e,t){Xn(n);const s={shape:n,value:e,dtype:t};return D.runKernel(Ip,{},s)}function VO(n,e,t){const s=T(n,"x","clipByValue");if(N(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Ti(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return D.runKernel(Da,r,o)}const An=F({clipByValue_:VO});function WO(n){return St(n,0)}const Pb=F({concat1d_:WO});function UO(n,e){return St(n,e)}const zb=F({concat2d_:UO});function GO(n,e){return St(n,e)}const Mb=F({concat3d_:GO});function HO(n,e){return St(n,e)}const Bb=F({concat4d_:HO});function jO(n,e,t,s,r="NHWC",o=[1,1],i){const a=T(n,"x","conv2d","float32"),l=T(e,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),wn("conv2d",s,i);const h=r==="NHWC"?c.shape[3]:c.shape[1];N(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),N(en(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=D.runKernel(Vc,d,p);return u?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Dr=F({conv2d_:jO});function qO(n,e,t,s,r="NWC",o=1,i){const a=T(n,"x","conv1d"),l=T(e,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=P(a,[1,a.shape[0],a.shape[1]])),N(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),wn("conv1d",s,i),N(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(en(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),N(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=P(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=P(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Dr(d,h,[1,t],s,"NHWC",[1,o],i);return u?P(g,[g.shape[2],g.shape[3]]):P(g,[g.shape[0],g.shape[2],g.shape[3]])}const mf=F({conv1d_:qO});function KO(n,e,t,s,r,o="NHWC",i){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,c=!1;e.rank===3&&(c=!0,l=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),N(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?l.shape[3]:l.shape[1];N(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),N(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),wn("conv2dDerInput",r,i);const d={dy:l,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},f=D.runKernel(Wc,d,p);return c?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Vb=F({conv2DBackpropInput_:KO});function XO(n,e,t,s,r,o){const i=T(n,"x","conv2dTranspose"),a=T(e,"filter","conv2dTranspose");return Vb(t,i,a,s,r,"NHWC",o)}const gf=F({conv2dTranspose_:XO});function YO(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=T(n,"x","conv3d"),a=T(e,"filter","conv3d");let l=i,c=!1;i.rank===4&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),N(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),N(en(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),N(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:t,pad:s,dataFormat:r,dilations:o},d=D.runKernel(Uc,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Wb=F({conv3d_:YO});function ZO(n,e,t,s,r){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],c=i.shape[4];N(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),N(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),N(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),N(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),N(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const u={dy:i,filter:t},h={pad:r,strides:s,inputShape:o},d=D.runKernel(dp,u,h);return a?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const mC=F({conv3DBackpropInput_:ZO});function JO(n,e,t,s,r){const o=T(n,"x","conv3dTranspose"),i=T(e,"filter","conv3dTranspose");return mC(t,o,i,s,r)}const Ub=F({conv3dTranspose_:JO});function QO(n){const t={x:T(n,"x","cos","float32")};return D.runKernel(Oa,t)}const zu=F({cos_:QO});function eF(n){const t={x:T(n,"x","cosh","float32")};return D.runKernel(Fa,t)}const yf=F({cosh_:eF});function tF(n,e=0,t=!1,s=!1){const o={x:T(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return D.runKernel(pp,o,i)}const $c=F({cumprod_:tF});function nF(n,e=0,t=!1,s=!1){const o={x:T(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return D.runKernel(Gc,o,i)}const bf=F({cumsum_:nF});function sF(n,e,t,s=!1){const r=T(n,"x","denseBincount"),o=T(e,"weights","denseBincount");N(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),N(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return D.runKernel(mp,i,a)}const xd=F({denseBincount_:sF});function rF(n,e,t="NHWC"){const s=T(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];N(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),N(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),N(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),N(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return D.runKernel(gp,a,l)}const Gb=F({depthToSpace_:rF});function oF(n,e,t,s,r="NHWC",o=[1,1],i){const a=T(n,"x","depthwiseConv2d","float32"),l=T(e,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?c.shape[3]:c.shape[1];N(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),wn("depthwiseConv2d",s,i);const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=D.runKernel(Hc,d,p);return u?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const vl=F({depthwiseConv2d_:oF});function iF(n){const t={x:T(n,"x","diag")};return D.runKernel(xp,t)}const gC=F({diag_:iF});function aF(n,e,t,s,r=[1,1],o="NHWC"){const i=T(n,"x","dilation2d"),a=T(e,"filter","dilation2d");N(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),N(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),N(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,c=!1;i.rank===3&&(l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:t,pad:s,dilations:r},d=D.runKernel(jc,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Hb=F({dilation2d_:aF});function lF(n,e){let t=T(n,"a","equal","string_or_numeric"),s=T(e,"b","equal","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(qc,r)}const Gn=F({equal_:lF});function cF(n,e,t){const s=T(e,"a","where"),r=T(t,"b","where"),o=T(n,"condition","where","bool"),i=Oe(Oe(o.shape,s.shape),r.shape),a=ni(o,i),l=ni(s,i),c=ni(r,i),u={condition:a,t:l,e:c};return D.runKernel(Iu,u)}const dn=F({where_:cF});function uF(n){const t={x:T(n,"x","zerosLike")};return D.runKernel(Au,t)}const Ke=F({zerosLike_:uF});function hF(n,e){let t=T(n,"a","div"),s=T(e,"b","div");[t,s]=$t(t,s);const r=Ce(t,s),o=Ke(r),i=Gn(s,o);return dn(i,o,r)}const jb=F({divNoNan_:hF});function dF(n,e){const t=T(n,"t1","dot"),s=T(e,"t2","dot");N((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(N(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=P(t,[1,-1]),a=P(s,[-1,1]),l=Be(i,a);return P(l,[])}else if(t.rank===1&&s.rank===2){const i=P(t,[1,-1]),a=P(s,[s.shape[0],s.shape[1]]),l=Be(i,a);return P(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=P(s,[-1,1]),a=Be(t,i);return P(a,[a.size])}else{const i=P(s,[s.shape[0],s.shape[1]]);return Be(t,i)}}const qb=F({dot_:dF});function pF(n,...e){const t=e.map((r,o)=>T(r,`tensors${o}`,"einsum")),s={equation:n};return D.runKernel(wp,t,s)}const yC=F({einsum_:pF});function fF(n){const t={x:T(n,"x","elu","float32")};return D.runKernel(Pa,t)}const $l=F({elu_:fF});function mF(n){let e=T(n,"x","erf");N(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=he(e,"float32"));const t={x:e};return D.runKernel(za,t)}const Kb=F({erf_:mF});function Xb(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function bC(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}function Ht(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function Nt(n,e){const t=e.map(s=>1);return bC(n,t,e)}function tn(n,e,t){N(Xb(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function It(n,e){if(Xb(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function ko(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Tt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}function gF(n,e=null,t=!1){const r={x:T(n,"x","max")},o={reductionIndices:e,keepDims:t};return D.runKernel(ou,r,o)}const rs=F({max_:gF});function yF(n,e=null,t=!1){const r={x:T(n,"x","min")},o={axis:e,keepDims:t};return D.runKernel(cu,r,o)}const ia=F({min_:yF});function bF(n,e){let t=T(n,"base","pow"),s=T(e,"exp","pow");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(el,r)}const Or=F({pow_:bF});function ke(n,e){if((Kt(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Kt(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return No(n,[],[],e)}function xF(n){const t={x:T(n,"x","sqrt","float32")};return D.runKernel(dl,t)}const Jt=F({sqrt_:xF});function wF(n){const e=T(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const ot=F({square_:wF});function vF(n,e=null,t=!1){let s=T(n,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return D.runKernel(Su,r,o)}const we=F({sum_:vF});function $F(n,e="euclidean",t=null,s=!1){n=T(n,"x","norm");const r=xC(n,e,t);let o=r.shape;if(s){const i=Ve(t,n.shape);o=Nt(r.shape,i)}return P(r,o)}function xC(n,e,t=null){if(n.rank===0)return Et(n);if(n.rank!==1&&t===null)return xC(P(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return we(Et(n),t);if(e===1/0)return rs(Et(n),t);if(e===-1/0)return ia(Et(n),t);if(e==="euclidean"||e===2)return Jt(we(Or(Et(n),ke(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return rs(we(Et(n),t[0]),t[1]-1);if(e===1/0)return rs(we(Et(n),t[1]),t[0]);if(e===-1/0)return ia(we(Et(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Jt(we(ot(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Il=F({norm_:$F});function IF(n,e=null,t=!1){return Il(n,"euclidean",e,t)}const Yb=F({euclideanNorm_:IF});function CF(n){const t={x:T(n,"x","exp")};return D.runKernel(Ma,t)}const Hn=F({exp_:CF});function SF(n,e=0){const t=T(n,"x","expandDims","string_or_numeric");N(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return D.runKernel(Kc,s,r)}const on=F({expandDims_:SF});function NF(n){const t={x:T(n,"x","expm1")};return D.runKernel(Ba,t)}const Zb=F({expm1_:NF});function TF(n,e){const t=T(n,"x","tile","string_or_numeric");N(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return D.runKernel(yl,s,r)}const ts=F({tile_:TF});function kF(n,e,t,s="float32"){e==null&&(e=n);const r=ze([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=P(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return ts(on(i,0),[t[0],1,1]);if(t.length===2)return ts(on(on(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return ts(on(on(on(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const xf=F({eye_:kF});function EF(n){const t={x:T(n,"x","floor","float32")};return D.runKernel(Va,t)}const Cl=F({floor_:EF});function _F(n,e,t=0,s=0){const r=T(n,"x","gather"),o=T(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return D.runKernel(Yc,i,a)}const Sl=F({gather_:_F});function AF(n,e){let t=T(n,"a","greater","string_or_numeric"),s=T(e,"b","greater","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Zc,r)}const vn=F({greater_:AF});function RF(n,e){let t=T(n,"a","greaterEqual","string_or_numeric"),s=T(e,"b","greaterEqual","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Ua,r)}const Wr=F({greaterEqual_:RF});function DF(n){const t={x:T(n,"x","isFinite")};return D.runKernel(Ha,t)}const Jb=F({isFinite_:DF});function OF(n){const t={x:T(n,"x","isInf")};return D.runKernel(ja,t)}const Qb=F({isInf_:OF});function FF(n){const t={x:T(n,"x","isNaN")};return D.runKernel(qa,t)}const ex=F({isNaN_:FF});function LF(n,e=.2){const s={x:T(n,"x","leakyRelu")},r={alpha:e};return D.runKernel(Jc,s,r)}const Mu=F({leakyRelu_:LF});function PF(n,e){let t=T(n,"a","less","string_or_numeric"),s=T(e,"b","less","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Qc,r)}const wf=F({less_:PF});function zF(n,e){let t=T(n,"a","lessEqual","string_or_numeric"),s=T(e,"b","lessEqual","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(eu,r)}const Eo=F({lessEqual_:zF});function wC(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return D.runKernel(kp,{},s)}function MF(n,e=5,t=1,s=1,r=.5){const o=T(n,"x","localResponseNormalization");N(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),N(ii(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=P(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},c={depthRadius:e,bias:t,alpha:s,beta:r},u=D.runKernel(ru,l,c);return a?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const tx=F({localResponseNormalization_:MF});function BF(n){const t={x:T(n,"x","log","float32")};return D.runKernel(Ka,t)}const jn=F({log_:BF});function VF(n){const t={x:T(n,"x","log1p")};return D.runKernel(Xa,t)}const Bu=F({log1p_:VF});function WF(n){return N(yo(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=T(e,"x","tf.grad","string_or_numeric"),r=t!=null?T(t,"dy","tf.grad"):null;return D.tidy(()=>{const{value:o,grads:i}=D.gradients(()=>n(s),[s],r);return r!=null&&Qt(o.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vf(i),i[0]})}}function UF(n){return N(yo(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{N(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=wc(e,"args","tf.grads","string_or_numeric"),r=t!=null?T(t,"dy","tf.grads"):null;return D.tidy(()=>{const{value:o,grads:i}=D.gradients(()=>n(...s),s,r);return r!=null&&Qt(o.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vf(i),i})}}function GF(n){return N(yo(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{N(e instanceof Ye,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),N(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=D.gradients(()=>n(e),[e],t);return vf(s),{grad:s[0],value:r}}}function HF(n){return N(yo(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{N(Array.isArray(e)&&e.every(r=>r instanceof Ye),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),N(t==null||t instanceof Ye,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=D.gradients(()=>n(...e),e,t);return t!=null&&Qt(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vf(s.grads),s}}function vC(n,e){N(yo(n),()=>"The f passed in variableGrads(f) must be a function"),N(e==null||Array.isArray(e)&&e.every(c=>c instanceof xc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in D.registeredVariables)e.push(D.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,r=e.length;e=e.filter(c=>c.trainable),N(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=D.gradients(n,e,null,o);N(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:i,grads:l}}function mr(n){return D.customGrad(n)}function vf(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function jF(n){const t={x:T(n,"x","softplus")};return D.runKernel(hl,t)}const ki=F({softplus_:jF});function qF(n){const e=T(n,"x","logSigmoid");return mr(s=>({value:ft(ki(ft(s))),gradFunc:i=>L(i,Ms(ft(s)))}))(e)}const nx=F({logSigmoid_:qF});function KF(n,e){let t=T(n,"a","sub"),s=T(e,"b","sub");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(fl,r)}const ye=F({sub_:KF});function XF(n,e=-1){const t=T(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return mr((r,o)=>{const a=rs(r,e,!0),l=ye(r,a),c=ye(he(l,"float32"),jn(we(Hn(l),e,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=Hn(p);return ye(h,L(we(h,e,f),m))}}})(t)}const $f=F({logSoftmax_:XF});function YF(n,e=null,t=!1){const s=T(n,"x","logSumExp"),r=Ve(e,s.shape),o=rs(s,r,!0),i=ye(s,o),a=Hn(i),l=we(a,r),c=jn(l),u=te(P(o,c.shape),c);if(t){const h=Nt(u.shape,r);return P(u,h)}return u}const If=F({logSumExp_:YF});function ZF(n,e){const t=T(n,"a","logicalAnd","bool"),s=T(e,"b","logicalAnd","bool");Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(tu,r)}const Cs=F({logicalAnd_:ZF});function JF(n){const t={x:T(n,"x","logicalNot","bool")};return D.runKernel(nu,t)}const Vu=F({logicalNot_:JF});function QF(n,e){const t=T(n,"a","logicalOr","bool"),s=T(e,"b","logicalOr","bool");Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(su,r)}const Cf=F({logicalOr_:QF});function eL(n,e){const t=T(n,"a","logicalXor","bool"),s=T(e,"b","logicalXor","bool");return Oe(t.shape,s.shape),Cs(Cf(n,e),Vu(Cs(n,e)))}const sx=F({logicalXor_:eL});const Eh=2147483648;function tL(n,e,t="left"){const s=T(n,"sortedSequence","searchSorted"),r=T(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=P(s,[-1,o]),l=P(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(K(l.shape)>=Eh)throw new Error(`values tensor size must less than ${Eh}`);if(a.shape[1]>=Eh)throw new Error(`trailing dim_size must less than ${Eh} for int32 output type, was ${a.shape[1]}`);const c={sortedSequence:a,values:l},u={side:t};return D.runKernel(Hp,c,u)}const Sf=F({searchSorted_:tL});function $C(n,e){return Sf(n,e,"left")}function nL(n,e,t,s,r){const o=T(n,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),N(en(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),wn("maxPool",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=D.runKernel(iu,c,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Wu=F({maxPool_:nL});function sL(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=T(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),N(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),wn("maxPool3d",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},h=D.runKernel(au,c,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const rx=F({maxPool3d_:sL});function rL(n,e,t,s,r=!1){const i={x:T(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=D.runKernel(Rp,i,a);return{result:l[0],indexes:l[1]}}const IC=F({maxPoolWithArgmax_:rL});function oL(n,e){let t=T(n,"a","maximum"),s=T(e,"b","maximum");[t,s]=$t(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Ya,r)}const br=F({maximum_:oL});function iL(n,e=null,t=!1){const r={x:T(n,"x","mean")},o={axis:e,keepDims:t};return D.runKernel(lu,r,o)}const xt=F({mean_:iL});function _t(n,e="float32"){if(Xn(n),e==="complex64"){const s=_t(n,"float32"),r=_t(n,"float32");return Rr(s,r)}const t=Zt(K(n),e);return D.makeTensor(t,n,e)}function Wn(n,e="float32"){if(Xn(n),e==="complex64"){const s=Wn(n,"float32"),r=_t(n,"float32");return Rr(s,r)}const t=np(K(n),e);return D.makeTensor(t,n,e)}function CC(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=T(n,"x","meshgrid",n instanceof Ye?n.dtype:"float32");if(e===void 0)return[s];let r=T(e,"y","meshgrid",e instanceof Ye?e.dtype:"float32");const o=K(s.shape),i=K(r.shape);return t==="xy"?(s=P(s,[1,-1]),r=P(r,[-1,1]),[Be(Wn([i,1],s.dtype),s),Be(r,Wn([1,o],r.dtype))]):(s=P(s,[-1,1]),r=P(r,[1,-1]),[Be(s,Wn([1,i],s.dtype)),Be(Wn([o,1],r.dtype),r)])}function aL(n,e){let t=T(n,"a","minimum"),s=T(e,"b","minimum");[t,s]=$t(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Za,r)}const Nl=F({minimum_:aL});function lL(n,e,t){N(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=T(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)N(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return D.runKernel(uu,i,o)}const ox=F({mirrorPad_:lL});function cL(n,e){let t=T(n,"a","mod"),s=T(e,"b","mod");[t,s]=$t(t,s);const r={a:t,b:s};return D.runKernel(Ja,r)}const ix=F({mod_:cL});function uL(n,e=null,t=!1){n=T(n,"x","moments");const s=Ve(e,n.shape),r=xt(n,s,t);let o=r.shape;t||(o=Nt(r.shape,s));const i=ot(ye(he(n,"float32"),P(r,o))),a=xt(i,s,t);return{mean:r,variance:a}}const Uu=F({moments_:uL});function hL(n,e,t,s){const r=T(e,"data","multiRNNCell"),o=wc(t,"c","multiRNNCell"),i=wc(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<n.length;h++){const d=n[h](a,o[h],i[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const c=[],u=[];for(let h=0;h<l.length;h+=2)c.push(l[h]),u.push(l[h+1]);return[c,u]}const SC=F({multiRNNCell_:hL});function dL(n,e,t,s=!1){const r=T(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const l={logits:i===1?P(r,[1,-1]):r},c={numSamples:e,seed:t,normalized:s},u=D.runKernel(Dp,l,c);return i===1?P(u,[u.size]):u}const NC=F({multinomial_:dL});function pL(n,e){let t=T(n,"a","notEqual","string_or_numeric"),s=T(e,"b","notEqual","string_or_numeric");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(du,r)}const pi=F({notEqual_:pL});function fL(n){const t={x:T(n,"x","onesLike")};return D.runKernel(pu,t)}const qn=F({onesLike_:fL});function mL(n,e){const t=T(n,"v1","outerProduct"),s=T(e,"v2","outerProduct");N(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=P(t,[-1,1]),o=P(s,[1,-1]);return Be(r,o)}const TC=F({outerProduct_:mL});function gL(n,e,t=0){const s=T(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return D.runKernel(gu,o,r)}const Ur=F({pad_:gL});function yL(n,e,t=0){return N(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ur(n,[e],t)}const kC=F({pad1d_:yL});function bL(n,e,t=0){return N(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ur(n,e,t)}const EC=F({pad2d_:bL});function xL(n,e,t=0){return N(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ur(n,e,t)}const _C=F({pad3d_:xL});function wL(n,e,t=0){return N(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ur(n,e,t)}const AC=F({pad4d_:wL});function vL(n,e,t){const s=T(n,"x","spaceToBatchND");N(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),N(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),N(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return D.runKernel(Nu,r,o)}const Gu=F({spaceToBatchND_:vL});function $L(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=T(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(en(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const u=Ss(l.shape,e,o,r,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=CL([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=IL([u.inHeight,u.inWidth],h,d),g=p?s:"valid",y=p?l:Gu(l,h,f),w=(t==="avg"?()=>Lu(y,e,o,g,i):()=>Wu(y,e,o,g,i))(),x=p?w:Pu(w,h,m);return c?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function IL(n,e,t){const s=t.map(u=>u[0]),r=t.map(u=>u[1]),o=n.concat(s,r),i=e.map((u,h)=>(u-o[h]%u)%u),a=r.map((u,h)=>u+i[h]),l=e.map((u,h)=>[s[h],a[h]]),c=e.map((u,h)=>[0,i[h]]);return[l,c]}function CL(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const ax=F({pool_:$L});function SL(n,e){const t=T(n,"x","prelu"),s=T(e,"alpha","prelu"),r={x:t,alpha:s};return D.runKernel(yu,r)}const Hu=F({prelu_:SL});function NL(n,e=null,t=!1){let s=T(n,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return D.runKernel(bu,r,o)}const lx=F({prod_:NL});function TL(n,e,t,s){const r=n.map((u,h)=>T(u,`tensors${h}`,"raggedGather","int32")),o=T(e,"paramsDenseValues","raggedGather"),i=T(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},c=D.runKernel(Pp,a,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const RC=F({raggedGather_:TL});function kL(n,e,t){const s=T(n,"starts","raggedRange"),r=T(e,"limits","raggedRange",s.dtype),o=T(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=D.runKernel(zp,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const DC=F({raggedRange_:kL});function EL(n,e,t,s,r){const o=T(n,"shape","raggedTensorToTensor","int32"),i=T(e,"values","raggedTensorToTensor"),a=T(t,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>T(h,`tensors${d}`,"raggedTensorToTensor","int32")),c={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},u={rowPartitionTypes:r};return D.runKernel(Mp,c,u)}const OC=F({raggedTensorToTensor_:EL});function _L(n,e,t){Xn(n);const s=K(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return D.makeTensor(r,n,t)}const FC=F({rand_:_L});var LC={exports:{}};(function(n){(function(e,t,s){function r(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function i(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,u),d.state=function(){return o(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(rt,n,!1)})(LC);var PC={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(rt,n,!1)})(PC);var zC={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(rt,n,!1)})(zC);var MC={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(rt,n,!1)})(MC);var BC={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;u.w=g,u.X=y,u.i=f}c(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(rt,n,!1)})(BC);var VC={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(rt,n,!1)})(VC);var WC={exports:{}};const AL={},RL=Object.freeze(Object.defineProperty({__proto__:null,default:AL},Symbol.toStringTag,{value:"Module"})),UC=Wy(RL);(function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),c=s.pow(2,i),u=c*2,h=r-1,d;function p(x,$,S){var I=[];$=$==!0?{entropy:!0}:$||{};var C=y(g($.entropy?[x,w(t)]:x??b(),3),I),k=new f(I),E=function(){for(var A=k.g(o),_=l,O=0;A<c;)A=(A+O)*r,_*=r,O=k.g(1);for(;A>=u;)A/=2,_/=2,O>>>=1;return(A+O)/_};return E.int32=function(){return k.g(4)|0},E.quick=function(){return k.g(4)/4294967296},E.double=E,y(w(k.S),t),($.pass||S||function(A,_,O,M){return M&&(M.S&&m(M,k),A.state=function(){return m(k,{})}),O?(s[a]=A,_):A})(E,C,"global"in $?$.global:this==s,$.state)}function f(x){var $,S=x.length,I=this,C=0,k=I.i=I.j=0,E=I.S=[];for(S||(x=[S++]);C<r;)E[C]=C++;for(C=0;C<r;C++)E[C]=E[k=h&k+x[C%S]+($=E[C])],E[k]=$;(I.g=function(A){for(var _,O=0,M=I.i,W=I.j,z=I.S;A--;)_=z[M=h&M+1],O=O*r+z[h&(z[M]=z[W=h&W+_])+(z[W]=_)];return I.i=M,I.j=W,O})(r)}function m(x,$){return $.i=x.i,$.j=x.j,$.S=x.S.slice(),$}function g(x,$){var S=[],I=typeof x,C;if($&&I=="object")for(C in x)try{S.push(g(x[C],$-1))}catch{}return S.length?S:I=="string"?x:x+"\0"}function y(x,$){for(var S=x+"",I,C=0;C<S.length;)$[h&C]=h&(I^=$[h&C]*19)+S.charCodeAt(C++);return w($)}function b(){try{var x;return d&&(x=d.randomBytes)?x=x(r):(x=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(x)),w(x)}catch{var $=e.navigator,S=$&&$.plugins;return[+new Date,e,S,e.screen,w(t)]}}function w(x){return String.fromCharCode.apply(0,x)}if(y(s.random(),t),n.exports){n.exports=p;try{d=UC}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:rt,[],Math)})(WC);var DL=LC.exports,OL=PC.exports,FL=zC.exports,LL=MC.exports,PL=BC.exports,zL=VC.exports,Ei=WC.exports;Ei.alea=DL;Ei.xor128=OL;Ei.xorwow=FL;Ei.xorshift7=LL;Ei.xor4096=PL;Ei.tychei=zL;var Tl=Ei;class cx{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=Tl.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ML{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=Tl.alea(o.toString()),this.randn=new cx(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class BL{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Tl.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}function VL(n,e,t=1,s="float32",r){if(Xn(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new ML(e,t,s,r),i=ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const GC=F({randomGamma_:VL});function WL(n,e=0,t=1,s,r){if(Xn(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new cx(e,t,s,!1,r),i=ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Nf=F({randomNormal_:WL});function UL(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Nf(n,0,1,e,t)}const HC=F({randomStandardNormal_:UL});function GL(n,e=0,t=1,s="float32",r){Xn(n);const o=ze(n,s),i=new BL(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const kl=F({randomUniform_:GL});function fi(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return D.runKernel(Bp,{},r)}function HL(n){const t={x:T(n,"x","reciprocal")};return D.runKernel(tl,t)}const ux=F({reciprocal_:HL});function jL(n){const t={x:T(n,"x","relu")};return D.runKernel(nl,t)}const js=F({relu_:jL});function qL(n){const t={x:T(n,"x","relu6")};return D.runKernel(sl,t)}const Tf=F({relu6_:qL});function KL(n,e){const s={x:T(n,"x","reverse")},r={dims:e};return D.runKernel($u,s,r)}const as=F({reverse_:KL});function XL(n){const e=T(n,"x","reverse");return N(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),as(e,0)}const jC=F({reverse1d_:XL});function YL(n,e){const t=T(n,"x","reverse");return N(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),as(t,e)}const qC=F({reverse2d_:YL});function ZL(n,e){const t=T(n,"x","reverse");return N(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),as(t,e)}const KC=F({reverse3d_:ZL});function JL(n,e){const t=T(n,"x","reverse");return N(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),as(t,e)}const XC=F({reverse4d_:JL});function QL(n){const t={x:T(n,"x","round")};return D.runKernel(rl,t)}const kf=F({round_:QL});function eP(n){const t={x:T(n,"x","rsqrt","float32")};return D.runKernel(ol,t)}const Ef=F({rsqrt_:eP});function tP(n){const t={x:T(n,"x","selu")};return D.runKernel(il,t)}const _f=F({selu_:tP});function nP(n,e,t,s,r,o=[1,1],i="NHWC"){const a=T(n,"x","separableConv2d"),l=T(e,"depthwiseFilter","separableConv2d"),c=T(t,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),N(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];N(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=vl(u,l,s,r,i,o),g=Dr(f,c,1,"valid",i);return h?P(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Af=F({separableConv2d_:nP});async function sP(n,e){const t=T(n,"x","setdiff1d"),s=T(e,"y","setdiff1d");N(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),N(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),N(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let u=0;u<r.length;u++)i.has(r[u])||a++;const l=new Lt([a],t.dtype),c=new Lt([a],"int32");for(let u=0,h=0;u<r.length;u++)i.has(r[u])||(l.values[h]=r[u],c.values[h]=u,h++);return[l.toTensor(),c.toTensor()]}const YC=sP;function rP(n){const t={x:T(n,"x","sign")};return D.runKernel(cl,t)}const hx=F({sign_:rP});function oP(n){const t={x:T(n,"x","sin","float32")};return D.runKernel(al,t)}const Rf=F({sin_:oP});function iP(n){const t={x:T(n,"x","sinh")};return D.runKernel(ll,t)}const Df=F({sinh_:iP});function aP(n,e,t){const s=T(n,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),qe(s,[e],[t])}const ju=F({slice1d_:aP});function lP(n,e,t){const s=T(n,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const Of=F({slice2d_:lP});function cP(n,e,t){const s=T(n,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const qu=F({slice3d_:cP});function uP(n,e,t){const s=T(n,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const aa=F({slice4d_:uP});function hP(n,e=-1){const t=T(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return D.runKernel(ku,s,r)}const Ku=F({softmax_:hP});function dP(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel($p,e)}const Xu=F({fft_:dP});function pP(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Np,e)}const la=F({ifft_:pP});function fP(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=P(n,[t,e]);s=la(r)}else{const r=[t,2*(e-1)],o=P(oa(n),[t,e]),i=P(Ou(n),[t,e]),a=as(qe(o,[0,1],[t,e-2]),1),l=L(as(qe(i,[0,1],[t,e-2]),1),ke(-1)),c=St([o,a],1),u=St([i,l],1),h=P(Rr(c,u),[r[0],r[1]]);s=la(h)}if(s=oa(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=P(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const Ff=F({irfft_:fP});function mP(n,e,t=0){const r={x:T(n,"x","split")},o={numOrSizeSplits:e,axis:t};return D.runKernel(Tu,r,o)}const En=F({split_:mP});function gP(n,e){N(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=qe(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=St([n,_t(f)],n.shape.length-1),t=e}else r=n;const o=Ke(r),i=P(Rr(r,o),[s,t]),a=Xu(i),l=Math.floor(t/2)+1,c=oa(a),u=Ou(a),h=En(c,[l,t-l],c.shape.length-1),d=En(u,[l,t-l],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,P(Rr(h[0],d[0]),p)}const Yu=F({rfft_:gP});function yP(n,e){let t=T(n,"a","squaredDifference"),s=T(e,"b","squaredDifference");[t,s]=$t(t,s),Oe(t.shape,s.shape);const r={a:t,b:s},o={};return D.runKernel(pl,r,o)}const Lf=F({squaredDifference_:yP});function bP(n,e){const t=T(n,"x","squeeze","string_or_numeric");return P(t,zr(t.shape,e).newShape)}const _o=F({squeeze_:bP});function xP(n,e=0){const t=wc(n,"tensors","stack","string_or_numeric");N(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&N(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return D.runKernel(mu,s,r)}const Rn=F({stack_:xP});function wP(n,e=0){const s={x:T(n,"x","step")},r={alpha:e};return D.runKernel(bl,s,r)}const _i=F({step_:wP});function vP(n,e,t,s,r=0,o=0,i=0,a=0,l=0){const u={x:T(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return D.runKernel(Jp,u,h)}const dx=F({stridedSlice_:vP});function $P(n){const t={x:T(n,"x","tan","float32")};return D.runKernel(ml,t)}const px=F({tan_:$P});function cn(n,e){$i(n);const t=fr(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return No(n,null,t,e)}function uo(n,e,t){if($i(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=fr(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return No(n,e,s,t)}function ZC(n,e,t){if($i(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=fr(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return No(n,e,s,t)}function JC(n,e,t){if($i(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=fr(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return No(n,e,s,t)}function QC(n,e,t){if($i(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=fr(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,No(n,e,s,t)}function IP(n,e=1,t=!0){const s=T(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,l]=D.runKernel(nf,o,i);return{values:a,indices:l}}const fx=F({topk_:IP});function CP(n,e=0,t=1,s,r){if(Xn(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new cx(e,t,s,!0,r),i=ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Pf=F({truncatedNormal_:CP});function SP(n,e=0){const t=T(n,"x","unique","string_or_numeric");N(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=D.runKernel(rf,s,r);return{values:o,indices:i}}const mx=F({unique_:SP});function NP(n,e,t){const s=T(n,"x","unsortedSegmentSum"),r=T(e,"segmentIds","unsortedSegmentSum","int32");N(ii(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return D.runKernel(_u,o,i)}const zf=F({unsortedSegmentSum_:NP});function TP(n,e=0){const t=T(n,"x","unstack","string_or_numeric");N(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return D.runKernel(Eu,s,r)}const ls=F({unstack_:TP});function eS(n,e){return Sf(n,e,"right")}function gx(n,e=!0,t,s){return D.makeVariable(n,e,t,s)}function Mf(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=ze(n,"int32"),r=ze([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}async function kP(n){const e=T(n,"condition","whereAsync","bool"),t=await e.data(),s=Mf(e.shape,t);return n!==e&&e.dispose(),s}const yx=kP;async function EP(n,e,t){const s=T(n,"tensor","boolMask"),r=T(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;N(i>0,()=>"mask cannot be scalar"),Qt(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+i;m++)l*=a[m];const c=a.slice(0,o).concat([l],a.slice(o+i)),u=P(s,c),h=P(r,[-1]),d=await yx(h),p=_o(d,[1]),f=Sl(u,p,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),f}const tS=EP;function _P(n,e,t,s,r=!0){const o=T(n,"v","movingAverage"),i=T(e,"x","movingAverage"),a=T(t,"decay","movingAverage");AI(o,i),N(He(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=ke(1),c=ye(l,a);let u=L(ye(i,o),c);if(r){N(s!=null,()=>"When using zeroDebias: true, step is required.");const h=T(s,"step","movingAverage");u=Ce(u,ye(l,Or(a,h)))}return te(o,u)}const nS=F({movingAverage_:_P});function AP(n,e,t){Xn(t);const s=T(n,"indices","scatterND","int32"),r=T(e,"updates","scatterND");fb(r,s,t);const o={indices:s,updates:r},i={shape:t};return D.runKernel(Gp,o,i)}const sS=F({scatterND_:AP});function RP(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function DP(n,e,t,s=0){Xn(t);const r=T(n,"sparseIndices","sparseToDense","int32"),o=T(e,"sparseValues","sparseToDense","string_or_numeric"),i=T(s,"defaultValue","sparseToDense",o.dtype);RP(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:t};return D.runKernel(Yp,a,l)}const rS=F({sparseToDense_:DP});function OP(n,e){const t=T(e,"indices","gatherND","int32"),r={params:T(n,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(Sp,r)}const oS=F({gatherND_:OP});function FP(n,e){if(e==null)return n.shape.slice();if(He(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}function LP(n,e,t,s){const r=T(n,"x","dropout");if(N(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),N(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Ye?r.clone():r;const o=FP(r,t),i=1-e,a=Ce(Cl(te(kl(o,0,1,"float32",s),i)),i);return L(r,a)}const bx=F({dropout_:LP});function xx(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Bf(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return cn(r,"float32")}async function PP(n,e,t=1){const s=T(n,"predictions","inTopK"),r=T(e,"targets","inTopK");N(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),N(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Qt(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];N(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[l,c]=[i.length/o,o],u=Mt("bool",l);for(let h=0;h<l;h++){const d=h*c,p=i.subarray(d,d+c),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),u[h]=0;for(let m=0;m<t;m++)if(f[m].index===a[h]){u[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Un(u,r.shape,"bool")}const iS=PP;function zP(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=P(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=P(e,[1,e.shape[0],e.shape[1],e.shape[2]])),N(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?a.shape[3]:a.shape[1],u=o==="NHWC"?l.shape[3]:l.shape[1];N(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),N(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),wn("conv2dDerFilter",r,i);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return D.runKernel(up,h,d)}const wx=F({conv2DBackpropFilter_:zP});function Vf(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return L(n,_i(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Wf(n,e){let t=e;const s=Rt(n.shape,e.shape);return s.length>0&&(t=we(t,s)),P(t,n.shape)}function Uf(n,e,t,s){if(e==="linear")return n;if(e==="relu")return js(n);if(e==="elu")return $l(n);if(e==="relu6")return Tf(n);if(e==="prelu")return Hu(n,t);if(e==="leakyrelu")return Mu(n,s);if(e==="sigmoid")return Ms(n);throw new Error(`Unknown fused activation ${e}.`)}const Gf=(n,e)=>!(n>0)||e==="linear";function MP({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Gf(D.state.gradientDepth,l)===!1){N(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=Dr(n,e,t,s,r,o,i);return a!=null&&(S=te(S,a)),Uf(S,l,c,u)}const h=T(n,"x","conv2d","float32"),d=T(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),wn("fused conv2d",s,i);const m=r==="NHWC"?p.shape[3]:p.shape[1];N(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),N(en(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=Gt(p.shape,d.shape,t,o,s,i);let y;a!=null&&(y=T(a,"bias","fused conv2d"),[y]=$t(y,h),r==="NHWC"?Oe(g.outShape,y.shape):(N(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),N(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const S=c.shape;if(N(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)N(S[0]===1||S[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${g.outChannels}).`);else if(S.length===3)try{Oe(S,g.outShape)}catch{const C=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(C)}b=T(c,"prelu weights","fused conv2d")}const w=(S,I)=>{N(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[C,k,E,A]=I,_=Vf(S,E,l);N(xo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const O=Vb(k.shape,_,C,t,s),M=wx(k,_,C.shape,t,s),W=[O,M];if(A!=null){const z=Wf(A,_);W.push(z)}return W},x={x:p,filter:d,bias:y,preluActivationWeights:b},$={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?mr((I,C,k)=>{let E=D.runKernel(gc,x,$);return k([C,I,E]),f&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:w}})(p,d):mr((I,C,k,E)=>{let A=D.runKernel(gc,x,$);return E([C,I,A,k]),f&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:w}})(p,d,y)}const aS=F({fusedConv2d_:MP});function BP(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=P(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return D.runKernel(yp,c,u)}const lS=F({depthwiseConv2dNativeBackpropFilter_:BP});function VP(n,e,t,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},u={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},h=D.runKernel(bp,c,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const cS=F({depthwiseConv2dNativeBackpropInput_:VP});function WP({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Gf(D.state.gradientDepth,l)===!1){let $=vl(n,e,t,s,r,o,i);return a!=null&&($=te($,a)),Uf($,l,c,u)}const h=T(n,"x","depthwiseConv2d","float32"),d=T(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),N(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),N(en(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),wn("fused depthwiseConv2d",s,i);const m=Gt(p.shape,d.shape,t,o,s,i,!0);let g;a!=null&&(g=T(a,"bias","fused conv2d"),[g]=$t(g,h),Oe(m.outShape,g.shape));let y;c!=null&&(y=T(c,"prelu weights","fused depthwiseConv2d"));const b=($,S)=>{N(xo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[I,C,k,E]=S,A=Vf($,k,l),_=cS(C.shape,A,I,t,s,o,i),O=lS(C,A,I.shape,t,s,o,i);if(E!=null){const M=Wf(g,A);return[_,O,M]}return[_,O]},w={x:p,filter:d,bias:g,preluActivationWeights:y},x={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?mr((S,I,C)=>{let k=D.runKernel(yc,w,x);return C([I,S,k]),f&&(k=P(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:b}})(p,d):mr((S,I,C,k)=>{let E=D.runKernel(yc,w,x);return k([I,S,E,C]),f&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d,g)}const UP=F({fusedDepthwiseConv2d_:WP});function GP({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Gf(D.state.gradientDepth,o)===!1){let A=Be(n,e,t,s);return r!=null&&(A=te(A,r)),Uf(A,o,i,a)}let l=T(n,"a","fused matMul"),c=T(e,"b","fused matMul");[l,c]=$t(l,c);const u=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=K(f),y=K(m);N(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=Oe(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),x=t?P(l,[g,u,d]):P(l,[g,d,u]),$=s?P(c,[y,p,h]):P(c,[y,h,p]);let S;r!=null&&(S=T(r,"bias","fused matMul"),[S]=$t(S,l),Oe(w,S.shape));let I;i!=null&&(I=T(i,"prelu weights","fused matMul"));const C=(A,_)=>{const[O,M,W,z]=_,j=Vf(P(A,W.shape),W,o);let G,Z;if(!t&&!s?(G=Be(j,M,!1,!0),Z=Be(O,j,!0,!1)):!t&&s?(G=Be(j,M,!1,!1),Z=Be(j,O,!0,!1)):t&&!s?(G=Be(M,j,!1,!0),Z=Be(O,j,!1,!1)):(G=Be(M,j,!0,!0),Z=Be(j,O,!0,!0)),r!=null){const se=Wf(z,j);return[G,Z,se]}else return[G,Z]},k={a:x,b:$,bias:S,preluActivationWeights:I},E={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?mr((_,O,M)=>{const W=D.runKernel(mc,k,E);return M([_,O,W]),{value:P(W,w),gradFunc:C}})(x,$):mr((_,O,M,W)=>{const z=D.runKernel(mc,k,E);return W([_,O,z,M]),{value:P(z,w),gradFunc:C}})(x,$,S)}const jg=F({fusedMatMul_:GP});const uS=Object.freeze(Object.defineProperty({__proto__:null,conv2d:aS,depthwiseConv2d:UP,matMul:jg},Symbol.toStringTag,{value:"Module"}));function HP(n){return Bf(n,.54,.46)}const jP=F({hammingWindow_:HP});function qP(n){return Bf(n,.5,.5)}const hS=F({hannWindow_:qP});function KP(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(qe(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,l=St([qe(n,o,e-a),Ti([a],r)]);i.push(l),o+=t}return i.length===0?uo([],[0,e]):P(St(i),[i.length,e])}const dS=F({frame_:KP});function XP(n,e,t,s,r=hS){s==null&&(s=xx(e));const o=dS(n,e,t),i=L(o,r(e));return Yu(i,s)}const YP=F({stft_:XP});function ZP(n,e,t,s,r="bilinear",o=0){const i=T(n,"image","cropAndResize"),a=T(e,"boxes","cropAndResize","float32"),l=T(t,"boxInd","cropAndResize","int32"),c=a.shape[0];N(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),N(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:i,boxes:a,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return D.runKernel(fp,u,h)}const JP=F({cropAndResize_:ZP});function QP(n){const e=T(n,"image","flipLeftRight","float32");N(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(Cp,t,{})}const e3=F({flipLeftRight_:QP});function t3(n){const e=T(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];N(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),N(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,ts(e,r)}const n3=F({grayscaleToRGB_:t3});function s3(n,e,t=0,s=.5){const r=T(n,"image","rotateWithOffset","float32");N(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return D.runKernel(of,o,i)}const r3=F({rotateWithOffset_:s3});function El(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),N(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),N(e.rank===1,()=>"scores must be a 1D tensor"),N(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),N(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}function o3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppression","float32"),i=T(e,"scores","nonMaxSuppression","float32"),a=El(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return D.runKernel(Op,{boxes:o,scores:i},l)}const i3=F({nonMaxSuppression_:o3});function a3(n,e,t){const s=l3(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function l3(n,e,t){return u3(n,e,t||c3)}function c3(n,e){return n>e?1:n<e?-1:0}function u3(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}function Hf(n,e,t,s,r){return vx(n,e,t,s,r,0)}function jf(n,e,t,s,r,o){return vx(n,e,t,s,r,0,!1,o,!0)}function qf(n,e,t,s,r,o){return vx(n,e,t,s,r,o,!0)}function vx(n,e,t,s,r,o,i=!1,a=!1,l=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>r&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(V1);const u=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:w}=g;if(y<r)break;let x=!1;for(let $=h.length-1;$>=w;--$){const S=h3(n,b,h[$]);if(S>=s){x=!0;break}if(g.score=g.score*d3(s,u,S),g.score<=r)break}g.suppressBeginIndex=h.length,x||(g.score===y?(h.push(b),d.push(g.score)):g.score>r&&a3(c,g,V1))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function h3(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(i,u),y=Math.min(a,h),b=Math.min(l,d),w=Math.max(y-m,0)*Math.max(b-g,0);return w/(p+f-w)}function d3(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function V1(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}async function p3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppressionAsync"),i=T(e,"scores","nonMaxSuppressionAsync"),a=El(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:h}=Hf(c,u,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),cn(h,"int32")}const f3=p3;function m3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=T(n,"boxes","nonMaxSuppression"),a=T(e,"scores","nonMaxSuppression"),l=El(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c={boxes:i,scores:a},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=D.runKernel(Lp,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const g3=F({nonMaxSuppressionWithScore_:m3});async function y3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=T(n,"boxes","nonMaxSuppressionAsync"),a=T(e,"scores","nonMaxSuppressionAsync"),l=El(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=qf(u,h,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:cn(d,"int32"),selectedScores:cn(p)}}const b3=y3;function x3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=T(n,"boxes","nonMaxSuppression"),a=T(e,"scores","nonMaxSuppression"),l=El(i,a,t,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:o},f=D.runKernel(Fp,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const w3=F({nonMaxSuppressionPadded_:x3});async function v3(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=T(n,"boxes","nonMaxSuppressionAsync"),a=T(e,"scores","nonMaxSuppressionAsync"),l=El(i,a,t,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=jf(d,p,c,u,h,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:cn(f,"int32"),validOutputs:ke(m,"int32")}}const $3=v3;function I3(n,e,t=!1,s=!1){const r=T(n,"images","resizeBilinear");N(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),N(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),N(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=P(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},c=D.runKernel(vu,a,l);return i?P(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const pS=F({resizeBilinear_:I3});function C3(n,e,t=!1,s=!1){const r=T(n,"images","resizeNearestNeighbor");N(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),N(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),N(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=P(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},c=D.runKernel(wu,a,l);return i?P(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const fS=F({resizeNearestNeighbor_:C3});function S3(n,e="binary",t=!1,s=.5){const r=T(n,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let c=L(cn([s]),255),u,h,d,p;if(N(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),N(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),N(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),N(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[u,h,d]=En(r,[1,1,1],-1);const g=L(u,o),y=L(h,i),b=L(d,a);p=te(te(g,y),b)}else p=n;if(e==="otsu"){const g=Fb(he(kf(p),"int32"),Un([]),256);c=N3(g,l)}const f=t?Eo(p,c):vn(p,c);return he(L(f,255),"int32")}function N3(n,e){let t=cn([-1]),s=cn([0]),r=cn([0]),o,i,a,l,c,u;for(let h=0;h<n.size-1;h++){o=qe(n,0,h+1),i=qe(n,h+1),c=Ce(we(o),e),u=Ce(we(i),e);const d=we(L(o,fi(0,o.size)));a=Ce(d,we(o));const p=Ti(i.shape,o.size),f=te(fi(0,i.size),p),m=L(i,f);l=Ce(we(m),we(i));const g=ye(a,l),y=ye(a,l),b=L(c,u);r=L(L(b,g),y);const w=vn(r,s);s=dn(w,r,s),t=dn(w,cn([h]),t)}return t}const T3=F({threshold_:S3});function k3(n,e,t="nearest",s="constant",r=0,o){const i=T(n,"image","transform","float32"),a=T(e,"transforms","transform","float32");N(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),N(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},c={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return D.runKernel(sf,l,c)}const E3=F({transform_:k3});function _3(n,e,t){N(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),N(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=T(n,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=o),t<0&&(t=i);const a=P(fi(0,o,1,"int32"),[-1,1]),l=fi(0,i,1,"int32"),c=ye(a,l),u=Cs(Eo(c,ke(+e,"int32")),Wr(c,ke(-t,"int32"))),h=_t([o,i],s.dtype);return P(Rn(ls(P(s,[-1,o,i])).map(d=>dn(u,d,h))),r)}const A3=F({bandPart_:_3});function R3(n){let e;if(Array.isArray(n)){e=!1,N(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)N(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=En(n,n.shape[0],0).map(r=>_o(r,[0]));N(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(D.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=L(we(L(t[i],o)),t[i]);o=ye(o,a)}return Ce(o,Il(o,"euclidean"))}));return e?Rn(t,0):t}const D3=F({gramSchmidt_:R3});function O3(n,e=!1){if(N(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return W1(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=ls(P(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[c,u]=W1(l,e);r.push(c),o.push(u)});const i=P(Rn(r,0),n.shape),a=P(Rn(o,0),n.shape);return[i,a]}}function W1(n,e=!1){return D.tidy(()=>{N(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=xf(t),o=ur(n);const i=uo([[1]],[1,1]);let a=ur(i);const l=t>=s?s:t;for(let c=0;c<l;++c){const u=o,h=a,d=r;[a,o,r]=D.tidy(()=>{const p=qe(o,[c,c],[t-c,1]),f=Il(p),m=qe(o,[c,c],[1,1]),g=dn(vn(m,0),uo([[-1]]),uo([[1]])),y=ye(m,L(g,f)),b=Ce(p,y);b.shape[0]===1?a=ur(i):a=St([i,qe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=ft(Ce(Be(g,y),f)),x=qe(o,[c,0],[t-c,s]),$=L(w,a),S=Ge(a);if(c===0)o=ye(x,Be($,Be(S,x)));else{const k=ye(x,Be($,Be(S,x)));o=St([qe(o,[0,0],[c,s]),k],0)}const I=Ge($),C=qe(r,[0,c],[t,r.shape[1]-c]);if(c===0)r=ye(C,Be(Be(C,a),I));else{const k=ye(C,Be(Be(C,a),I));r=St([qe(r,[0,0],[t,c]),k],1)}return[a,o,r]}),De([u,h,d])}return!e&&t>s&&(r=qe(r,[0,0],[t,s]),o=qe(o,[0,0],[s,s])),[r,o]})}const F3=F({qr_:O3});var gn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(gn||(gn={}));function L3(n,e,t=gn.SUM_BY_NONZERO_WEIGHTS){const s=T(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=T(e,"weights","computeWeightedLoss"));const o=r==null?s:L(s,r);if(t===gn.NONE)return o;if(t===gn.SUM)return we(o);if(t===gn.MEAN){if(r==null)return xt(o);{const i=s.size/r.size,a=Ce(we(o),we(r));return i>1?Ce(a,ke(i)):a}}if(t===gn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ce(we(o),ke(s.size));{const i=L(r,Wn(s.shape)),a=he(we(pi(i,ke(0))),"float32");return Ce(we(o),a)}}throw Error(`Unknown reduction: ${t}`)}const Gr=F({computeWeightedLoss_:L3});function P3(n,e,t,s=gn.SUM_BY_NONZERO_WEIGHTS){const r=T(n,"labels","absoluteDifference"),o=T(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=T(t,"weights","absoluteDifference")),Qt(r.shape,o.shape,"Error in absoluteDifference: ");const a=Et(ye(r,o));return Gr(a,i,s)}const z3=F({absoluteDifference_:P3});function M3(n,e,t,s,r=gn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","cosineDistance"),i=T(e,"predictions","cosineDistance");let a=null;s!=null&&(a=T(s,"weights","cosineDistance")),Qt(o.shape,i.shape,"Error in cosineDistance: ");const l=ke(1),c=ye(l,we(L(o,i),t,!0));return Gr(c,a,r)}const B3=F({cosineDistance_:M3});function V3(n,e,t,s=gn.SUM_BY_NONZERO_WEIGHTS){let r=T(n,"labels","hingeLoss");const o=T(e,"predictions","hingeLoss");let i=null;t!=null&&(i=T(t,"weights","hingeLoss")),Qt(r.shape,o.shape,"Error in hingeLoss: ");const a=ke(1);r=ye(L(ke(2),r),a);const l=js(ye(a,L(r,o)));return Gr(l,i,s)}const W3=F({hingeLoss_:V3});function U3(n,e,t,s=1,r=gn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","huberLoss"),i=T(e,"predictions","huberLoss");let a=null;t!=null&&(a=T(t,"weights","huberLoss")),Qt(o.shape,i.shape,"Error in huberLoss: ");const l=ke(s),c=Et(ye(i,o)),u=Nl(c,l),h=ye(c,u),d=te(L(ke(.5),ot(u)),L(l,h));return Gr(d,a,r)}const G3=F({huberLoss_:U3});function H3(n,e,t,s=1e-7,r=gn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","logLoss"),i=T(e,"predictions","logLoss");let a=null;t!=null&&(a=T(t,"weights","logLoss")),Qt(o.shape,i.shape,"Error in logLoss: ");const l=ke(1),c=ke(s),u=ft(L(o,jn(te(i,c)))),h=L(ye(l,o),jn(te(ye(l,i),c))),d=ye(u,h);return Gr(d,a,r)}const j3=F({logLoss_:H3});function q3(n,e,t,s=gn.SUM_BY_NONZERO_WEIGHTS){const r=T(n,"labels","meanSquaredError"),o=T(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=T(t,"weights","meanSquaredError")),Qt(r.shape,o.shape,"Error in meanSquaredError: ");const a=Lf(r,o);return Gr(a,i,s)}const K3=F({meanSquaredError_:q3});function X3(n,e){const t=T(n,"labels","sigmoidCrossEntropyWithLogits"),s=T(e,"logits","sigmoidCrossEntropyWithLogits");Qt(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=js(s),o=L(s,t),i=Bu(Hn(ft(Et(s))));return te(ye(r,o),i)}function Y3(n,e,t,s=0,r=gn.SUM_BY_NONZERO_WEIGHTS){let o=T(n,"multiClassLabels","sigmoidCrossEntropy");const i=T(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=T(t,"weights","sigmoidCrossEntropy")),Qt(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=ke(s),u=ke(1),h=ke(.5);o=te(L(o,ye(u,c)),L(h,c))}const l=X3(o,i);return Gr(l,a,r)}const Z3=F({sigmoidCrossEntropy_:Y3});function J3(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return mr((r,o,i)=>{const l=If(o,[t],!0),c=ye(he(o,"float32"),l);i([r,c]);const u=ft(L(c,r));return{value:we(u,[t]),gradFunc:(p,f)=>{const[m,g]=f,y=Nt(p.shape,[t]);return[L(P(p,y),ye(he(m,"float32"),Hn(g))),L(P(p,y),ye(Hn(g),he(m,"float32")))]}}})(n,e)}function Q3(n,e,t,s=0,r=gn.SUM_BY_NONZERO_WEIGHTS){let o=T(n,"onehotLabels","softmaxCrossEntropy");const i=T(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=T(t,"weights","softmaxCrossEntropy")),Qt(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const c=ke(s),u=ke(1),h=ke(o.shape[1]);o=te(L(o,ye(u,c)),Ce(c,h))}const l=J3(o,i);return Gr(l,a,r)}const ez=F({softmaxCrossEntropy_:Q3});function tz(n,e,t,s){const r=T(n,"indices","sparseFillEmptyRows","int32"),o=T(e,"values","sparseFillEmptyRows"),i=T(t,"denseShape","sparseFillEmptyRows","int32"),a=T(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},c=D.runKernel(jp,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const nz=F({sparseFillEmptyRows_:tz});function sz(n,e,t){const s=T(n,"inputIndices","sparseReshape","int32"),r=T(e,"inputShape","sparseReshape","int32"),o=T(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=D.runKernel(qp,i);return{outputIndices:a[0],outputShape:a[1]}}const rz=F({sparseReshape_:sz});function oz(n,e,t){const s=T(n,"data","sparseSegmentMean"),r=T(e,"indices","sparseSegmentMean","int32"),o=T(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return D.runKernel(Kp,i)}const iz=F({sparseSegmentMean_:oz});function az(n,e,t){const s=T(n,"data","sparseSegmentSum"),r=T(e,"indices","sparseSegmentSum","int32"),o=T(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return D.runKernel(Xp,i)}const lz=F({sparseSegmentSum_:az});function cz(n,e,t,s,r,o,i,a){const l=T(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=T(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},h={data:l,dataSplits:c},d=D.runKernel(Qp,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const uz=F({stringNGrams_:cz});function hz(n,e,t=!0){const s=T(n,"input","stringSplit","string"),r=T(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=D.runKernel(ef,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const dz=F({stringSplit_:hz});function pz(n,e){const t=T(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return D.runKernel(tf,r,s)}const fz=F({stringToHashBucketFast_:pz});const mS={fft:Xu,ifft:la,rfft:Yu,irfft:Ff},gS={hammingWindow:jP,hannWindow:hS,frame:dS,stft:YP},ar={flipLeftRight:e3,grayscaleToRGB:n3,resizeNearestNeighbor:fS,resizeBilinear:pS,rotateWithOffset:r3,cropAndResize:JP,nonMaxSuppression:i3,nonMaxSuppressionAsync:f3,nonMaxSuppressionWithScore:g3,nonMaxSuppressionWithScoreAsync:b3,nonMaxSuppressionPadded:w3,nonMaxSuppressionPaddedAsync:$3,threshold:T3,transform:E3},$x={bandPart:A3,gramSchmidt:D3,qr:F3},yS={absoluteDifference:z3,computeWeightedLoss:Gr,cosineDistance:B3,hingeLoss:W3,huberLoss:G3,logLoss:j3,meanSquaredError:K3,sigmoidCrossEntropy:Z3,softmaxCrossEntropy:ez},bS={sparseFillEmptyRows:nz,sparseReshape:rz,sparseSegmentMean:iz,sparseSegmentSum:lz},xS={stringNGrams:uz,stringSplit:dz,stringToHashBucketFast:fz};class Hr extends Ni{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return De(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return vC(e,t)}dispose(){this.iterations_!=null&&De(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ke(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Hr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});class Kf extends Hr{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:U(()=>Ke(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:U(()=>Ke(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;U(()=>{const u=te(L(l,this.rho),L(ot(a),1-this.rho)),h=L(Ce(Jt(te(c,this.epsilon)),Jt(te(l,this.epsilon))),a),d=te(L(c,this.rho),L(ot(h),1-this.rho));l.assign(u),c.assign(d);const p=te(L(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(De(this.accumulatedGrads.map(e=>e.variable)),De(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Kf.className="Adadelta";Q(Kf);class Xf extends Hr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:U(()=>Ti(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;U(()=>{const l=te(a,ot(i));a.assign(l);const c=te(L(Ce(i,Jt(te(l,D.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&De(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Xf.className="Adagrad";Q(Xf);class Yf extends Hr{constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],U(()=>{this.accBeta1=ke(t).variable(),this.accBeta2=ke(s).variable()}),r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=ye(1,this.accBeta1),r=ye(1,this.accBeta2);t.forEach((o,i)=>{const a=D.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:U(()=>Ke(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:U(()=>Ke(a).variable(l))});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=te(L(u,this.beta1),L(c,1-this.beta1)),p=te(L(h,this.beta2),L(ot(c),1-this.beta2)),f=Ce(d,s),m=Ce(p,r);u.assign(d),h.assign(p);const g=te(L(Ce(f,te(Jt(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&De(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),U(()=>{this.accBeta1.assign(Or(this.beta1,this.iterations_+1)),this.accBeta2.assign(Or(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Yf.className="Adam";Q(Yf);class Zf extends Hr{constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],U(()=>{this.iteration=ke(0).variable(),this.accBeta1=ke(t).variable()}),r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);U(()=>{const s=ye(1,this.accBeta1),r=Ce(-this.learningRate,te(L(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=D.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Ke(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Ke(a).variable(l)});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=te(L(u,this.beta1),L(c,1-this.beta1)),p=L(h,this.beta2),f=Et(c),m=br(p,f);u.assign(d),h.assign(m);const g=te(L(Ce(r,s),Ce(d,te(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(te(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&De(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Zf.className="Adamax";Q(Zf);class Zu extends Hr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=D.registeredVariables[s];U(()=>{const a=te(L(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ot(ke(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Zu.className="SGD";Q(Zu);class Jf extends Zu{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=ke(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:U(()=>Ke(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&U(()=>{let l;const c=te(L(this.m,i),a);this.useNesterov?l=te(L(this.c,te(a,L(c,this.m))),o):l=te(L(this.c,c),o),i.assign(c),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&De(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Jf.className="Momentum";Q(Jf);class Qf extends Hr{constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:U(()=>Ke(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:U(()=>Ke(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:U(()=>Ke(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;U(()=>{const u=te(L(l,this.decay),L(ot(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=te(L(h,this.decay),L(a,1-this.decay)),p=Ce(L(a,this.learningRate),Jt(ye(u,te(ot(d),this.epsilon)))),f=te(L(c,this.momentum),p);l.assign(u),h.assign(d),c.assign(f);const m=ye(o,f);o.assign(m)}else{const h=te(L(l,this.decay),L(ot(a),1-this.decay)),d=te(L(c,this.momentum),Ce(L(a,this.learningRate),Jt(te(h,this.epsilon))));l.assign(h),c.assign(d);const p=ye(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&De(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&De(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&De(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Qf.className="RMSProp";Q(Qf);class Jr{static sgd(e){return new Zu(e)}static momentum(e,t,s=!1){return new Jf(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new Qf(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new Yf(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new Kf(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new Zf(e,t,s,r,o)}static adagrad(e,t=.1){return new Xf(e,t)}}const Vo={sgd:Jr.sgd,momentum:Jr.momentum,adadelta:Jr.adadelta,adagrad:Jr.adagrad,rmsprop:Jr.rmsprop,adamax:Jr.adamax,adam:Jr.adam};const mz=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function Ix(){return new Promise(n=>mz(()=>n()))}function Cx(n,e){const t=n[0].length;n.forEach((r,o)=>{N(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),N(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)N(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function hr(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}var Rs;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Rs||(Rs={}));function wS(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function vS(n){const e={FIRST_DIM_SIZE:Rs.FIRST_DIM_SIZE,VALUE_ROWIDS:Rs.VALUE_ROWIDS,ROW_LENGTHS:Rs.ROW_LENGTHS,ROW_SPLITS:Rs.ROW_SPLITS,ROW_LIMITS:Rs.ROW_LIMITS,ROW_STARTS:Rs.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function $S(n){return n.length===0?0:n[0]===Rs.FIRST_DIM_SIZE?n.length-1:n.length}function IS(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}const Sx=30;function em(n){return n<=Sx?n:ld(n,Math.floor(Math.sqrt(n)))}function Nx(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}function Ju(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function Qu(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function eh(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function Tx(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function kx(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}const tm=1.7580993408473768,nm=1.0507009873554805;const Ex=.3275911,_x=.254829592,Ax=-.284496736,Rx=1.421413741,Dx=-1.453152027,Ox=1.061405429;function Fr(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function CS(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function SS(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function NS(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Fx(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function TS(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function kS(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function ES(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}const qm="->",gz=/->/g,U1=",",G1="...";function Lx(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(gz,"").length)/qm.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${qm}").`);const[s,r]=n.split(qm);N(s.indexOf(G1)===-1,()=>`The ellipsis notation ("${G1}") is not supported yet.`);const o=s.split(U1),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==U1&&a.push(p)}const l=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(a.indexOf(o[d][p]))}const c=a.length,u=r.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function Px(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function zx(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:N(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function Mx(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],l=yz(e,a);for(const c of l)o.indexOf(c)===-1&&(s[i].push(c),o.push(c))}return{path:t,steps:s}}function Bx(n){return n.every((e,t)=>e===t)}function yz(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Vx(n,e,t=0){let s=[];if(typeof e=="number")N(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);N(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=n.shape[t]-i}N(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}function _S(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function AS(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function RS(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}function DS(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function OS(n,e){return`size ${n} must be non-negative, not ${e}`}function FS(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function LS(n,e){const t=K(n),s=K(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function PS(n,e){const t=K(n),s=K(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}function qg(){return"segment ids must be >= 0"}function zS(){return"segment ids are not increasing"}function MS(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function BS(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}function VS(n,e){let t=!1,s;for(n<=Sx?(s=n,t=!0):s=ld(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=ld(n,s+1);return s}function WS(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function Wx(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=t+1;h<o;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}const bz=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:VS,computeOutShape:WS,collectGatherOpShapeInfo:Wx},Symbol.toStringTag,{value:"Module"}));function mi(n){try{return n.map(e=>_r(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function US(n){return n.map(e=>cr(e))}const GS=Object.freeze(Object.defineProperty({__proto__:null,slice_util:lC,segment_util:bz,fromUint8ToStringArray:mi,fromStringArrayToUint8:US,upcastType:_n,axesAreInnerMostDims:Xb,combineLocations:bC,computeOutAndReduceShapes:Ht,expandShapeToKeepDim:Nt,assertAxesAreInnerMostDims:tn,getAxesPermutation:It,getUndoAxesPermutation:ko,getInnerMostAxes:Tt,getBroadcastDims:ui,getReductionAxes:Rt,assertAndGetBroadcastShape:Oe,assertParamsConsistent:Cx,computeOutShape:hr,computeDilation2DInfo:Fu,computePool2DInfo:Ss,computePool3DInfo:Br,computeConv2DInfo:Gt,computeConv3DInfo:To,computeDefaultPad:_b,tupleValuesAreOne:xo,eitherStridesOrDilationsAreOne:en,convertConv2DDataFormat:Vr,checkPadOnDimRoundingMode:wn,getFusedDyActivation:Vf,getFusedBiasGradient:Wf,applyActivation:Uf,shouldFuse:Gf,get RowPartitionType(){return Rs},combineRaggedTensorToTensorShapes:wS,getRowPartitionTypesHelper:vS,getRaggedRank:$S,validateDefaultValueShape:IS,PARALLELIZE_THRESHOLD:Sx,computeOptimalWindowSize:em,getImageCenter:Nx,getReshaped:Ju,getPermuted:Qu,getReshapedPermuted:eh,getSliceBeginCoords:Tx,getSliceSize:kx,prepareAndValidate:hf,validateUpdateShape:pb,validateInput:fb,calculateShapes:xl,SELU_SCALEALPHA:tm,SELU_SCALE:nm,ERF_P:Ex,ERF_A1:_x,ERF_A2:Ax,ERF_A3:Rx,ERF_A4:Dx,ERF_A5:Ox,warn:Qn,log:WA,mergeRealAndImagArrays:Fr,splitRealAndImagArrays:CS,complexWithEvenIndex:SS,complexWithOddIndex:NS,getComplexWithIndex:Fx,assignToTypedArray:TS,exponents:kS,exponent:ES,decodeEinsumEquation:Lx,getEinsumPermutation:Px,checkEinsumDimSizes:zx,getEinsumComputePath:Mx,isIdentityPermutation:Bx,prepareSplitSize:Vx,getSparseFillEmptyRowsIndicesDenseShapeMismatch:_S,getSparseFillEmptyRowsNegativeIndexErrorMessage:AS,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:RS,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:DS,getSparseReshapeNegativeOutputDimErrorMessage:OS,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:FS,getSparseReshapeInputOutputMultipleErrorMessage:LS,getSparseReshapeInputOutputMismatchErrorMessage:PS,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:qg,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:zS,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:MS,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:BS},Symbol.toStringTag,{value:"Module"}));const xz=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Hf,nonMaxSuppressionV4Impl:jf,nonMaxSuppressionV5Impl:qf,whereImpl:Mf},Symbol.toStringTag,{value:"Module"}));const HS={kernelName:Ac,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,_i(he(t,"float32"),-1))}}};const wz={kernelName:Ca,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ot(he(t,"float32")),r=Jt(ye(ke(1),s));return ft(Ce(n,r))}}}};const vz={kernelName:Sa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Jt(ye(ot(he(t,"float32")),1));return Ce(n,s)}}}};const $z={kernelName:Ci,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{let a=n;const l=Rt(t.shape,r);return l.length>0&&(a=we(a,l)),P(a,t.shape)},b:()=>{let a=n;const l=Rt(s.shape,r);return l.length>0&&(a=we(a,l)),P(a,s.shape)}}}};const Iz={kernelName:Rc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};const Cz={kernelName:Dc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(t)}}};const Sz={kernelName:Oc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(t)}}};const Nz={kernelName:Na,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,Jt(ye(ke(1),ot(he(t,"float32")))))}}};const Tz={kernelName:Ta,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Jt(te(ke(1),ot(he(t,"float32"))));return Ce(n,s)}}}};const kz={kernelName:_a,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{const a=te(ot(t),ot(s));let l=L(n,Ce(s,a));const c=Rt(t.shape,r);return c.length>0&&(l=we(l,c)),P(l,t.shape)},b:()=>{const a=te(ot(t),ot(s));let l=ft(L(n,Ce(t,a)));const c=Rt(s.shape,r);return c.length>0&&(l=we(l,c)),P(l,s.shape)}}}};const Ez={kernelName:ka,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,te(ot(he(t,"float32")),1))}}};const _z={kernelName:Ea,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,ye(ke(1),ot(he(t,"float32"))))}}};function Az(n,e,t,s,r,o){const i=T(n,"dy","avgPool3dGrad"),a=T(e,"input","avgPool3dGrad");let l=i,c=a,u=!1;a.rank===4&&(u=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=P(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),wn("avgPool3dGrad",r,o);const h={dy:l,input:c},d={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=D.runKernel(ip,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Rz=F({avgPool3dGrad_:Az});const Dz={kernelName:Lc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>Rz(n,s,r,o,i,a)}}};function Oz(n,e,t,s,r){const o=T(n,"dy","avgPoolGrad"),i=T(e,"input","avgPoolGrad");N(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,c=!1;i.rank===3&&(c=!0,a=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:t,strides:s,pad:r},d=D.runKernel(op,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Fz=F({avgPoolGrad_:Oz});const Lz={kernelName:Fc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>Fz(n,s,r,o,i)}}};const Pz={kernelName:Pc,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>Be(n,r,!1,!0),b:()=>Be(s,n,!0,!1)}:!o&&i?{a:()=>Be(n,r,!1,!1),b:()=>Be(n,s,!0,!1)}:o&&!i?{a:()=>Be(r,n,!1,!0),b:()=>Be(s,n,!1,!1)}:{a:()=>Be(r,n,!0,!0),b:()=>Be(n,s,!0,!0)}}};const zz={kernelName:zc,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>Gu(n,s,r)}}};const Mz={kernelName:xI,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>we(n,a,!0)}}};const Bz={kernelName:Aa,gradFunc:n=>({x:()=>n.clone()})};const Vz={kernelName:Ra,gradFunc:n=>({x:()=>Ke(n)})};const Wz={kernelName:Da,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>dn(Cs(Wr(s,r),Eo(s,o)),n,Ke(n))}}};const Uz={kernelName:Mc,inputsToSave:["x"],gradFunc:HS.gradFunc};const Gz={kernelName:Bc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,o=Ve(r,e[0].shape)[0],i=s.map(l=>l[o]);return En(n,i,o).map(l=>()=>l)}};const Hz={kernelName:Vc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=t;return N(xo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Vb(s.shape,n,r,i,a,l),filter:()=>wx(s,n,r.shape,i,a,l)}}};const jz={kernelName:Wc,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Dr(n,r,o,i,a,1,l),filter:()=>wx(n,s,r.shape,o,i,a,l)}}};function qz(n,e,t,s,r){let o=n;n.rank===4&&(o=P(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),N(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),N(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),N(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),N(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),N(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:t};return D.runKernel(hp,a,l)}const Kz=F({conv3DBackpropFilter_:qz});const Xz={kernelName:Uc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;N(xo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>mC(i.shape,n,a,r,o),filter:()=>Kz(i,n,a.shape,r,o)}}};const Yz={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(ft(Rf(he(t,"float32"))),n)}}};const Zz={kernelName:Fa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(Df(he(t,"float32")),n)}}};const Jz={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=It([r],s.rank);let l=bf(n,r,o,!i);return a!=null&&(l=Ge(l,a)),l}}}};const Qz={kernelName:Hc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];N(xo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),N(en(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),wn("depthwiseConv2d",o,i),{x:()=>cS(l.shape,n,c,r,o,a,i),filter:()=>lS(l,n,c.shape,r,o,a,i)}}};const eM={kernelName:jc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>D.runKernel(cd,o,t),filter:()=>D.runKernel(ud,i,t)}}};const tM={kernelName:Pa,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>D.runKernel(vp,s)}}};const nM={kernelName:za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=L(Hn(ft(ot(t))),2/Math.sqrt(Math.PI));return{x:()=>L(n,s)}}};const sM={kernelName:Ma,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,t)}}};const rM={kernelName:Kc,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>P(n,t.shape)}}};const oM={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,Hn(t))}}};const iM={kernelName:Va,gradFunc:n=>({x:()=>Ke(n)})};const aM={kernelName:Wa,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{const a=Ce(n,he(s,"float32")),l=Rt(t.shape,r);return l.length>0?P(we(a,l),t.shape):a},b:()=>{let a=L(n,he(t,"float32"));const l=Rt(s.shape,r);l.length>0&&(a=P(we(a,l),s.shape));const c=ot(s);return ft(Ce(a,he(c,"float32")))}}}};const lM={kernelName:Xc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,l=a??ke(1),c=Rt(o.shape,r.shape),u=[];if(o.rank===1){for(let x=0;x<r.shape.length-1;++x)u.push(r.shape[x]);u.push(1)}const h=ye(r,o),d=L(n,l),p=Ef(te(i,ke(s))),f=L(L(L(p,p),p),ke(-.5));return{x:()=>o.rank===1?P(L(L(n,ts(P(p,[1,1,1,o.shape[0]]),u)),l),r.shape):P(L(L(n,p),l),r.shape),mean:()=>{let x=L(L(p,ke(-1)),d);return o.rank===1&&(x=we(x,c)),P(x,o.shape)},variance:()=>{let x=L(L(f,h),d);return o.rank===1&&(x=we(x,c)),P(x,o.shape)},scale:()=>{const x=L(h,p);let $=L(n,x);return o.rank===1&&($=we($,c)),P($,o.shape)},offset:()=>{let x=n;return o.rank===1&&(x=we(x,c)),P(x,o.shape)}}}};const cM={kernelName:Yc,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o}=t,i=Ve(o,s.shape)[0];return{x:()=>{const l=s.shape,c=r.size,u=l.slice(0,i),h=u.length,d=l.slice(o,l.length).slice(1),p=d.length,f=H1(0,h),m=H1(h+1,h+1+p),g=j1([u,[c],d]),y=P(n,g),b=P(r,[c]),w=j1([[h],f,m]),x=Ge(y,w);let $=zf(x,b,s.shape[i]);const S=ko(w);return $=Ge($,S),$},indices:()=>r}}};function H1(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function j1(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}const uM={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Ke(t),b:()=>Ke(s)}}};const hM={kernelName:Ga,gradFunc:n=>({x:()=>he(n,"float32")})};const dM={kernelName:Ha,gradFunc:n=>({x:()=>Ke(n)})};const pM={kernelName:ja,gradFunc:n=>({x:()=>Ke(n)})};const fM={kernelName:qa,gradFunc:n=>({x:()=>Ke(n)})};const mM={kernelName:Jc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=vn(s,0);return{x:()=>dn(o,n,L(n,r))}}};const gM={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,te(t,1))}}};const yM={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,he(t,"float32"))}}};const bM={kernelName:wI,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=Hn(s);return ye(n,L(we(n,r,!0),i))}}}};function xM(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:o,beta:i};return D.runKernel(Ep,a,l)}const wM=F({localResponseNormalizationBackprop_:xM});const vM={kernelName:ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=t;return{x:()=>wM(s,r,n,o,i,a,l)}}};function jS(n,e,t,s){return e.rank<t.rank&&(e=P(e,Nt(e.shape,s))),n.rank<t.rank&&(n=P(n,Nt(n.shape,s))),{x:()=>L(n,he(Gn(t,e),n.dtype))}}const q1={kernelName:ou,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=Ve(r,o.shape),l=jS(n,i,o,a);return{x:()=>l.x()}}};const $M={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>L(n,he(Wr(t,s),"float32")),b:()=>L(n,he(wf(t,s),"float32"))}}};function IM(n,e,t,s,r,o,i){const a=T(n,"dy","maxPool3dGrad"),l=T(e,"input","maxPool3dGrad"),c=T(t,"output","maxPool3dGrad");let u=a,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=P(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=P(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),N(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),N(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),wn("maxPool3dGrad",o,i);const f={dy:u,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:i},g=D.runKernel(Ap,f,m);return p?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const CM=F({maxPool3dGrad_:IM});const SM={kernelName:au,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>CM(n,s,r,o,i,a,l)}}};function NM(n,e,t,s,r,o,i){const a=T(n,"dy","maxPoolGrad"),l=T(e,"input","maxPoolGrad"),c=T(t,"output","maxPoolGrad");N(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),N(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),wn("maxPoolGrad",o,i);const u={dy:a,input:l,output:c},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return D.runKernel(_p,u,h)}const TM=F({maxPoolGrad_:NM});const kM={kernelName:iu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>TM(n,s,r,o,i,a)}}};const EM={kernelName:lu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=Ve(r,s.shape),a=Ht(s.shape,o)[1],l=K(a);return{x:()=>{const u=s.shape.slice();o.forEach(p=>{u[p]=1});const h=P(n,u);return Ce(L(h,Wn(s.shape,"float32")),l)}}}};const _M={kernelName:cu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=Ve(r,o.shape),l=jS(n,i,o,a);return{x:()=>l.x()}}};const AM={kernelName:Za,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>L(n,he(Eo(t,s),"float32")),b:()=>L(n,he(vn(t,s),"float32"))}}};const RM={kernelName:uu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>qe(n,o,s.shape)}}};const DM={kernelName:Ja,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{const a=Rt(t.shape,r);return a.length>0?P(we(n,a),t.shape):n},b:()=>{const a=L(n,ft(Cl(Ce(t,s)))),l=Rt(s.shape,r);return l.length>0?P(we(a,l),s.shape):a}}}};const OM={kernelName:Qa,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{const a=L(n,he(s,"float32")),l=Rt(t.shape,r);return l.length>0?P(we(a,l),t.shape):a},b:()=>{const a=L(n,he(t,"float32")),l=Rt(s.shape,r);return l.length>0?P(we(a,l),s.shape):a}}}};const FM={kernelName:hu,gradFunc:n=>({x:()=>ft(n)})};const LM={kernelName:fu,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>_t(t.shape,"float32")}}};const PM={kernelName:pu,gradFunc:n=>({x:()=>Ke(n)})};const zM={kernelName:mu,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return ls(n,s).map(o=>()=>o)}};const K1={kernelName:gu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>qe(n,o,s.shape)}}};const MM={kernelName:el,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Oe(o.shape,i.shape);return{a:()=>{const u=he(i,"float32");let h=L(n,L(u,Or(o,ye(u,ke(1)))));const d=Rt(o.shape,a);return d.length>0&&(h=we(h,d)),P(h,o.shape)},b:()=>{const u=vn(o,0),h=dn(u,jn(o),Ke(o));let d=L(n,L(r,h));const p=Rt(i.shape,a);return p.length>0&&(d=we(d,p)),P(d,i.shape)}}}};const BM={kernelName:yu,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=vn(t,0);return{x:()=>dn(r,n,L(n,s)),alpha:()=>{let o=dn(r,Ke(n),L(n,t));const i=Rt(s.shape,n.shape);return i.length>0&&(o=we(o,i)),P(o,s.shape)}}}};function VM(n,e,t){const s=n.shape.slice();s[t]=1;const r=P(e,s),o=$c(n,t,!0,!1),i=$c(n,t,!0,!0),a=L(o,i);return L(r,a)}function WM(n,e,t){const s=n.shape.length,r=s-t.length,o=It(t,s);let i=n;o!=null&&(i=Ge(n,o));const a=i.shape.slice(),c=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(c);const u=i.reshape(a);let h=VM(u,e,r);if(h=h.reshape(i.shape),o!=null){const d=ko(o);h=Ge(h,d)}return h}const UM={kernelName:bu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>WM(s,n,o)}}};const GM={kernelName:La,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{const a=Ce(n,he(s,"float32")),l=Rt(t.shape,r);return l.length>0?P(we(a,l),t.shape):a},b:()=>{let a=L(n,he(t,"float32"));const l=Rt(s.shape,r);l.length>0&&(a=P(we(a,l),s.shape));const c=ot(s);return ft(Ce(a,he(c,"float32")))}}}};const HM={kernelName:tl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,ft(ot(t)))}}};const jM={kernelName:sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=L(Eo(t,6),_i(t));return{x:()=>L(n,he(s,"float32"))}}};const qM={kernelName:nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,he(_i(t),"float32"))}}};const KM={kernelName:xu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>P(n,t.shape)}}};const XM={kernelName:vu,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>D.runKernel(Up,r,t)}}};const YM={kernelName:wu,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>D.runKernel(Wp,r,t)}}};const ZM={kernelName:$u,gradFunc:(n,e,t)=>{const{dims:s}=t,r=Ve(s,n.shape);return{x:()=>as(n,r)}}};const JM={kernelName:rl,gradFunc:n=>({x:()=>Ke(n)})};const QM={kernelName:ol,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ft(Ce(n,L(Or(t,1.5),2)))}}};const eB={kernelName:Iu,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>he(Ke(t),"float32"),t:()=>L(n,he(t,n.dtype)),e:()=>L(n,he(Vu(t),n.dtype))}}};const tB={kernelName:il,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=vn(t,ke(0)),r=ke(tm),o=ke(nm),i=L(n,o),a=L(L(n,r),Hn(he(t,"float32")));return dn(s,i,a)}}}};const nB={kernelName:ul,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,L(t,ye(ke(1),t)))}}};const sB={kernelName:cl,gradFunc:n=>({x:()=>Ke(n)})};const rB={kernelName:al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(zu(he(t,"float32")),n)}}};const oB={kernelName:ll,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(yf(he(t,"float32")),n)}}};const iB={kernelName:Cu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,l]=df(s,r,o),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],i[u]-a[u]-l[u]]);return{x:()=>Ur(n,c)}}};const aB={kernelName:ku,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=L(n,s);return{logits:()=>ye(i,L(we(i,[r],o),s))}}};const lB={kernelName:hl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,Ms(t))}}};const X1={kernelName:Nu,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>Pu(n,s,r)}}};const Y1={kernelName:Tu,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>St(n,s)}}};const cB={kernelName:dl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,L(Jt(he(t,"float32")),2))}}};const uB={kernelName:Zp,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,L(he(t,"float32"),2))}}};const hB={kernelName:pl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=ke(2);return{a:()=>L(n,L(r,ye(t,s))),b:()=>L(n,L(r,ye(s,t)))}}};const dB={kernelName:bl,gradFunc:n=>({x:()=>Ke(n)})};const pB={kernelName:fl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Oe(t.shape,s.shape);return{a:()=>{let a=n;const l=Rt(t.shape,r);return l.length>0&&(a=we(a,l)),P(a,t.shape)},b:()=>{let a=n;const l=Rt(s.shape,r);return l.length>0&&(a=we(a,l)),P(ft(a),s.shape)}}}};const fB={kernelName:Su,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;Ve(o,s.shape).forEach(c=>{r[c]=1});const a=P(n,r),l=L(a,Wn(s.shape,"float32"));return{x:()=>l}}};const mB={kernelName:ml,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ce(n,ot(zu(t)))}}};const gB={kernelName:gl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(ye(ke(1),ot(t)),n)}}};const yB={kernelName:yl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=Ke(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=te(i,qe(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=te(i,qe(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)i=te(i,qe(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)i=te(i,qe(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};const bB={kernelName:ei,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=ko(r);return{x:()=>Ge(n,o)}}};const xB={kernelName:Eu,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Rn(n,r)}}};const wB={kernelName:_u,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vB(n,t)}}};function vB(n,e){const t=br(e,Ke(e)),s=Sl(n,t);let r=Wr(e,ke(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=on(r,a+1);r=Cs(r,Wn(s.shape,"bool"));const i=Ke(s);return dn(r,s,i)}const $B={kernelName:Au,gradFunc:n=>({x:()=>Ke(n)})};const IB=[HS,wz,vz,$z,Iz,Cz,Sz,Nz,Tz,kz,Ez,_z,Dz,Lz,Pz,zz,Mz,Bz,Vz,Wz,Uz,Gz,jz,Hz,Xz,Yz,Zz,Jz,Qz,eM,GM,tM,nM,sM,rM,oM,aM,iM,lM,cM,uM,hM,dM,pM,fM,mM,gM,yM,bM,vM,q1,q1,$M,SM,kM,EM,_M,AM,RM,DM,OM,FM,LM,PM,zM,K1,K1,MM,BM,UM,HM,jM,qM,KM,XM,YM,ZM,JM,QM,eB,tB,nB,sB,rB,oB,iB,aB,lB,X1,X1,Y1,Y1,cB,hB,uB,dB,pB,fB,mB,gB,yB,bB,xB,wB,$B];for(const n of IB)vI(n);X().prototype.abs=function(){return this.throwIfDisposed(),Et(this)};X().prototype.acos=function(){return this.throwIfDisposed(),$b(this)};X().prototype.acosh=function(){return this.throwIfDisposed(),Ib(this)};X().prototype.add=function(n){return this.throwIfDisposed(),te(this,n)};X().prototype.all=function(n,e){return this.throwIfDisposed(),ff(this,n,e)};X().prototype.any=function(n,e){return this.throwIfDisposed(),vc(this,n,e)};X().prototype.argMax=function(n){return this.throwIfDisposed(),hi(this,n)};X().prototype.argMin=function(n){return this.throwIfDisposed(),Cb(this,n)};X().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),P(this,[])};X().prototype.asType=function(n){return this.throwIfDisposed(),he(this,n)};X().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};X().prototype.as2D=function(n,e){return this.throwIfDisposed(),P(this,[n,e])};X().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),P(this,[n,e,t])};X().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),P(this,[n,e,t,s])};X().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),P(this,[n,e,t,s,r])};X().prototype.asin=function(){return this.throwIfDisposed(),Sb(this)};X().prototype.asinh=function(){return this.throwIfDisposed(),Nb(this)};X().prototype.atan=function(){return this.throwIfDisposed(),Tb(this)};X().prototype.atan2=function(n){return this.throwIfDisposed(),kb(this,n)};X().prototype.atanh=function(){return this.throwIfDisposed(),Eb(this)};X().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Lu(this,n,e,t,s)};X().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Pu(this,n,e)};X().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),wl(this,n,e,t,s,r)};X().prototype.broadcastTo=function(n){return this.throwIfDisposed(),ni(this,n)};X().prototype.cast=function(n){return this.throwIfDisposed(),he(this,n)};X().prototype.ceil=function(){return this.throwIfDisposed(),Lb(this)};X().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),An(this,n,e)};X().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Ye&&(n=[n]),St([this,...n],e)};X().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),mf(this,n,e,t,s,r,o)};X().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),gf(this,n,e,t,s,r)};X().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Dr(this,n,e,t,s,r,o)};X().prototype.cos=function(){return this.throwIfDisposed(),zu(this)};X().prototype.cosh=function(){return this.throwIfDisposed(),yf(this)};X().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),$c(this,n,e,t)};X().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),bf(this,n,e,t)};X().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Gb(this,n,e)};X().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),vl(this,n,e,t,s,r,o)};X().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),Hb(this,n,e,t,s,r)};X().prototype.divNoNan=function(n){return this.throwIfDisposed(),jb(this,n)};X().prototype.div=function(n){return this.throwIfDisposed(),Ce(this,n)};X().prototype.dot=function(n){return this.throwIfDisposed(),qb(this,n)};X().prototype.elu=function(){return this.throwIfDisposed(),$l(this)};X().prototype.equal=function(n){return this.throwIfDisposed(),Gn(this,n)};X().prototype.erf=function(){return this.throwIfDisposed(),Kb(this)};X().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),Yb(this,n,e)};X().prototype.exp=function(){return this.throwIfDisposed(),Hn(this)};X().prototype.expandDims=function(n){return this.throwIfDisposed(),on(this,n)};X().prototype.expm1=function(){return this.throwIfDisposed(),Zb(this)};X().prototype.fft=function(){return this.throwIfDisposed(),Xu(this)};X().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};X().prototype.floor=function(){return this.throwIfDisposed(),Cl(this)};X().prototype.floorDiv=function(n){return this.throwIfDisposed(),pf(this,n)};X().prototype.gather=function(n,e){return this.throwIfDisposed(),Sl(this,n,e)};X().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Wr(this,n)};X().prototype.greater=function(n){return this.throwIfDisposed(),vn(this,n)};X().prototype.ifft=function(){return this.throwIfDisposed(),la(this)};X().prototype.irfft=function(){return this.throwIfDisposed(),Ff(this)};X().prototype.isFinite=function(){return this.throwIfDisposed(),Jb(this)};X().prototype.isInf=function(){return this.throwIfDisposed(),Qb(this)};X().prototype.isNaN=function(){return this.throwIfDisposed(),ex(this)};X().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Mu(this,n)};X().prototype.lessEqual=function(n){return this.throwIfDisposed(),Eo(this,n)};X().prototype.less=function(n){return this.throwIfDisposed(),wf(this,n)};X().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),tx(this,n,e,t,s)};X().prototype.logSigmoid=function(){return this.throwIfDisposed(),nx(this)};X().prototype.logSoftmax=function(n){return this.throwIfDisposed(),$f(this,n)};X().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),If(this,n,e)};X().prototype.log=function(){return this.throwIfDisposed(),jn(this)};X().prototype.log1p=function(){return this.throwIfDisposed(),Bu(this)};X().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Cs(this,n)};X().prototype.logicalNot=function(){return this.throwIfDisposed(),Vu(this)};X().prototype.logicalOr=function(n){return this.throwIfDisposed(),Cf(this,n)};X().prototype.logicalXor=function(n){return this.throwIfDisposed(),sx(this,n)};X().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Be(this,n,e,t)};X().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Wu(this,n,e,t,s)};X().prototype.max=function(n,e){return this.throwIfDisposed(),rs(this,n,e)};X().prototype.maximum=function(n){return this.throwIfDisposed(),br(this,n)};X().prototype.mean=function(n,e){return this.throwIfDisposed(),xt(this,n,e)};X().prototype.min=function(n,e){return this.throwIfDisposed(),ia(this,n,e)};X().prototype.minimum=function(n){return this.throwIfDisposed(),Nl(this,n)};X().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),ox(this,n,e)};X().prototype.mod=function(n){return this.throwIfDisposed(),ix(this,n)};X().prototype.mul=function(n){return this.throwIfDisposed(),L(this,n)};X().prototype.neg=function(){return this.throwIfDisposed(),ft(this)};X().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Il(this,n,e,t)};X().prototype.notEqual=function(n){return this.throwIfDisposed(),pi(this,n)};X().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),ra(this,n,e,t)};X().prototype.onesLike=function(){return this.throwIfDisposed(),qn(this)};X().prototype.pad=function(n,e){return this.throwIfDisposed(),Ur(this,n,e)};X().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),ax(this,n,e,t,s,r,o)};X().prototype.pow=function(n){return this.throwIfDisposed(),Or(this,n)};X().prototype.prelu=function(n){return this.throwIfDisposed(),Hu(this,n)};X().prototype.prod=function(n,e){return this.throwIfDisposed(),lx(this,n,e)};X().prototype.reciprocal=function(){return this.throwIfDisposed(),ux(this)};X().prototype.relu=function(){return this.throwIfDisposed(),js(this)};X().prototype.relu6=function(){return this.throwIfDisposed(),Tf(this)};X().prototype.reshapeAs=function(n){return this.throwIfDisposed(),P(this,n.shape)};X().prototype.reshape=function(n){return this.throwIfDisposed(),P(this,n)};X().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),pS(this,n,e,t)};X().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),fS(this,n,e,t)};X().prototype.reverse=function(n){return this.throwIfDisposed(),as(this,n)};X().prototype.rfft=function(){return this.throwIfDisposed(),Yu(this)};X().prototype.round=function(){return this.throwIfDisposed(),kf(this)};X().prototype.rsqrt=function(){return this.throwIfDisposed(),Ef(this)};X().prototype.selu=function(){return this.throwIfDisposed(),_f(this)};X().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Af(this,n,e,t,s,r,o)};X().prototype.sigmoid=function(){return this.throwIfDisposed(),Ms(this)};X().prototype.sign=function(){return this.throwIfDisposed(),hx(this)};X().prototype.sin=function(){return this.throwIfDisposed(),Rf(this)};X().prototype.sinh=function(){return this.throwIfDisposed(),Df(this)};X().prototype.slice=function(n,e){return this.throwIfDisposed(),qe(this,n,e)};X().prototype.softmax=function(n){return this.throwIfDisposed(),Ku(this,n)};X().prototype.softplus=function(){return this.throwIfDisposed(),ki(this)};X().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Gu(this,n,e)};X().prototype.split=function(n,e){return this.throwIfDisposed(),En(this,n,e)};X().prototype.sqrt=function(){return this.throwIfDisposed(),Jt(this)};X().prototype.square=function(){return this.throwIfDisposed(),ot(this)};X().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Lf(this,n)};X().prototype.squeeze=function(n){return this.throwIfDisposed(),_o(this,n)};X().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Ye?[this,n]:[this,...n];return Rn(t,e)};X().prototype.step=function(n){return this.throwIfDisposed(),_i(this,n)};X().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),dx(this,n,e,t,s,r,o,i,a)};X().prototype.sub=function(n){return this.throwIfDisposed(),ye(this,n)};X().prototype.sum=function(n,e){return this.throwIfDisposed(),we(this,n,e)};X().prototype.tan=function(){return this.throwIfDisposed(),px(this)};X().prototype.tanh=function(){return this.throwIfDisposed(),di(this)};X().prototype.tile=function(n){return this.throwIfDisposed(),ts(this,n)};X().prototype.toBool=function(){return this.throwIfDisposed(),he(this,"bool")};X().prototype.toFloat=function(){return this.throwIfDisposed(),he(this,"float32")};X().prototype.toInt=function(){return this.throwIfDisposed(),he(this,"int32")};X().prototype.topk=function(n,e){return this.throwIfDisposed(),fx(this,n,e)};X().prototype.transpose=function(n){return this.throwIfDisposed(),Ge(this,n)};X().prototype.unique=function(n){return this.throwIfDisposed(),mx(this,n)};X().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),zf(this,n,e)};X().prototype.unstack=function(n){return this.throwIfDisposed(),ls(this,n)};X().prototype.where=function(n,e){return this.throwIfDisposed(),dn(n,this,e)};X().prototype.zerosLike=function(){return this.throwIfDisposed(),Ke(this)};class nr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nr.prototype)}}class ws extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ws.prototype)}}class V extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V.prototype)}}class Le extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Le.prototype)}}class Ux extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ux.prototype)}}class qS{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}function gi(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function sr(n,e){if(!n)throw new Ux(e)}function Z1(n,e){let t=0;for(const s of n)s===e&&t++;return t}function Tn(n){return n.length===1?n[0]:n}function ht(n){return Array.isArray(n)?n:[n]}function $r(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function jo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let hs={};function Gx(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Kg(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Kg(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Kg(s))}}}function th(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in hs)i=hs[o];else if(i=e[o],i==null)throw new V(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new V(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in t?[a,l]=t[i]:i in hs?[a,l]=hs.className:i in e&&([a,l]=e[i]),a==null)throw new V(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(hs))c[p]=hs[p];for(const p of Object.keys(t))c[p]=t[p];const u=o.config;u.customObjects=c;const h=Object.assign({},hs);for(const p of Object.keys(t))hs[p]=t[p];Kg(o.config);const d=l(a,o.config,t,r);return hs=Object.assign({},h),d}else{const c=Object.assign({},hs);for(const h of Object.keys(t))hs[h]=t[h];const u=new a(o.config);return hs=Object.assign({},c),u}}}function CB(n,e){return n<e?-1:n>e?1:0}function _h(n,e){return-1*CB(n,e)}function ho(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function SB(n){if(n==null)throw new V(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Ai(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new V(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Hx(n,e,t=0,s=1/0){return sr(t>=0),sr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function Vt(n,e){Array.isArray(n)?(N(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Vt(t,`element ${s+1} of ${e}`))):N(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${KS(n)}.`)}function KS(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>KS(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function NB(n,e,t){let s=t!=null?t():qt(),r;return(...i)=>{const a=t!=null?t():qt();return a-s<e||(s=a,r=n(...i)),r}}function XS(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}let TB=0;function YS(){return TB++}const Ah={};function sm(n=""){return n in Ah||(Ah[n]=0),Ah[n]+=1,n+Ah[n].toString()}const kB=["channelsFirst","channelsLast"],EB=["nearest","bilinear"],_B=["valid","same","causal"],AB=["max","avg"],RB=["sum","mul","concat","ave"];const zi=new Map;function kt(n){Ai(kB,"DataFormat",n)}function DB(n){Ai(EB,"InterpolationFormat",n)}function cs(n){Ai(_B,"PaddingMode",n)}function ZS(n){Ai(AB,"PoolMode",n)}const ac=[],J1="/";function si(n,e){ac.push(n);try{const t=e();return ac.pop(),t}catch(t){throw ac.pop(),t}}function OB(){return ac.length===0?"":ac.join(J1)+J1}function JS(n){if(!eN(n))throw new Error("Not a valid tensor name: '"+n+"'");return OB()+n}function QS(n){if(!eN(n))throw new Error("Not a valid tensor name: '"+n+"'");zi.has(n)||zi.set(n,0);const e=zi.get(n);if(zi.set(n,zi.get(n)+1),e>0){const t=`${n}_${e}`;return zi.set(t,1),t}else return n}const FB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function eN(n){return!!n.match(FB)}function LB(n){return n===parseInt(n.toString(),10)}function po(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function ca(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function wo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ws(n,e){if(e<n)throw new V(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}let Km;function Ft(){return Km==null&&(Km=ZI().epsilon()),Km}function Us(){return"channelsLast"}function dr(n,e){return he(n,e)}function nh(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),P(n,t)}function PB(n,e){return U(()=>{if(n.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=nh(n,1);return Xg(t,[1,e,1])})}function zB(n){const e=[po(n.shape)];return P(n,e)}function MB(n){if(n.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],po(n.shape,1)];return P(n,e)}function ri(n,e,t){return U(()=>{switch(n.rank){case 1:return ju(n,e,t);case 2:return Of(n,[e,0],[t,n.shape[1]]);case 3:return qu(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return aa(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return qe(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return qe(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Xm(n,e,t){return U(()=>{switch(n.rank){case 1:return ju(n,e,t);case 2:return Of(n,[0,e],[n.shape[0],t]);case 3:return qu(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return aa(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Rh(n,e,t,s){return U(()=>{switch(n.rank){case 1:return ju(n,e,t);case 2:switch(s){case 1:return ri(n,e,t);case 2:return Xm(n,e,t);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ri(n,e,t);case 2:return qu(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Xm(n,e,t);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ri(n,e,t);case 2:return aa(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return aa(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Xm(n,e,t);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function jx(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),St(n,e)}function Q1(n,e){switch(n.rank){case 1:return Pb([n,e]);case 2:return zb([n,e],0);case 3:return Mb([n,e],0);case 4:return Bb([n,e],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Xg(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new V(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return ts(n,e)}function rm(n,e=0,t=1,s,r){return Nf(n,e,t,s,r)}function pr(n,e,t,s){if(n.rank<2||e.rank<2)throw new Le(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new Le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return jg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Yg(n.rank,s,Us()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=P(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],u=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=P(Ge(e,u),[l,-1]);const h=[...r,...c];return P(jg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Yg(n.rank,s,Us()):null,activation:t}),h)}}function tN(n,e,t){return U(()=>(Array.isArray(e)?e=cn(e,"int32"):e=he(e,"int32"),Sl(n,e,t)))}function sh(n){return L(n,n)}function Yg(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new V(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?P(e,[1,s[0],1,1,1]):P(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?P(e,[1,1,1,1,s[0]]):P(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?P(e,[1,s[0],1,1]):P(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?P(e,[1,1,1,s[0]]):P(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?P(e,[1,s[0],1]):P(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?P(e,[1,1,s[0]]):P(e,[1].concat(s))}else if(n<3)return e;throw new V(`Unsupported input rank by biasAdd: ${e.rank}`)}function qs(n,e,t){return U(()=>(t==null&&(t=Us()),kt(t),te(n,Yg(n.rank,e,t))))}function BB(n,e=1){if(e!==1)throw new Le(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return $l(n)}function VB(n){return U(()=>Ce(n,te(Et(n),1)))}function nN(n,e,t,s){return U(()=>bx(n,e,t,s))}function WB(n){return U(()=>{const e=te(.5,L(.2,n));return An(e,0,1)})}function rh(n,e,t=!1){return t?n():e()}const UB=["fanIn","fanOut","fanAvg"],GB=["normal","uniform","truncatedNormal"];function HB(n){Ai(UB,"FanMode",n)}function jB(n){Ai(GB,"Distribution",n)}class Ns extends Ni{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qx extends Ns{apply(e,t){return _t(e,t)}}qx.className="Zeros";Q(qx);class om extends Ns{apply(e,t){return Wn(e,t)}}om.className="Ones";Q(om);class Kx extends Ns{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return U(()=>L(ke(this.value),Wn(e,t)))}getConfig(){return{value:this.value}}}Kx.className="Constant";Q(Kx);class Xx extends Ns{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return kl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Xx.className="RandomUniform";Q(Xx);class Yx extends Ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`randomNormal does not support dType ${t}.`);return rm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Yx.className="RandomNormal";Q(Yx);class Zx extends Ns{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`truncatedNormal does not support dType ${t}.`);return Pf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zx.className="TruncatedNormal";Q(Zx);class Jx extends Ns{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return U(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,xf(e[0]))})}getConfig(){return{gain:this.gain}}}Jx.className="Identity";Q(Jx);function qB(n,e="channelsLast"){let t,s;if(kt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=po(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=po(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=po(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Dn extends Ns{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,HB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,jB(this.distribution),this.seed=e.seed}apply(e,t){const s=qB(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`${this.getClassName()} does not support dType ${t}.`);return Pf(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return kl(e,-a,a,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Dn.className="VarianceScaling";Q(Dn);class im extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}im.className="GlorotUniform";Q(im);class am extends Dn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}am.className="GlorotNormal";Q(am);class lm extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}lm.className="HeNormal";Q(lm);class cm extends Dn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}cm.className="HeUniform";Q(cm);class um extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}um.className="LeCunNormal";Q(um);class hm extends Dn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Dn.className}}hm.className="LeCunNormal";Q(hm);class Qx extends Ns{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Le("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return U(()=>{if(e.length<2)throw new Le("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=rm(s,0,1,"float32");let o=$x.gramSchmidt(r);return e[0]>e[1]&&(o=Ge(o)),L(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Qx.className="Orthogonal";Q(Qx);const ev={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function tv(n,e={}){return th(n,es.getMap().classNameMap,e,"initializer")}function wt(n){return Gx(n)}function mt(n){if(typeof n=="string"){const e=n in ev?ev[n]:n;if(e==="GlorotNormal")return new am;if(e==="GlorotUniform")return new im;if(e==="HeNormal")return new lm;if(e==="HeUniform")return new cm;if(e==="LeCunNormal")return new um;if(e==="LeCunUniform")return new hm;{const t={};return t.className=e,t.config={},tv(t)}}else return n instanceof Ns?n:tv(n)}function Zg(n){return Array.isArray(n)&&Array.isArray(n[0])}function wd(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ae(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new V(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function tt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new V(`Expected exactly 1 Shape; got ${n.length}`)}else return n}function vd(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}const nv="Variable";class sN{constructor(e,t="float32",s=nv,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=YS(),s=s??nv,this.originalName=JS(s),this.name=QS(this.originalName),this.trainable_=r,this.constraint=o,this.val=gx(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),KB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function KB(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Jg(n){return n.map(e=>e.read())}function e0(n){n.forEach(e=>{e[0].write(e[1])})}class At{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Fs{constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=YS(),i!=null&&(this.originalName=JS(i),this.name=QS(this.originalName)),this.rank=t.length}}let XB=0;class dm{constructor(e,t){this.callArgs=t,this.id=XB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let YB=0;class We extends Ni{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=YB++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=$r(s)+"_"+sm(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ws(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new nr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new nr(`Layer ${this.name} is not connected, no input to return.`);return Tn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new nr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new nr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ht(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=ht(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=t[s];if(o==null)continue;const i=r.rank;if(o.ndim!=null&&i!==o.ndim)throw new V(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${i}`);if(o.maxNDim!=null&&i>o.maxNDim)throw new V(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${i}`);if(o.minNDim!=null&&i<o.minNDim)throw new V(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${i}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new V(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const a=r.shape;for(const l in o.axes){const c=Number(l),u=o.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new V(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(o.shape!=null)for(let a=0;a<o.shape.length;++a){const l=o.shape[a],c=r.shape[a];if(l!=null&&c!=null&&l!==c)throw new V(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=ht(e);let r=!0;for(const i of s)if(!(i instanceof Fs)){r=!1;break}let o=!0;for(const i of s)if(i instanceof Fs){o=!1;break}if(r===o)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return si(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of ht(e))i.push(a.shape);this.build(Tn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);const a=ht(i),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=Tn(l),this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=ZB(e),a=this.computeOutputShape(i);let l;const c=JB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Fs(c,u,this,ht(e),t,this.name,h)):l=new Fs(c,a,this,ht(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new nr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new nr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ws(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return vd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Jg(e?this.trainableWeights:this.weights)}setWeights(e){U(()=>{const t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Jg(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],l=e[o];if(!He(i.shape,l.shape))throw new V(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}e0(s)})}addWeight(e,t,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():mt("zeros"));const c=r.apply(t,s),u=new sN(c,s,e,i,a);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ht(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,r,o,i,a=null){const l=ht(e);t=ht(t),s=ht(s),r=ht(r),o=wd(o),i=wd(i);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new dm({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ZB(n){n=ht(n);const e=[];for(const t of n)e.push(t.shape);return Tn(e)}function JB(n){return"float32"}function rN(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],c=rN(i,a,l);for(const u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}class _l extends We{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:sm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Fs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}_l.className="InputLayer";Q(_l);function oN(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new _l({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}function QB(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return he(e,n.dtype)}catch{throw new V(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class ro{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ro)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=QB(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Fs){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Fs){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&De(this.id2Mask)}}const $d=new qS,Id=new qS;function eV(n){$d!=null&&$d.setMaxEntries(n),Id!=null&&Id.setMaxEntries(n)}function Ql(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(f=>f.name),l=[],c=e.names();for(const f of a)c.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=a.join(",")+"|"+e.names().sort().join(",");let h=$d.get(u),d;if(h==null){const f=tV(i,e);h=f.sorted,d=f.recipientCounts,$d.put(u,h),Id.put(u,d)}d={},r||Object.assign(d,Id.get(u));const p=new ro(e);for(let f=0;f<h.length;++f){if(s!=null){const k=yd().numTensors;k>s.maxNumTensors&&(s.maxNumTensors=k),k<s.minNumTensors&&(s.minNumTensors=k)}const m=h[f],g=m.sourceLayer;if(g instanceof _l)continue;const y=[],b=[],w=[];let x=!1;for(const k of m.inputs){const E=p.getValue(k),A=p.getMask(k);y.push(E),b.push(A),A!=null&&(x=!0),r||(d[k.name]--,d[k.name]===0&&!e.hasKey(k)&&a.indexOf(k.name)===-1&&!E.isDisposed&&k.sourceLayer.stateful!==!0&&w.push(E))}x&&(t=t||{},t.mask=b[0]);const $=ht(g.apply(y,t));let S=null;g.supportsMasking&&(S=g.computeMask(y,b));const I=sV(m),C=Array.isArray(I)?I:[I];for(let k=0;k<C.length;++k){p.hasKey(C[k])||p.add(C[k],$[k],Array.isArray(S)?S[0]:S);const E=a.indexOf(C[k].name);E!==-1&&(l[E]=$[k])}r||De(w)}return p.disposeMasks(),o?l:l[0]}function tV(n,e){N(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=sv(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=sv(o,e);for(const l of i)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:nV(s)}}function nV(n){const e={};for(const t in n)e[t]=n[t].size;return e}function sv(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const c of a.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(a.name),!t.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function sV(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}const rV=H();rV.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,eV);function t0(n,e){return U(()=>Jt(we(L(n,n),e,!0)))}class oh extends Ni{getConfig(){return{}}}class n0 extends oh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const t=t0(e,this.axis),s=An(t,0,this.maxValue);return L(e,Ce(s,te(Ft(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}n0.className="MaxNorm";Q(n0);class s0 extends oh{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>Ce(e,te(Ft(),t0(e,this.axis))))}getConfig(){return{axis:this.axis}}}s0.className="UnitNorm";Q(s0);class r0 extends oh{apply(e){return js(e)}}r0.className="NonNeg";Q(r0);class o0 extends oh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return U(()=>{const t=t0(e,this.axis),s=te(L(this.rate,An(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,Ce(s,te(Ft(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}o0.className="MinMaxNorm";Q(o0);const rv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pt(n){return Gx(n)}function ov(n,e={}){return th(n,es.getMap().classNameMap,e,"constraint")}function zt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in rv?rv[n]:n,config:{}};return ov(t)}else return n instanceof oh?n:ov(n)}function oV(n){return new n0(n)}function iV(n){return new s0(n)}function aV(){return new r0}function lV(n){return new o0(n)}const cV=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:oV,unitNorm:iV,nonNeg:aV,minMaxNorm:lV},Symbol.toStringTag,{value:"Module"}));function uV(){return new qx}function hV(){return new om}function dV(n){return new Kx(n)}function pV(n){return new Xx(n)}function fV(n){return new Yx(n)}function mV(n){return new Zx(n)}function gV(n){return new Jx(n)}function yV(n){return new Dn(n)}function bV(n){return new im(n)}function xV(n){return new am(n)}function wV(n){return new lm(n)}function vV(n){return new cm(n)}function $V(n){return new um(n)}function IV(n){return new hm(n)}function CV(n){return new Qx(n)}const SV=Object.freeze(Object.defineProperty({__proto__:null,zeros:uV,ones:hV,constant:dV,randomUniform:pV,randomNormal:fV,truncatedNormal:mV,identity:gV,varianceScaling:yV,glorotUniform:bV,glorotNormal:xV,heNormal:wV,heUniform:vV,leCunNormal:$V,leCunUniform:IV,orthogonal:CV},Symbol.toStringTag,{value:"Module"}));async function Qr(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];De(s)}}function iN(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}var iv;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(iv||(iv={}));const NV=125;class ua{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class aN{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class TV extends ua{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=U(()=>te(this.totals[r],L(o,s)));this.totals[r]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:U(()=>{const r=L(Ce(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Ot(t[s])}))}}class lN extends ua{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class cN extends ua{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ix,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=NV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ad(this.yieldEvery)&&(this.maybeWait=NB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Qr(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Qr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Qr(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Qr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Qr(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):ad(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Qr(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Qr(e),await this.trainEnd(e))}}function uN(n,e){return n==null&&(n={}),n instanceof ua?[n]:Array.isArray(n)&&n[0]instanceof ua?n:ht(n).map(s=>new cN(s,e))}class Zn{constructor(){}static registerCallbackConstructor(e,t){N(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Zn.checkForDuplicate(t),Zn.constructors[e]==null&&(Zn.constructors[e]=[]),Zn.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Zn.constructors)Zn.constructors[+t].forEach(r=>{if(r===e)throw new V("Duplicate callback constructor.")})}static clear(){Zn.constructors={}}static createCallbacks(e){const t=[];for(const s in Zn.constructors){const r=+s;e>=r&&t.push(...Zn.constructors[r])}return t.map(s=>new s)}}Zn.constructors={};function hN(n,e,t,s,r,o,i,a,l){const c=new lN,u=[new TV,...Zn.createCallbacks(e)];n!=null&&u.push(...n),u.push(c);const h=new aN(u);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:c}}function Bs(n,e={},t=!1){return th(n,es.getMap().classNameMap,e,"layer",t)}function Cd(n,e){return U(()=>{n.dtype!=="float32"&&(n=he(n,"float32"));const t=we(sh(n),e,!0),s=Ti(t.shape,Ft()),r=Jt(br(t,s));return Ce(n,r)})}function Ri(n,e){return U(()=>xt(sh(ye(e,n)),-1))}function pm(n,e){return U(()=>xt(Et(ye(e,n)),-1))}function Al(n,e){return U(()=>{const t=ye(n,e),s=An(Et(n),Ft(),Number.MAX_VALUE),r=Et(Ce(t,s));return L(100,xt(r,-1))})}function kV(n,e){return U(()=>{const t=An(e,Ft(),Number.MAX_VALUE),s=jn(te(1,t)),r=An(n,Ft(),Number.MAX_VALUE),o=jn(te(1,r));return xt(sh(ye(s,o)),-1)})}function EV(n,e){return U(()=>{const t=br(0,ye(1,L(n,e)));return xt(sh(t),-1)})}function _V(n,e){return U(()=>{const t=br(0,ye(1,L(n,e)));return xt(t,-1)})}function AV(n,e){return U(()=>{const t=we(L(n,e),-1),s=rs(L(ye(1,n),e),-1);return br(0,te(1,ye(s,t)))})}function RV(n,e){return U(()=>{const t=Math.log(2),s=ye(e,n),r=ye(te(s,ki(L(-2,s))),t);return xt(r,-1)})}function Ic(n,e,t=!1){return U(()=>{if(t)e=Ku(e);else{const s=we(e,e.shape.length-1,!0);e=Ce(e,s)}return e=An(e,Ft(),1-Ft()),ft(we(L(he(n,"float32"),jn(e)),e.shape.length-1))})}function Sd(n,e,t=!1){return U(()=>{const s=he(Cl(zB(n)),"int32");e=An(e,Ft(),1-Ft());const r=e.shape,o=P(ra(s,r[r.length-1]),r);return Ic(o,e,t)})}function DV(n,e){if(!He(n.shape,e.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return U(()=>{const t=js(e),s=ft(Et(e));return te(ye(t,L(e,n)),Bu(Hn(s)))})}function fm(n,e){return U(()=>{let t;return t=An(e,Ft(),1-Ft()),t=jn(Ce(t,ye(1,t))),xt(DV(n,t),-1)})}function OV(n,e){return U(()=>{const t=An(n,Ft(),1),s=An(e,Ft(),1);return we(L(n,jn(Ce(t,s))),-1)})}function FV(n,e){return U(()=>{const t=jn(te(Ft(),e));return xt(ye(e,L(n,t)),-1)})}function i0(n,e){return U(()=>{const t=Cd(n,-1),s=Cd(e,-1),r=L(t,s);return ft(we(r,-1))})}const Nd={meanSquaredError:Ri,meanAbsoluteError:pm,meanAbsolutePercentageError:Al,meanSquaredLogarithmicError:kV,squaredHinge:EV,hinge:_V,categoricalHinge:AV,logcosh:RV,categoricalCrossentropy:Ic,sparseCategoricalCrossentropy:Sd,binaryCrossentropy:fm,kullbackLeiblerDivergence:OV,poisson:FV,cosineProximity:i0};function Ym(n){if(typeof n=="string"){if(n in Nd)return Nd[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(e)}else return n}function a0(n,e){return U(()=>{const t=L(.5,qn(e)),s=dr(vn(e,t),n.dtype);return xt(Gn(n,s),-1)})}function l0(n,e){return U(()=>dr(Gn(hi(n,-1),hi(e,-1)),"float32"))}function dN(n,e){return U(()=>he(we(Cs(Gn(n,1),Gn(e,1))),"float32"))}function LV(n,e){return U(()=>he(we(Cs(Gn(n,1),Gn(e,0))),"float32"))}function PV(n,e){return U(()=>he(we(Cs(Gn(n,0),Gn(e,1))),"float32"))}function pN(n,e){return U(()=>{const t=dN(n,e),s=PV(n,e),r=te(t,s);return he(dn(vn(r,0),Ce(t,r),0),"float32")})}function zV(n,e){return U(()=>{const t=dN(n,e),s=LV(n,e),r=te(t,s);return he(dn(vn(r,0),Ce(t,r),0),"float32")})}function fN(n,e){return fm(n,e)}function mN(n,e){return n.rank===e.rank&&(n=_o(n,[n.rank-1])),e=hi(e,-1),e.dtype!==n.dtype&&(e=he(e,n.dtype)),he(Gn(n,e),"float32")}const MV=Ri,BV=Ri,VV=pm,WV=pm,UV=Al,GV=Al,c0=Ic,HV=i0,gN=Sd,Td={binaryAccuracy:a0,categoricalAccuracy:l0,precision:pN,categoricalCrossentropy:c0,sparseCategoricalCrossentropy:gN,mse:MV,MSE:BV,mae:VV,MAE:WV,mape:UV,MAPE:GV,cosine:HV};function jV(n){if(typeof n=="string"&&n in Td)return Td[n];if(typeof n!="string"&&n!=null)return n;throw new V(`Unknown metric ${n}`)}function Dh(n){if(sr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Nd))if(Nd[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Td))if(Td[t]===n){e=t;break}return e!==void 0?e:n.name}}function qV(n){const e={Adagrad:()=>Vo.adagrad(.01),Adadelta:()=>Vo.adadelta(1,.95,Ft()),Adam:()=>Vo.adam(.001,.9,.999,Ft()),Adamax:()=>Vo.adamax(.002,.9,.999,Ft(),0),RMSProp:()=>Vo.rmsprop(.001,.9,0,Ft()),SGD:()=>Vo.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new V(`Unknown Optimizer ${n}`)}const av=1*1024*1024;function lv(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Qg(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>av&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${av}.`)}}function Qg(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Qg(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Qg(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}function KV(n,e,t,s=console.log){const r=YV(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let i;if(!r){o.push("Receives inputs"),i=[];for(const u in n.nodesByDepth)i.push(...n.nodesByDepth[u])}s("_".repeat(e)),kd(o,t,s),s("=".repeat(e));const a=n.layers;for(let u=0;u<a.length;++u)r?ZV(a[u],t,s):JV(a[u],t,i,s),s((u===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=XV(n),c=vd(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function XV(n){let e;return n.collectedTrainableWeights!=null?e=vd(n.collectedTrainableWeights):e=vd(n.trainableWeights),e}function YV(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function kd(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function ZV(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];kd(a,e,t)}function JV(n,e,t,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),c=i.length===0?"":i[0],u=[`${a} (${l})`,o,r,n.countParams().toString(),c];kd(u,e,s);for(let h=1;h<i.length;++h)kd(["","","","",i[h]],e,s)}function yN(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Cc(n,e){if(n===null)return null;if(typeof n=="string")return jo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];yN(e,r,o)?t.push(o):t.push(Cc(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=jo(s);t[o]=Cc(r,o)}}return t}}function ey(n,e){if(n==null)return null;if(typeof n=="string")return $r(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];yN(e,r,o)?t.push(o):t.push(ey(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=$r(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=ey(r,s)}return t}}const mm="4.1.0";class Es extends We{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=sm(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ho(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);ho(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,x=b.nodeIndex,$=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push($)}for(const b of this.inputs){const w=b.sourceLayer,x=b.nodeIndex,$=b.tensorIndex;sr(x===0,"input layer has >1 nodes"),sr($===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push($)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof _l))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},r={},o={},i={},a=[],l=(b,w,x,$,S,I)=>{($==null||S==null||I==null)&&($=b.sourceLayer,S=b.nodeIndex,I=b.tensorIndex);const C=$.inboundNodes[S];if(x.indexOf(C)!==-1)throw new ws(`The tensor ${b.name} at layer "${$.name}" is part of a cycle.`);if(w.indexOf(C)!==-1)return;this.containerNodes.add(Es.nodeKey($,S)),$.id in i||(i[$.id]=Object.keys(i).length),x.indexOf(C)===-1&&x.push(C);const k=C.inboundLayers.length;for(let E=0;E<k;E++){const A=C.inputTensors[E],_=C.inboundLayers[E],O=C.nodeIndices[E],M=C.tensorIndices[E];l(A,w,x,_,O,M)}for(w.push(C);x.indexOf(C)>=0;)x.splice(x.indexOf(C),1);a.push(C)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id];const x=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];w=Math.max(w,x),r[b.outboundLayer.id]=w,o[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let $=0;$<b.inboundLayers.length;$++){const S=b.inboundLayers[$],I=b.nodeIndices[$],C=S.inboundNodes[I],k=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(w+1,k),s[C.id]=C}}const d={};for(const b in t){const w=t[b];w in d||(d[w]=[]),d[w].push(s[b])}const p={};for(const b in r){const w=r[b];w in p||(p[w]=[]),p[w].push(o[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(_h);this.layers=[];for(const b of f){const w=p[b];w.sort((x,$)=>{const S=i[x.id],I=i[$.id];return S<I?-1:S>I?1:0});for(const x of w)x instanceof Es&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(_h);const m=this.inputs.slice(),g=[];for(const b of f)for(const w of d[b]){const x=w.outboundLayer;if(x!=null){for(const $ of w.inputTensors)if(m.indexOf($)===-1)throw new ws(`Graph disconnected: cannot obtain value for tensor ${$} at layer "${x.name}". The following previous layers were accessed without issue: ${g}`);for(const $ of w.outputTensors)m.push($);g.push(x.name)}}this.nodesByDepth=d;const y=this.layers.map(b=>b.name);for(const b of y){const w=y.filter(x=>x===b).length;if(w!==1)throw new ws(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;for(const i of this.layers)for(const a of i.weights){if(s[a.originalName]!=null)throw new V(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,r++}const o=[];for(const i in e){let a=i;if(s[i]==null){const l=i.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[a]!=null)o.push([s[a],e[i]]);else if(t)throw new V(`Provided weight data has no target variable: ${i}`);delete s[a]}if(t){const i=[];for(const a in s)i.push(a);if(i.length>0)throw new V(`${i.length} of ${r} weights are not set: ${i}`)}e0(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${mm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=ey(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return U(()=>{e=ht(e);const s=new ro;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Ql(this.outputs,s,t)})}computeMask(e,t){return U(()=>{e=ht(e);let s;return t==null?s=gi(null,e.length):s=ht(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=wd(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],c=t[a],u=l.name+"_0_0";s[u]=c}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(_h);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],y=c.nodeIndices[m],b=c.tensorIndices[m],w=`${g.name}_${y}_${b}`,x=s[w];h.push(x)}const d=u.computeOutputShape(Tn(h)),p=wd(d),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];sr(l in s),o.push(s[l])}return Tn(o)}runInternalGraph(e,t){t==null&&(t=gi(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=t[l];s[c.id]=[u,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(_h);for(const l of r){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,y,b,w;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[x,$]=f[0];m.mask==null&&(m.mask=$),b=ht(h.call(x,m)),w=ht(h.computeMask(x,$)),g=[x],y=[$]}else g=f.map(x=>x[0]),y=f.map(x=>x[1]),m.mask==null&&(m.mask=y),b=ht(h.call(g,m)),w=ht(h.computeMask(g,y));if(h.activityRegularizer)throw new Le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<p.length;++x){const $=p[x],S=b[x],I=w[x];s[$.id]=[S,I]}}}}const o=[],i=[],a=[];for(const l of this.outputs){sr(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),o.push(c),i.push(u)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Es?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Es.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new V("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new V(`No such layer: ${e}`)}calculateLosses(){return U(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Es.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=Es.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],x=Es.nodeKey(y,b);let $=t[x];$==null&&($=0),m.push([y.name,$,w,f])}c.push(m)}}}const u={};u.name=i.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=Es.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,u,h])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=Es.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,u,h])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){const b=[];let w;for(const x of y){const $=x[0],S=x[1],I=x[2];if(w=x[3]==null?{}:x[3],!($ in o)){a(g,y);return}const C=o[$];if(C.inboundNodes.length<=S){a(g,y);return}const k=C.inboundNodes[S];b.push(k.outputTensors[I])}b.length>0&&g.apply(Tn(b),w)}function c(g){const y=g.name,b=Bs(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(r),o[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${x}`);a(b,x)})}const u=t.name,h=t.layers;for(const g of h)c(g);for(;!SB(i);)for(const g of h){const y=o[g.name];if(y.name in i){const b=i[y.name];delete i[y.name];for(const w of b)l(y,w)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],b=g[1],w=g[2];sr(y in o);const $=o[y].inboundNodes[b].outputTensors;d.push($[w])}const m=t.outputLayers;for(const g of m){const y=g[0],b=g[1],w=g[2];sr(y in o);const $=o[y].inboundNodes[b].outputTensors;p.push($[w])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){U(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function QV(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function bN(n,e){return QV(n,e,"classWeight")}async function xN(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const r=U(()=>{if(n.shape.length===1)return ur(n);if(n.shape.length===2){if(n.shape[1]>1)return hi(n,1);if(n.shape[1]===1)return P(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());De(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),cn(i,"float32")}else return null}function eW(n,e){return L(n,e)}const tW=32;function wN(n,e){let t,s;const r=e;t=r.xs,s=r.ys,N(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=cv("input",n.inputNames,t),i=cv("output",n.outputNames,s),a=o[0].shape[0];N(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),N(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)N(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)N(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function cv(n,e,t){if(t instanceof Ye)return[t];if(Array.isArray(t))return N(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new V(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function nW(n){if(n.length===3)throw new Le("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function sW(n,e,t){const s=t.batchesPerEpoch!=null;if(N(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),N(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),N(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(uv(t.validationData))N(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=nW(t.validationData);o=g.xs,i=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=uN(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=hN(u,h,t.epochs,null,null,rW(e,t),null,r,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let y=0,b=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:x,ys:$}=wN(n,w.value),S={};S.batch=b,S.size=x[0].shape[0],await d.onBatchBegin(b,S);const I=[];if(t.classWeight!=null){const E=bN(t.classWeight,n.outputNames);for(let A=0;A<E.length;++A)I.push(await xN($[A],null,E[A]))}const C=x.concat($).concat(I),k=a(C);De(C);for(let E=0;E<l.length;++E){const A=l[E],_=k[E];S[A]=_,Ot(_)}await d.onBatchEnd(b,S),iN(S),b++,y++}if(s?y>=t.batchesPerEpoch:w.done){if(r){let x;uv(t.validationData)?x=ht(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):x=ht(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?tW:t.validationBatchSize,verbose:0}));for(let $=0;$<n.metricsNames.length;++$)g[`val_${n.metricsNames[$]}`]=x[$]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function rW(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function uv(n){return typeof n.iterator=="function"}function oW(n){return typeof n.next=="function"}async function iW(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new Le("Verbose mode is not implemented yet.");N(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=oW(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const c=await i.next();if(o=U(()=>{if(c.value){const{xs:u,ys:h}=wN(n,c.value),d=u.concat(h),p=U(()=>r(d));if(De(d),l===0)for(let m=0;m<p.length;++m)o.push(ke(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=U(()=>te(o[m],L(f,g))),l>0&&De(y)}De(p),a+=f,++l}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const u=o[c];o[c]=Ce(o[c],a),De(u)}return Tn(o)}function Zm(n){N(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function jl(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>ri(s,e,t-e)):ri(n,e,t-e)}function ty(n,e){return U(()=>n==null?null:Array.isArray(n)?n.map(t=>ty(t,e)):tN(n,e.dtype==="int32"?e:he(e,"int32")))}function Jm(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function vN(n){const e=[];n instanceof Ye&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(nh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ks(n,e){if(n==null)return;const t=[];if(e instanceof Ye)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Ye)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}function aW(n){return n instanceof Ye}function ny(n){return Array.isArray(n)}function hv(n){return!aW(n)&&!ny(n)}function dv(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(ny(n)&&n.length>0)i=!0;else if(hv(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(hv(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(ny(n)){if(n=n,n.length!==e.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new V(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=vN(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new V(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[i][l];if(u!=null&&u>=0&&c!==u)throw new V(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function lW(n,e,t){const s=ho(n.map(o=>o.shape[0]));s.sort();const r=ho(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!He(s,r))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function cW(n,e,t){const s=[Ri,fm,Ic];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===Ic&&o.shape[o.shape.length-1]===1)throw new V(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new V(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function pv(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new V(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new V(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[i][l];if(u!=null&&u!==c)throw new V(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function uW(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const hW="layers-model";class Tr extends Es{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");KV(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=qV(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Hr))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new V(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(Ym(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Ym(a))}else{const i=Ym(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],si("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=uW(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};si("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(c=>{const u="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===fm?["accuracy","acc"].indexOf(f)!==-1?d=a0:["crossentropy","ce"].indexOf(f)!==-1&&(d=fN):this.lossFunctions[i]===Sd?["accuracy","acc"].indexOf(f)!==-1?d=mN:["crossentropy","ce"].indexOf(f)!==-1&&(d=gN):["accuracy","acc"].indexOf(f)!==-1?d=l0:["crossentropy","ce"].indexOf(f)!==-1&&(d=c0);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=d,h=u+y}else p=jV(f),h=u+Dh(f);let m;si(h,()=>{m=p}),o(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Zm(r);const o=!0,i=this.standardizeUserDataXY(e,t,o,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,r,s.verbose,s.steps);return Tn(c)}finally{ks(i[0],e),ks(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),iW(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new ro;if(e instanceof Ye&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new V(`No value is provided for the model's input ${l.name}`);i.add(l,c)}const a=Ql(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=gi(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return U(()=>{const r=this.checkNumSamples(e);if(s)throw new Le("Verbose predictLoop() is not implemented yet.");const o=Jm(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)U(()=>{const c=o[a][0],u=o[a][1],h=jl(e,c,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new ro(d);return Ql(this.outputs,p)}).forEach((c,u)=>i[u].push(c));return Tn(i.map(a=>St(a,0)))})}predict(e,t={}){const s=vN(e);pv(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Zm(r),this.predictLoop(s,r)}finally{ks(s,e)}}predictOnBatch(e){pv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new ws("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===Sd?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=dv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=dv(t,this.feedOutputNames,o,!1,"target"),lW(e,t),cW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const u=bN(r,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await xN(l[h],null,u[h]))}return[a,l,c]}testLoop(e,t,s,r=0,o){return U(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new Le("Verbose mode is not implemented yet.");if(o!=null)throw new Le("steps mode in testLoop() is not implemented yet");{const l=Jm(i,s),c=cn(Ws(0,i));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=ri(c,h,d-h),f=ty(t,p),m=e(f);if(u===0)for(let g=0;g<m.length;++g)a.push(ke(0));for(let g=0;g<m.length;++g){const y=m[g];a[g]=te(a[g],L(d-h,y))}}for(let u=0;u<a.length;++u)a[u]=Ce(a[u],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(Z1(e,r)>1){const i=Z1(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new ro(h),p=Ql(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=eW(y,o[m]));const b=xt(y);t.push(b),m===0?f=y:f=te(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=xt(y(r[b],p[b]))}Ot(g),i.push(g)}return f=xt(f),this.calculateLosses().forEach(m=>{f=te(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>U(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:r[c]});const a=new ro(i),l=Ql(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=xt(u(o[c],l[c]));c===0?s=h:s=te(s,h),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=xt(u(o[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,c,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;Zm(p);const f=!1,m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,p);r=m[0],o=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Le("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const k=!0,E=await this.standardizeUserData(l,c,null,null,k,p);u=E[0],h=E[1],y=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const k=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];u=jl(r,k,E),i=r,r=jl(r,0,k),h=jl(o,k,E),a=o,o=jl(o,0,k),y=u.concat(h)}else s.validationSteps!=null&&(g=!0);const b=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let $,S;g?(this.makeTestFunction(),$=this.testFunction,S=x.slice().concat(x.map(k=>"val_"+k))):($=null,y=[],S=x.slice());const I=uN(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,x,p,s.epochs,s.verbose,I,$,y,s.shuffle,S,s.initialEpoch,null,null)}finally{this.isTraining=!1,ks(r,e),ks(o,t),ks(i,e),ks(a,t),ks(u,l),ks(h,c),d!=null&&De(d)}}async fitLoop(e,t,s,r,o,i,a,l,c,u,h,d,p,f){r==null&&(r=32),o==null&&(o=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=Ws(0,g)),i==null&&(i=1);const{callbackList:b,history:w}=hN(a,i,o,d,g,p,r,m,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=d;x<o;++x){await b.onEpochBegin(x);const $={};if(p!=null)throw new Le("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Le("batch shuffling is not implemneted yet");u&&Hy(y);const S=cn(y),I=Jm(g,r);for(let C=0;C<I.length;++C){const k={};if(await b.onBatchBegin(C,k),U(()=>{const E=I[C][0],A=I[C][1],_=ri(S,E,A-E);k.batch=C,k.size=A-E;const O=ty(t,_),M=e(O);for(let W=0;W<s.length;++W){const z=s[W],j=M[W];k[z]=j,Ot(j)}if(C===I.length-1&&m){const W=this.testLoop(l,c,r);for(let z=0;z<s.length;++z){const j=s[z],G=W[z];Ot(G),$["val_"+j]=G}}}),await b.onBatchEnd(C,k),iN(k),this.stopTraining_)break}S.dispose()}if(await b.onEpochEnd(x,$),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return sW(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return De(a),ks(s[0],e),ks(s[1],t),Tn(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=yd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yd().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=$r(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>$r(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=$r(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[$r(Dh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>$r(Dh(e)));{const e={};for(const t in this.metrics)e[t]=$r(Dh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Cc(e.optimizer_config),s=Bs(t);let r;if(typeof e.loss=="string")r=jo(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>jo(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=jo(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>jo(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=jo(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=LI(e);if(c.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new V(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await zg(this.getNamedWeights(t)),r=!1,o=null,a={modelTopology:this.toJSON(o,r),format:hW,generatedBy:`TensorFlow.js tfjs-layers v${mm}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await zg(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=uf([s.data,u])}return this.userDefinedMetadata!=null&&(lv(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){lv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Tr.className="Model";Q(Tr);class $N extends Tr{}$N.className="Functional";Q($N);async function dW(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const s=Cc(t),r=Bs(s,e);if(n.weightsManifest!=null){const o=await jI(n.weightsManifest,n.pathPrefix,r.weights.map(a=>a.originalName)),i={};for(const a of r.weights)i[a.originalName]=o[a.originalName];r.loadWeights(i),De(o)}return r}async function pW(n,e){if(e==null&&(e={}),typeof n=="string"){const t=PI(n,e);if(t.length===0)t.push(XI(n,e));else if(t.length>1)throw new V(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return fW(n,void 0,e)}async function fW(n,e,t){if(t==null&&(t={}),n.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const o=t.strict==null?!0:t.strict,i=s.weightData!=null&&s.weightSpecs!=null&&o,a=Bs(Cc(r),e,i),l=s.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=mW(s.weightData,s.weightSpecs);a.loadWeights(c,o),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),De(c),De(u.map(h=>h.tensor))}return a}function mW(n,e){const t=nb(n,e),s={},r=[];return e.forEach(o=>{o.group==="optimizer"?r.push({name:o.name,tensor:t[o.name]}):s[o.name]=t[o.name]}),{modelWeights:s,optimizerWeights:r}}class yi extends Tr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:sm("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof yi||e instanceof Tr;let s;if(t){if(s=e,s.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=oN({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=rN(this.outputs[0])}this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:gi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Tr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");o=t}else N(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof yi))throw new Le(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const u=Bs(l,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}yi.className="Sequential";Q(yi);function gW(n){return new Tr(n)}function yW(n){return new yi(n)}function IN(n){return oN(n)}function bW(n,e){Zn.registerCallbackConstructor(n,e)}let Fn=class extends Ni{getConfig(){return{}}};class CN extends Fn{apply(e,t=1){return BB(e,t)}}CN.className="elu";Q(CN);class SN extends Fn{apply(e){return _f(e)}}SN.className="selu";Q(SN);class NN extends Fn{apply(e){return js(e)}}NN.className="relu";Q(NN);class TN extends Fn{apply(e){return U(()=>Nl(6,js(e)))}}TN.className="relu6";Q(TN);class kN extends Fn{apply(e){return e}}kN.className="linear";Q(kN);class EN extends Fn{apply(e){return Ms(e)}}EN.className="sigmoid";Q(EN);class _N extends Fn{apply(e){return WB(e)}}_N.className="hardSigmoid";Q(_N);class AN extends Fn{apply(e){return ki(e)}}AN.className="softplus";Q(AN);class RN extends Fn{apply(e){return VB(e)}}RN.className="softsign";Q(RN);class DN extends Fn{apply(e){return di(e)}}DN.className="tanh";Q(DN);let u0=class extends Fn{apply(e,t=-1){return Ku(e,t)}};u0.className="softmax";Q(u0);class ON extends Fn{apply(e,t=-1){return $f(e,t)}}ON.className="logSoftmax";Q(ON);class FN extends Fn{apply(e,t=1){return U(()=>L(Ms(L(e,t)),e))}}FN.className="swish";Q(FN);class LN extends Fn{apply(e){return U(()=>L(e,di(ki(e))))}}LN.className="mish";Q(LN);function vo(n){return n.getClassName()}function Qm(n,e={}){return th(n,es.getMap().classNameMap,e,"activation")}function $o(n){if(n==null){const e={};return e.className="linear",e.config={},Qm(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Qm(e)}else return n instanceof Fn?n:Qm(n)}function h0(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class PN extends Ni{}class ih extends PN{constructor(e){super(),h0(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return U(()=>{let t=_t([1]);return this.hasL1&&(t=te(t,we(L(this.l1,Et(e))))),this.hasL2&&(t=te(t,we(L(this.l2,sh(e))))),P(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ih.className="L1L2";Q(ih);function xW(n){return h0(n),new ih({l1:n!=null?n.l1:null,l2:0})}function wW(n){return h0(n),new ih({l2:n!=null?n.l2:null,l1:0})}const fv={l1l2:"L1L2"};function it(n){return Gx(n)}function mv(n,e={}){return th(n,es.getMap().classNameMap,e,"regularizer")}function gt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in fv?fv[n]:n,config:{}};return mv(t)}else return n instanceof PN?n:mv(n)}class d0 extends We{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ae(e);let s=js(e);return this.maxValue!=null&&(s=An(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}d0.className="ReLU";Q(d0);class p0 extends We{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ae(e);return Mu(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}p0.className="LeakyReLU";Q(p0);class f0 extends We{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=mt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gt(e.alphaRegularizer),this.alphaConstraint=zt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new At({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ae(e),Hu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:wt(this.alphaInitializer),alphaRegularizer:it(this.alphaRegularizer),alphaConstraint:Pt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}f0.className="PReLU";Q(f0);let m0=class extends We{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Le(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ae(e);return $l(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};m0.className="ELU";Q(m0);class g0 extends We{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ae(e);return L(s,he(vn(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}g0.className="ThresholdedReLU";Q(g0);class y0 extends We{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new u0().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=Ae(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}y0.className="Softmax";Q(y0);function Zi(n,e,t){if(typeof n=="number")return gi(n,e);if(n.length!==e)throw new V(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!LB(r))throw new V(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Vs(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function rr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+wo([t-e,0]);else if(s==="same")n=n*e;else throw new V(`Unsupport padding mode: ${s}.`);return n}function b0(n,e){return U(()=>(kt(e),e==="channelsFirst"?Ge(n,[0,2,3,1]):n))}function zN(n,e){return U(()=>(kt(e),e==="channelsFirst"?Ge(n,[0,2,3,4,1]):n))}function vW(n,e,t,s=1,r="valid",o,i=1){return U(()=>{if(o==null&&(o=Us()),kt(o),n.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=Ge(n,[0,2,1])),r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=mf(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=qs(a,t)),a})}function gv(n,e,t,s=[1,1],r="valid",o,i,a=null){return U(()=>{if(o==null&&(o=Us()),kt(o),n.rank!==3&&n.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=b0(n,o);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=aS({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(l=Ge(l,[0,3,1,2])),l})}function $W(n,e,t,s=[1,1,1],r="valid",o,i){return U(()=>{if(o==null&&(o=Us()),kt(o),n.rank!==4&&n.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=zN(n,o);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Wb(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=qs(a,t)),o==="channelsFirst"&&(a=Ge(a,[0,4,1,2,3])),a})}class gm extends We{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",gm.verifyArgs(t),this.rank=e,Vt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Zi(t.kernelSize,e,"kernelSize"),this.strides=Zi(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,cs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kt(this.dataFormat),this.activation=$o(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=mt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zt(t.biasConstraint),this.biasRegularizer=gt(t.biasRegularizer),this.activityRegularizer=gt(t.activityRegularizer),this.dilationRate=Zi(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(sr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Hx(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vo(this.activation),useBias:this.useBias,biasInitializer:wt(this.biasInitializer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Rl extends gm{constructor(e,t){super(e,t),this.kernel=null,Rl.verifyArgs(t),this.filters=t.filters,Vt(this.filters,"filters"),this.kernelInitializer=mt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zt(t.kernelConstraint),this.kernelRegularizer=gt(t.kernelRegularizer)}build(e){e=tt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return U(()=>{e=Ae(e);let s;const r=this.bias==null?null:this.bias.read(),o=XS(this.activation.getClassName());if(o!=null&&this.rank===2)s=gv(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=vW(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=gv(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=$W(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=tt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=Vs(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:wt(this.kernelInitializer),kernelRegularizer:it(this.kernelRegularizer),kernelConstraint:Pt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Dl extends Rl{constructor(e){super(2,e),Dl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Hx(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Dl.className="Conv2D";Q(Dl);class Ol extends Rl{constructor(e){super(3,e),Ol.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ol.className="Conv3D";Q(Ol);class x0 extends Dl{constructor(e){if(super(e),this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return U(()=>{let s=Ae(e);if(s.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],c=r[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=rr(l,d,u,this.padding),m=rr(c,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ge(s,[0,2,3,1]));let y=gf(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Ge(y,[0,3,1,2])),this.bias!=null&&(y=qs(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=tt(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[r]=rr(t[r],l,i,this.padding),t[o]=rr(t[o],c,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}x0.className="Conv2DTranspose";Q(x0);class w0 extends Ol{constructor(e){if(super(e),this.inputSpec=[new At({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return U(()=>{let s=Ae(e);if(s.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const c=r[l],u=r[i],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],b=rr(c,m,d,this.padding),w=rr(u,g,p,this.padding),x=rr(h,y,f,this.padding),$=[o,b,w,x,this.filters];this.dataFormat!=="channelsLast"&&(s=Ge(s,[0,2,3,4,1]));let S=Ub(s,this.kernel.read(),$,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Ge(S,[0,4,1,2,3])),this.bias!==null&&(S=qs(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(e){e=tt(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[r]=rr(t[r],u,a,this.padding),t[o]=rr(t[o],h,l,this.padding),t[i]=rr(t[i],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}w0.className="Conv3DTranspose";Q(w0);class MN extends Rl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=mt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gt(t.depthwiseRegularizer),this.depthwiseConstraint=zt(t.depthwiseConstraint),this.pointwiseInitializer=mt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gt(t.pointwiseRegularizer),this.pointwiseConstraint=zt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return U(()=>{e=Ae(e);let s;if(this.rank===1)throw new Le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ge(e,[0,2,3,1])),s=Af(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=qs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ge(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=wt(this.depthwiseInitializer),e.pointwiseInitializer=wt(this.pointwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.pointwiseRegularizer=it(this.pointwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseConstraint),e.pointwiseConstraint=Pt(this.pointwiseConstraint),e}}MN.className="SeparableConv";class v0 extends MN{constructor(e){super(2,e)}}v0.className="SeparableConv2D";Q(v0);class ah extends Rl{constructor(e){super(1,e),ah.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Hx(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ah.className="Conv1D";Q(ah);class $0 extends We{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return U(()=>{if(e=Ae(e),this.dataFormat==="channelsLast"){const s=Rh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Rh(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Rh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Rh(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}$0.className="Cropping2D";Q($0);class I0 extends We{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,DB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return U(()=>{let s=Ae(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Ge(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?ar.resizeNearestNeighbor(s,[o,i]):ar.resizeBilinear(s,[o,i]);return Ge(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?ar.resizeNearestNeighbor(s,[o,i]):ar.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}I0.className="UpSampling2D";Q(I0);function IW(n,e,t=[1,1],s="valid",r,o){return U(()=>{r==null&&(r=Us()),kt(r);let i=b0(n,r);if(n.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=vl(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Ge(i,[0,3,1,2])),i})}class C0 extends gm{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=mt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zt(e.depthwiseConstraint),this.depthwiseRegularizer=gt(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{e=Ae(e);let s=IW(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=qs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=tt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Vs(t,this.kernelSize[0],this.padding,this.strides[0]),i=Vs(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=wt(this.depthwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseRegularizer),e}}C0.className="DepthwiseConv2D";Q(C0);function BN(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function VN(n,e,t,s=!1,r,o,i=!1,a=!1){return U(()=>{const l=e.shape.length;if(l<3)throw new V(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Ws(2,l));if(e=Ge(e,c),o!=null)throw new Le("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=he(he(r,"bool"),"float32"),r.rank===l-1&&(r=on(r,-1)),r=Ge(r,c)),s&&(e=as(e,0),r!=null&&(r=as(r,0)));const u=[];let h,d=t;const p=e.shape[0],f=ls(e);let m;r!=null&&(m=ls(r));for(let y=0;y<p;++y){const b=f[y],w=U(()=>n(b,d));if(r==null)h=w[0],d=w[1];else{const x=U(()=>{const $=m[y],S=ye(qn($),$),I=te(L(w[0],$),L(d[0],S)),C=d.map((k,E)=>te(L(w[1][E],$),L(k,S)));return{output:I,newStates:C}});h=x.output,d=x.newStates}a&&u.push(h)}let g;return a&&(g=Rn(u,1)),[h,g,d]})}class Ks extends We{constructor(e){super(e);let t;if(e.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new xm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ws(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Zg(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return U(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Le("Constants support is not implemented in RNN yet.");Zg(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new At({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!He(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new At({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new nr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>_t([s,r])):this.states_=[_t([s,this.cell.stateSize])];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>_t([s,r])):this.states_[0]=_t([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):De(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!He(o.shape,a))throw new V(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Ot(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=BN(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new At({shape:c.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Fs){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return U(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ae(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new V(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},c=VN((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(e){return U(()=>{let t=_t(e.shape);return t=we(t,[1,2]),t=nh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Xg(t,[1,s]):t):this.cell.stateSize>1?[Xg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ks.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=Bs(r,s);return new e(Object.assign(t,{cell:o}))}}Ks.className="RNN";Q(Ks);class lh extends We{}class ym extends lh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vt(this.units,"units"),this.activation=$o(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=ca([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ca([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>qn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>qn(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=pr(L(e,i),this.kernel.read()):o=pr(e,this.kernel.read()),this.bias!=null&&(o=qs(o,this.bias.read())),a!=null&&(s=L(s,a));let l=te(o,pr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vo(this.activation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ym.className="SimpleRNNCell";Q(ym);class S0 extends Ks{constructor(e){e.cell=new ym(e),super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}S0.className="SimpleRNN";Q(S0);class bm extends lh{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Vt(this.units,"units"),this.activation=$o(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$o(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=ca([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ca([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return U(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>qn(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>qn(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=L(e,o[0]));let u=pr(e,this.kernel.read());this.useBias&&(u=qs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=L(r,i[0]));const h=this.recurrentKernel.read(),[d,p]=En(h,[2*this.units,this.units],h.rank-1),f=pr(r,d),[m,g,y]=En(u,3,u.rank-1),[b,w]=En(f,2,f.rank-1);a=this.recurrentActivation.apply(te(m,b)),l=this.recurrentActivation.apply(te(g,w));const x=pr(L(l,r),p);c=this.activation.apply(te(y,x));const $=te(L(a,r),L(te(1,ft(a)),c));return[$,$]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vo(this.activation),recurrentActivation:vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}bm.className="GRUCell";Q(bm);class N0 extends Ks{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bm(e),super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}N0.className="GRU";Q(N0);class ch extends lh{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Vt(this.units,"units"),this.activation=$o(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$o(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gt(e.kernelRegularizer),this.recurrentRegularizer=gt(e.recurrentRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=ca([1,wo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ca([1,wo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=tt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends Ns{apply(l,c){const u=o.apply([i]),h=new om().apply([i]),d=o.apply([i*2]);return Q1(Q1(u,h),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return U(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>qn(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>qn(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=L(e,i[0]));let d=pr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=L(r,a[0])),d=te(d,pr(r,this.recurrentKernel.read())),this.useBias&&(d=qs(d,this.bias.read()));const[p,f,m,g]=En(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=te(L(c,o),L(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=L(h,this.activation.apply(u));return[y,y,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vo(this.activation),recurrentActivation:vo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}ch.className="LSTMCell";Q(ch);class T0 extends Ks{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ch(e),super(e)}call(e,t){return U(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}T0.className="LSTM";Q(T0);class xm extends lh{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return U(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){Zg(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{si(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(Bs(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Jg(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}e0(t)}}xm.className="StackedRNNCells";Q(xm);function Io(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(e(),t):nN(e(),t),a=()=>rh(i,e,s);return!r||r<=1?Ot(a().clone()):Array(r).fill(void 0).map(a).map(c=>Ot(c.clone()))}var CW=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class WN extends Ks{constructor(e){if(e.unroll)throw new Le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Le("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new At({ndim:5})]}call(e,t){return U(()=>{if(this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return U(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=_t(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){U(()=>{if(!this.stateful)throw new nr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>_t(o)):this.states_=[_t(o)];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>_t(o)):this.states_[0]=_t(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):De(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=o;if(!He(l.shape,c))throw new V(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Ot(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=Vs(c,r[0],o,i[0],a[0]),d=Vs(u,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}WN.className="ConvRNN2D";class wm extends ch{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Vt(this.filters,"filters"),this.kernelSize=Zi(s,2,"kernelSize"),this.kernelSize.forEach(l=>Vt(l,"kernelSize")),this.strides=Zi(r||1,2,"strides"),this.strides.forEach(l=>Vt(l,"strides")),this.padding=o||"valid",cs(this.padding),this.dataFormat=i||"channelsLast",kt(this.dataFormat),this.dilationRate=Zi(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Vt(l,"dilationRate"))}build(e){var t;e=tt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(t=class extends Ns{apply(d,p){const f=c.apply([u]),m=Wn([u]),g=c.apply([u*2]);return jx([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return U(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Io({ones:()=>qn(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(se,ee,oe)=>!ee||!ee[oe]?se:L(ee[oe],se);let u=c(r,l,0),h=c(r,l,1),d=c(r,l,2),p=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Io({ones:()=>qn(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),y=c(o,f,2),b=c(o,f,3);const w=3,[x,$,S,I]=En(this.kernel.read(),a,w),[C,k,E,A]=this.useBias?En(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,x,C,this.padding),h=this.inputConv(h,$,k,this.padding),d=this.inputConv(d,S,E,this.padding),p=this.inputConv(p,I,A,this.padding);const[_,O,M,W]=En(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,_),g=this.recurrentConv(g,O),y=this.recurrentConv(y,M),b=this.recurrentConv(b,W);const z=this.recurrentActivation.apply(te(u,m)),j=this.recurrentActivation.apply(te(h,g)),G=te(L(j,i),L(z,this.activation.apply(te(d,y)))),Z=L(this.recurrentActivation.apply(te(p,b)),this.activation.apply(G));return[Z,Z,G]})}getConfig(){const e=super.getConfig(),t=CW(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=Dr(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?qs(o,s,this.dataFormat):o}recurrentConv(e,t){return Dr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}wm.className="ConvLSTM2DCell";Q(wm);class k0 extends WN{constructor(e){const t=new wm(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}k0.className="ConvLSTM2D";Q(k0);class vm extends We{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return rh(()=>nN(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}vm.className="Dropout";Q(vm);class E0 extends vm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}E0.className="SpatialDropout1D";Q(E0);class _0 extends We{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Vt(this.units,"units"),this.activation=$o(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=mt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=mt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zt(e.kernelConstraint),this.biasConstraint=zt(e.biasConstraint),this.kernelRegularizer=gt(e.kernelRegularizer),this.biasRegularizer=gt(e.biasRegularizer),this.activityRegularizer=gt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e),r=XS(this.activation.getClassName());let o;return r!=null?o=pr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=pr(s,this.kernel.read()),this.bias!=null&&(o=qs(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:vo(this.activation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}_0.className="Dense";Q(_0);class A0 extends We{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(const t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],po(e,1)]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let s=Ae(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Ge(s,r)}return MB(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}A0.className="Flatten";Q(A0);class R0 extends We{constructor(e){super(e),this.supportsMasking=!0,this.activation=$o(e.activation)}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e);return this.activation.apply(s)})}getConfig(){const e={activation:vo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}R0.className="Activation";Q(R0);class D0 extends We{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return U(()=>(e=Ae(e),PB(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}D0.className="RepeatVector";Q(D0);class O0 extends We{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(i===null)i=l;else throw new V("Can only specifiy one unknown dimension.");else o*=c}const a=po(e);if(i!==null){if(o===0||a%o!==0)throw new V(s);r[i]=a/o}else if(a!==o)throw new V(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return P(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}O0.className="Reshape";Q(O0);class F0 extends We{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ws(1,e.dims.length+1);if(!He(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Ge(Ae(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}F0.className="Permute";Q(F0);class L0 extends We{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ae(e),r=-1;return vc(pi(s,this.maskValue),r)}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e),r=-1,o=!0,i=vc(pi(s,this.maskValue),r,o);return L(s,he(i,s.dtype))})}}L0.className="Masking";Q(L0);class P0 extends We{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ht(e.inputLength))}this.inputDim=e.inputDim,Vt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Vt(this.outputDim,"outputDim"),this.embeddingsInitializer=mt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gt(e.embeddingsRegularizer),this.activityRegularizer=gt(e.activityRegularizer),this.embeddingsConstraint=zt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return U(()=>this.maskZero?(e=Ae(e),pi(e,Ke(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];const t=ht(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return U(()=>{this.invokeCallHook(e,t);let s=Ae(e);s.dtype!=="int32"&&(s=dr(s,"int32"));const r=tN(this.embeddings.read(),P(s,[s.size]));return P(r,tt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:wt(this.embeddingsInitializer),embeddingsRegularizer:it(this.embeddingsRegularizer),activityRegularizer:it(this.activityRegularizer),embeddingsConstraint:Pt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}P0.className="Embedding";Q(P0);class Di extends We{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Le}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=ho(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&ho(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return U(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=wo(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=nh(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=P(l,[h].concat(po(u.slice(1))));p=Ge(p,[1,0]),p=P(p,d),s.push(p),o=!0}else if(c>1){const u=Ws(1,c).concat([0]);s.push(Ge(l,u)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));i=P(Ge(P(i,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Ws(0,a-1));i=Ge(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=ho(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return U(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:on(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Cs(s,t[r]);return s})}}class z0 extends Di{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=te(t,e[s]);return t})}}z0.className="Add";Q(z0);class M0 extends Di{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=L(t,e[s]);return t})}}M0.className="Multiply";Q(M0);class B0 extends Di{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=te(t,e[s]);return L(1/e.length,t)})}}B0.className="Average";Q(B0);class V0 extends Di{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=br(t,e[s]);return t})}}V0.className="Maximum";Q(V0);class W0 extends Di{constructor(e){super(e)}mergeFunction(e){return U(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Nl(t,e[s]);return t})}}W0.className="Minimum";Q(W0);class U0 extends Di{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(He(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return U(()=>jx(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return U(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(he(qn(e[i]),"bool")):t[i].rank<e[i].rank?r.push(on(t[i],-1)):r.push(t[i]);const o=St(r,this.axis);return ff(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}U0.className="Concatenate";Q(U0);function ql(n,e){for(;n<0;)n+=e;return n}function SW(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new Le("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),N(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new Le("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return U(()=>{let i;if(s>r){i=s-r;const l=[];for(let c=0;c<i;++c)l.push(1);e=P(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let c=0;c<i;++c)l.push(1);n=P(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=we(L(n,e),o[0]):a=we(L(Ge(n,[1,0]),e),o[1]);else{const l=o[0]!==n.shape.length-1,c=o[1]===e.shape.length-1;a=Be(n,e,l,c)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let u=l;u<l+i;++u)c.push(u);a=_o(a,c)}return a.shape.length===1&&(a=on(a,1)),a})}class G0 extends Di{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>ql(o,e[i].shape.length)):r=[ql(this.axes,t.shape.length),ql(this.axes,s.shape.length)],this.normalize&&(t=Cd(t,r[0]),s=Cd(s,r[1])),SW(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[ql(this.axes,e.length),ql(this.axes,t.length)],s}computeOutputShape(e){N(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}G0.className="Dot";Q(G0);class H0 extends We{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e);return rh(()=>te(rm(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}H0.className="GaussianNoise";Q(H0);class j0 extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{this.invokeCallHook(e,t);const s=Ae(e);return this.rate>0&&this.rate<1?rh(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return L(s,rm(s.shape,1,o))},()=>s,t.training||!1):s})}}j0.className="GaussianDropout";Q(j0);class q0 extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ae(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return U(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return rh(()=>{const o=Ae(e),i=1.6732632423543772,a=1.0507009873554805,l=-i*a;let c=Wr(kl(s),this.rate);c=dr(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=te(L(o,c),L(te(c,-1),l));return te(L(d,u),h)},()=>Ae(e),t.training||!1)}return e})}}q0.className="AlphaDropout";Q(q0);function Sc(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=Rb(n,e,t,s,r,o);else if(n.rank===3)i=Db(n,e,t,s,r,o);else if(n.rank===4)i=Ob(n,e,t,s,r,o);else throw new Le(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function NW(n,e,t,s,r=.001){return U(()=>{const o=Uu(n,s),i=o.mean,a=o.variance;return[Sc(n,i,a,t,e,r),i,a]})}function TW(n,e,t,s,r=.001){return U(()=>{const o=Uu(n,s),i=o.mean,a=o.variance,l=[];for(const f of Ws(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=P(i,l),u=P(a,l),h=e==null?null:P(e,l),d=t==null?null:P(t,l);return[Sc(n,c,u,d,h,r),i,a]})}function kW(n,e,t,s,r=.001){return He(s.slice().sort(),Ws(0,n.rank-1))?NW(n,e,t,s,r):TW(n,e,t,s,r)}class K0 extends We{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=mt(e.betaInitializer||"zeros"),this.gammaInitializer=mt(e.gammaInitializer||"ones"),this.movingMeanInitializer=mt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=mt(e.movingVarianceInitializer||"ones"),this.betaConstraint=zt(e.betaConstraint),this.gammaConstraint=zt(e.gammaConstraint),this.betaRegularizer=gt(e.betaRegularizer),this.gammaRegularizer=gt(e.gammaRegularizer)}build(e){e=tt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return U(()=>{const s=t.training==null?!1:t.training,r=Ae(e),o=r.shape,i=o.length,a=Ws(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const c=gi(1,i);c[l]=o[l];const u=a.slice();u.sort();const h=!He(u,Ws(0,i).slice(0,i-1)),d=()=>{if(h){const b=P(this.movingMean.read(),c),w=P(this.movingVariance.read(),c),x=this.center?P(this.beta.read(),c):null,$=this.scale?P(this.gamma.read(),c):null;return Sc(r,b,w,x,$,this.epsilon)}else return Sc(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=kW(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,x)=>{U(()=>{const $=1-x,S=b.read(),I=L(ye(S,w),$);b.write(ye(S,I))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:wt(this.betaInitializer),gammaInitializer:wt(this.gammaInitializer),movingMeanInitializer:wt(this.movingMeanInitializer),movingVarianceInitializer:wt(this.movingVarianceInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer),betaConstraint:Pt(this.betaConstraint),gammaConstraint:Pt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}K0.className="BatchNormalization";Q(K0);class X0 extends We{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=mt(e.betaInitializer||"zeros"),this.gammaInitializer=mt(e.gammaInitializer||"ones"),this.betaRegularizer=gt(e.betaRegularizer),this.gammaRegularizer=gt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==ho(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ae(e),r=s.shape,o=r.length;return U(()=>{let{mean:a,variance:l}=Uu(s,this.axis,!0);const c=gi(1,o);for(const m of this.axis)c[m]=r[m];const u=m=>m!=null&&m.shape.length!==o?P(m,c):m;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=ts(a,p),l=ts(l,p),h!=null&&(h=ts(h,f)),d!=null&&(d=ts(d,f)),Sc(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:wt(this.betaInitializer),gammaInitializer:wt(this.gammaInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}X0.className="LayerNormalization";Q(X0);function EW(n,e,t){return U(()=>{if(n.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Us()),t!=="channelsLast"&&t!=="channelsFirst")throw new V(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Ur(n,s)})}class Y0 extends We{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Us():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return U(()=>EW(Ae(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Y0.className="ZeroPadding2D";Q(Y0);function $m(n,e,t,s,r,o){return U(()=>{kt(r),ZS(o),cs(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Us()),o==null&&(o="max"),n=b0(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=Wu(n,e,t,a):i=Lu(n,e,t,a),r==="channelsFirst"&&(i=Ge(i,[0,3,1,2])),i})}function UN(n,e,t,s,r,o){return U(()=>{kt(r),ZS(o),cs(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Us()),o==null&&(o="max"),n=zN(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=rx(n,e,t,a):i=Ab(n,e,t,a),r==="channelsFirst"&&(i=Ge(i,[0,4,1,2,3])),i})}class GN extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Vt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,cs(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=tt(e);const t=Vs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return U(()=>{this.invokeCallHook(e,t),e=nh(Ae(e),2);const s=this.poolingFunction(Ae(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _o(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Z0 extends GN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),$m(e,t,s,r,o,"max")}}Z0.className="MaxPooling1D";Q(Z0);class J0 extends GN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),$m(e,t,s,r,o,"avg")}}J0.className="AveragePooling1D";Q(J0);class HN extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Vt(this.poolSize,"poolSize"),Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kt(this.dataFormat),cs(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Vs(t,this.poolSize[0],this.padding,this.strides[0]),s=Vs(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ae(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Q0 extends HN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),$m(e,t,s,r,o,"max")}}Q0.className="MaxPooling2D";Q(Q0);class ew extends HN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),$m(e,t,s,r,o,"avg")}}ew.className="AveragePooling2D";Q(ew);class jN extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Vt(this.poolSize,"poolSize"),Vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kt(this.dataFormat),cs(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Vs(t,this.poolSize[0],this.padding,this.strides[0]),s=Vs(s,this.poolSize[1],this.padding,this.strides[1]),r=Vs(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return U(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ae(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class tw extends jN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),UN(e,t,s,r,o,"max")}}tw.className="MaxPooling3D";Q(tw);class nw extends jN{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kt(o),cs(r),UN(e,t,s,r,o,"avg")}}nw.className="AveragePooling3D";Q(nw);class qN extends We{constructor(e){super(e),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Le}}class sw extends qN{constructor(e){super(e||{})}call(e,t){return U(()=>{const s=Ae(e);return xt(s,1)})}}sw.className="GlobalAveragePooling1D";Q(sw);class rw extends qN{constructor(e){super(e||{})}call(e,t){return U(()=>{const s=Ae(e);return rs(s,1)})}}rw.className="GlobalMaxPooling1D";Q(rw);class KN extends We{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kt(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Le}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ow extends KN{call(e,t){return U(()=>{const s=Ae(e);return this.dataFormat==="channelsLast"?xt(s,[1,2]):xt(s,[2,3])})}}ow.className="GlobalAveragePooling2D";Q(ow);class iw extends KN{call(e,t){return U(()=>{const s=Ae(e);return this.dataFormat==="channelsLast"?rs(s,[1,2]):rs(s,[2,3])})}}iw.className="GlobalMaxPooling2D";Q(iw);class XN extends We{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=Bs(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class aw extends XN{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return U(()=>(e=Ae(e),VN((i,a)=>[Ae(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}aw.className="TimeDistributed";Q(aw);function _W(n){Ai(RB,"BidirectionalMergeMode",n)}const AW="concat";class lw extends XN{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=Bs(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Bs(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?AW:e.mergeMode,_W(this.mergeMode),e.weights)throw new Le("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):Tn(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=BN(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const u=s.map(h=>new At({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(r!=null)throw new Le("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Fs;for(const c of i)if(c instanceof Fs!==l)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return U(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=as(o,1));let a;return this.mergeMode==="concat"?a=jx([r,o]):this.mergeMode==="sum"?a=te(r,o):this.mergeMode==="ave"?a=L(.5,te(r,o)):this.mergeMode==="mul"?a=L(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){si(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),si(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=Bs(t.layer);if(delete t.layer,t.numConstants!=null)throw new Le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}lw.className="Bidirectional";Q(lw);class cw extends We{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return U(()=>(e=Ae(e),e.dtype!=="float32"&&(e=dr(e,"float32")),te(L(e,this.scale),this.offset)))}}cw.className="Rescaling";Q(cw);const{resizeBilinear:RW,cropAndResize:DW}=ar;class uw extends We{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,l){return U(()=>{let c,u=!1;const h=t/i,d=s/a,p=(r+t)/i,f=(o+s)/a,m=[h,d,p,f],g=[];e.rank===3?(u=!0,c=Rn([e])):c=e;for(let $=0;$<c.shape[0];$++)g.push(m);const y=Un(g,[g.length,4]),b=fi(0,g.length,1,"int32"),x=DW(c,y,b,[r,o],"nearest");return dr(u?Ae(ls(x)):x,l)})}upsize(e,t,s,r){return U(()=>{const o=RW(e,[t,s]);return dr(o,r)})}call(e,t){return U(()=>{const s=Ae(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=tt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}uw.className="CenterCrop";Q(uw);function OW(n,e,t,s){let r=Ae(n);if(r.dtype!=="int32"&&(r=dr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=on(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=on(r,-1)),r.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=xd(a,s,t,i):l=xd(a,[],t,i),e!=="tfIdf")return l;if(s)return L(l,s);throw new V("When outputMode is 'tfIdf', weights must be provided.")}class hw extends We{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=tt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return U(()=>{e=Ae(e),e.dtype!=="int32"&&(e=dr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ae(t.countWeights)}const r=rs(e),o=ia(e),i=vn(this.numTokens,r).bufferSync().get(0),a=Wr(o,0).bufferSync().get(0);if(!(i&&a))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return OW(e,this.outputMode,this.numTokens,s)})}}hw.className="CategoryEncoding";Q(hw);const FW=["bilinear","nearest"],yv=new Set(FW);class dw extends We{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(yv.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=tt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return U(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ar.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ar.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...yv]} are supported`)})}}dw.className="Resizing";Q(dw);function LW(n){return new _l(n)}function PW(n){return new m0(n)}function zW(n){return new d0(n)}function MW(n){return new p0(n)}function BW(n){return new f0(n)}function VW(n){return new y0(n)}function WW(n){return new g0(n)}function UW(n){return new ah(n)}function GW(n){return new Dl(n)}function HW(n){return new x0(n)}function jW(n){return new Ol(n)}function qW(n){return new w0(n)}function KW(n){return new v0(n)}function XW(n){return new $0(n)}function YW(n){return new I0(n)}function ZW(n){return new C0(n)}function JW(n){return new R0(n)}function QW(n){return new _0(n)}function e4(n){return new vm(n)}function t4(n){return new E0(n)}function n4(n){return new A0(n)}function s4(n){return new D0(n)}function r4(n){return new O0(n)}function o4(n){return new F0(n)}function i4(n){return new P0(n)}function a4(n){return new z0(n)}function l4(n){return new B0(n)}function c4(n){return new U0(n)}function u4(n){return new V0(n)}function h4(n){return new W0(n)}function d4(n){return new M0(n)}function p4(n){return new G0(n)}function f4(n){return new K0(n)}function m4(n){return new X0(n)}function g4(n){return new Y0(n)}function pw(n){return new J0(n)}function y4(n){return pw(n)}function b4(n){return pw(n)}function fw(n){return new ew(n)}function x4(n){return fw(n)}function w4(n){return fw(n)}function mw(n){return new nw(n)}function v4(n){return mw(n)}function $4(n){return mw(n)}function I4(n){return new sw(n)}function C4(n){return new ow(n)}function YN(n){return new rw(n)}function ZN(n){return new iw(n)}function JN(n){return new Z0(n)}function QN(n){return new Q0(n)}function S4(n){return new tw(n)}function N4(n){return new N0(n)}function T4(n){return new bm(n)}function k4(n){return new T0(n)}function E4(n){return new ch(n)}function _4(n){return new S0(n)}function A4(n){return new ym(n)}function R4(n){return new k0(n)}function D4(n){return new wm(n)}function O4(n){return new Ks(n)}function F4(n){return new xm(n)}function L4(n){return new lw(n)}function P4(n){return new aw(n)}const z4=YN,M4=ZN,B4=JN,V4=QN;function W4(n){return new H0(n)}function U4(n){return new j0(n)}function G4(n){return new q0(n)}function H4(n){return new L0(n)}function j4(n){return new cw(n)}function q4(n){return new uw(n)}function K4(n){return new dw(n)}function X4(n){return new hw(n)}const Y4=Object.freeze(Object.defineProperty({__proto__:null,inputLayer:LW,elu:PW,reLU:zW,leakyReLU:MW,prelu:BW,softmax:VW,thresholdedReLU:WW,conv1d:UW,conv2d:GW,conv2dTranspose:HW,conv3d:jW,conv3dTranspose:qW,separableConv2d:KW,cropping2D:XW,upSampling2d:YW,depthwiseConv2d:ZW,activation:JW,dense:QW,dropout:e4,spatialDropout1d:t4,flatten:n4,repeatVector:s4,reshape:r4,permute:o4,embedding:i4,add:a4,average:l4,concatenate:c4,maximum:u4,minimum:h4,multiply:d4,dot:p4,batchNormalization:f4,layerNormalization:m4,zeroPadding2d:g4,averagePooling1d:pw,avgPool1d:y4,avgPooling1d:b4,averagePooling2d:fw,avgPool2d:x4,avgPooling2d:w4,averagePooling3d:mw,avgPool3d:v4,avgPooling3d:$4,globalAveragePooling1d:I4,globalAveragePooling2d:C4,globalMaxPooling1d:YN,globalMaxPooling2d:ZN,maxPooling1d:JN,maxPooling2d:QN,maxPooling3d:S4,gru:N4,gruCell:T4,lstm:k4,lstmCell:E4,simpleRNN:_4,simpleRNNCell:A4,convLstm2d:R4,convLstm2dCell:D4,rnn:O4,stackedRNNCells:F4,bidirectional:L4,timeDistributed:P4,globalMaxPool1d:z4,globalMaxPool2d:M4,maxPool1d:B4,maxPool2d:V4,Layer:We,RNN:Ks,RNNCell:lh,input:IN,gaussianNoise:W4,gaussianDropout:U4,alphaDropout:G4,masking:H4,rescaling:j4,centerCrop:q4,resizing:K4,categoryEncoding:X4},Symbol.toStringTag,{value:"Module"}));function Z4(n,e){return a0(n,e)}function J4(n,e){return fN(n,e)}function Q4(n,e){return mN(n,e)}function eU(n,e){return l0(n,e)}function tU(n,e){return c0(n,e)}function nU(n,e){return pN(n,e)}function sU(n,e){return zV(n,e)}function rU(n,e){return i0(n,e)}function oU(n,e){return pm(n,e)}function iU(n,e){return Al(n,e)}function aU(n,e){return Al(n,e)}function lU(n,e){return Al(n,e)}function cU(n,e){return Ri(n,e)}function uU(n,e){return Ri(n,e)}function hU(n,e){return Ri(n,e)}const dU=Object.freeze(Object.defineProperty({__proto__:null,binaryAccuracy:Z4,binaryCrossentropy:J4,sparseCategoricalAccuracy:Q4,categoricalAccuracy:eU,categoricalCrossentropy:tU,precision:nU,recall:sU,cosineProximity:rU,meanAbsoluteError:oU,meanAbsolutePercentageError:iU,MAPE:aU,mape:lU,meanSquaredError:cU,MSE:uU,mse:hU},Symbol.toStringTag,{value:"Module"}));const pU=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:dW},Symbol.toStringTag,{value:"Module"}));function fU(n){return new ih(n)}function mU(n){return xW(n)}function gU(n){return wW(n)}const yU=Object.freeze(Object.defineProperty({__proto__:null,l1l2:fU,l1:mU,l2:gU},Symbol.toStringTag,{value:"Module"}));class eT extends ua{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Tr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Oh(n,e){return n<e}function bv(n,e){return n>e}class tT extends eT{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Le("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Oh:this.mode==="max"?this.monitorFunc=bv:this.monitor.indexOf("acc")!==-1?this.monitorFunc=bv:this.monitorFunc=Oh,this.monitorFunc===Oh&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Oh?1/0:-1/0}async onEpochEnd(e,t){await Qr(t);const s=this.getMonitorValue(t);s!=null&&(this.monitorFunc(s-this.minDelta,this.best)?(this.best=s,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function bU(n){return new tT(n)}const xU={earlyStopping:bU};const wU=H();wU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var ps;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ps||(ps={}));var xv;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(xv||(xv={}));const gw={};function vU(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};gw[n]=t}function nT(n){return gw[n]}function $U(n){delete gw[n]}function v(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd;if(o.type==="tensor")return yn(e.inputNames[o.inputIndexStart],t,s,r);if(o.type==="tensors")return e.inputNames.slice(a,l).map(d=>yn(d,t,s,r));const c=yn(e.inputNames.slice(a)[0],t,s,r),u=c.dataSync();return o.type==="number"?u[0]:ss(c.shape,u)}const i=e.attrParams[n];return i&&i.value}function yn(n,e,t,s){const[r,o]=Mn(n);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[Ed(r,a)]);return i!==void 0?e[Ed(r,i)][o]:void 0}function IU(n,e,t){return e[Ed(n,t.currentContextId)]}function Ir(n,e){const[t,s,r]=Mn(n);return[Ed(t,e&&e.currentContextId),s,r]}function Ed(n,e){return e?`${n}-${e}`:n}function Mn(n){const e=n.split(":");if(e.length===1)return[n,0,void 0];const t=e[0],s=e.length===3?e[1]:void 0,r=Number(e[e.length-1]);return[t,r,s]}function Zh(n,e,t){let s=v("pad",n,e,t);if(s==="explicit"){s=v("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function Cr(n){return n.kept?n:ur(n)}const CU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SU=Object.freeze(Object.defineProperty({__proto__:null,json:CU},Symbol.toStringTag,{value:"Module"}));const NU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],TU=Object.freeze(Object.defineProperty({__proto__:null,json:NU},Symbol.toStringTag,{value:"Module"}));const kU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],EU=Object.freeze(Object.defineProperty({__proto__:null,json:kU},Symbol.toStringTag,{value:"Module"}));const _U=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AU=Object.freeze(Object.defineProperty({__proto__:null,json:_U},Symbol.toStringTag,{value:"Module"}));const RU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],DU=Object.freeze(Object.defineProperty({__proto__:null,json:RU},Symbol.toStringTag,{value:"Module"}));const OU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FU=Object.freeze(Object.defineProperty({__proto__:null,json:OU},Symbol.toStringTag,{value:"Module"}));const LU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],PU=Object.freeze(Object.defineProperty({__proto__:null,json:LU},Symbol.toStringTag,{value:"Module"}));const zU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],MU=Object.freeze(Object.defineProperty({__proto__:null,json:zU},Symbol.toStringTag,{value:"Module"}));const BU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],VU=Object.freeze(Object.defineProperty({__proto__:null,json:BU},Symbol.toStringTag,{value:"Module"}));const WU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],UU=Object.freeze(Object.defineProperty({__proto__:null,json:WU},Symbol.toStringTag,{value:"Module"}));const GU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],HU=Object.freeze(Object.defineProperty({__proto__:null,json:GU},Symbol.toStringTag,{value:"Module"}));const jU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],qU=Object.freeze(Object.defineProperty({__proto__:null,json:jU},Symbol.toStringTag,{value:"Module"}));const KU=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],XU=Object.freeze(Object.defineProperty({__proto__:null,json:KU},Symbol.toStringTag,{value:"Module"}));const YU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ZU=Object.freeze(Object.defineProperty({__proto__:null,json:YU},Symbol.toStringTag,{value:"Module"}));const JU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],QU=Object.freeze(Object.defineProperty({__proto__:null,json:JU},Symbol.toStringTag,{value:"Module"}));const eG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],tG=Object.freeze(Object.defineProperty({__proto__:null,json:eG},Symbol.toStringTag,{value:"Module"}));const nG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sG=Object.freeze(Object.defineProperty({__proto__:null,json:nG},Symbol.toStringTag,{value:"Module"}));const rG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],oG=Object.freeze(Object.defineProperty({__proto__:null,json:rG},Symbol.toStringTag,{value:"Module"}));const iG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],aG=Object.freeze(Object.defineProperty({__proto__:null,json:iG},Symbol.toStringTag,{value:"Module"}));class wv{constructor(){const e=[SU,TU,EU,AU,DU,FU,PU,MU,VU,UU,HU,qU,XU,ZU,QU,tG,sG,oG,aG],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&i.push(m[g.name]),m),{});let l=[];const c=[];let u={},h={};t!=null&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(m=>{const g=a[m];g.inputNames.forEach((y,b)=>{const[w,,x]=Ir(y),$=a[w];if($.outputs!=null){const S=$.outputs.indexOf(x);if(S!==-1){const I=`${w}:${S}`;g.inputNames[b]=I}}g.inputs.push($),$.children.push(g)})}),Object.keys(h).length===0?d.forEach(m=>{const g=a[m];g.children.length===0&&c.push(g)}):Object.keys(h).forEach(m=>{const[g]=Ir(m),y=a[g];y!=null&&(y.signatureKey=h[m],c.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{const[g]=Ir(m),y=a[g];y&&(y.signatureKey=u[m],l.push(y))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:a,inputs:l,outputs:c,weights:o,placeholders:r,signature:t,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=nT(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=sy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=sy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=uy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=uy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=oy(e.attr,o.tfName,o.defaultValue||0),a===void 0&&!!o.tfDeprecatedName&&(a=oy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=cy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=cy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=ry(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=ry(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=dy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=dy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=ly(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=ly(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=hy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=hy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=iy(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=iy(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=ay(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=ay(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=vv(e.attr,o.tfName,o.defaultValue),a===void 0&&!!o.tfDeprecatedName&&(a=vv(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const i=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=Ir(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:yw(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[m,,g]=Ir(p),y=o[m];if(y.outputs!=null){const b=y.outputs.indexOf(g);if(b!==-1){const w=`${m}:${b}`;d.inputNames[f]=w}}d.inputs.push(y),y.children.push(d)})});const c=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=Ir(c[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,a.push(f))});const u=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function lG(n){const e=H().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function sT(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):lG(n);return e?t:t.toLowerCase()}function sy(n,e,t,s=!1){const r=n[e];return r!=null?sT(r.s,s):t}function ry(n,e,t){const s=n[e];return s?s.b:t}function oy(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function yw(n){switch(typeof n=="string"&&(n=ps[n]),n){case ps.DT_FLOAT:case ps.DT_HALF:return"float32";case ps.DT_INT32:case ps.DT_INT64:case ps.DT_INT8:case ps.DT_UINT8:return"int32";case ps.DT_BOOL:return"bool";case ps.DT_DOUBLE:return"float32";case ps.DT_STRING:return"string";default:return null}}function vv(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function iy(n,e,t){const s=n[e];return s&&s.type?yw(s.type):t}function ay(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>yw(r)):t}function rT(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function ly(n,e,t){const s=n[e];return s&&s.shape?rT(s.shape):t}function cy(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function uy(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>sT(o,s)):t}function hy(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>rT(r)):t}function dy(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}class cG{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return yn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return yn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return oy(this.node.rawAttrs,e,t);if(s.s!=null)return sy(this.node.rawAttrs,e,t);if(s.b!=null)return ry(this.node.rawAttrs,e,t);if(s.shape!=null)return ly(this.node.rawAttrs,e,t);if(s.type!=null)return iy(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return cy(this.node.rawAttrs,e,t);if(s.list.s!=null)return uy(this.node.rawAttrs,e,t);if(s.list.shape!=null)return hy(this.node.rawAttrs,e,t);if(s.list.b!=null)return dy(this.node.rawAttrs,e,t);if(s.list.type!=null)return ay(this.node.rawAttrs,e,t)}return t}}const nn=Object.freeze(Object.defineProperty({__proto__:null,abs:Et,acos:$b,acosh:Ib,add:te,addN:dC,all:ff,any:vc,argMax:hi,argMin:Cb,asin:Sb,asinh:Nb,atan:Tb,atan2:kb,atanh:Eb,avgPool:Lu,avgPool3d:Ab,basicLSTMCell:pC,batchToSpaceND:Pu,batchNorm:wl,batchNorm2d:Rb,batchNorm3d:Db,batchNorm4d:Ob,bincount:Fb,broadcastArgs:fC,broadcastTo:ni,buffer:ze,cast:he,ceil:Lb,clipByValue:An,clone:ur,complex:Rr,concat:St,concat1d:Pb,concat2d:zb,concat3d:Mb,concat4d:Bb,conv1d:mf,conv2d:Dr,conv2dTranspose:gf,conv3d:Wb,conv3dTranspose:Ub,cos:zu,cosh:yf,cumprod:$c,cumsum:bf,denseBincount:xd,depthToSpace:Gb,depthwiseConv2d:vl,diag:gC,dilation2d:Hb,div:Ce,divNoNan:jb,dot:qb,einsum:yC,elu:$l,equal:Gn,erf:Kb,euclideanNorm:Yb,exp:Hn,expandDims:on,expm1:Zb,eye:xf,fill:Ti,floor:Cl,floorDiv:pf,gather:Sl,greater:vn,greaterEqual:Wr,imag:Ou,isFinite:Jb,isInf:Qb,isNaN:ex,leakyRelu:Mu,less:wf,lessEqual:Eo,linspace:wC,localResponseNormalization:tx,log:jn,log1p:Bu,logSigmoid:nx,logSoftmax:$f,logSumExp:If,logicalAnd:Cs,logicalNot:Vu,logicalOr:Cf,logicalXor:sx,lowerBound:$C,matMul:Be,max:rs,maxPool:Wu,maxPool3d:rx,maxPoolWithArgmax:IC,maximum:br,mean:xt,meshgrid:CC,min:ia,minimum:Nl,mirrorPad:ox,mod:ix,moments:Uu,mul:L,multiRNNCell:SC,multinomial:NC,neg:ft,notEqual:pi,oneHot:ra,ones:Wn,onesLike:qn,outerProduct:TC,pad:Ur,pad1d:kC,pad2d:EC,pad3d:_C,pad4d:AC,pool:ax,pow:Or,prelu:Hu,print:ab,prod:lx,raggedGather:RC,raggedRange:DC,raggedTensorToTensor:OC,rand:FC,randomGamma:GC,randomNormal:Nf,randomStandardNormal:HC,randomUniform:kl,range:fi,real:oa,reciprocal:ux,relu:js,relu6:Tf,reshape:P,reverse:as,reverse1d:jC,reverse2d:qC,reverse3d:KC,reverse4d:XC,round:kf,rsqrt:Ef,scalar:ke,selu:_f,separableConv2d:Af,setdiff1dAsync:YC,sigmoid:Ms,sign:hx,sin:Rf,sinh:Df,slice:qe,slice1d:ju,slice2d:Of,slice3d:qu,slice4d:aa,softmax:Ku,softplus:ki,spaceToBatchND:Gu,fft:Xu,ifft:la,irfft:Ff,rfft:Yu,split:En,sqrt:Jt,square:ot,squaredDifference:Lf,squeeze:_o,stack:Rn,step:_i,stridedSlice:dx,sub:ye,sum:we,tan:px,tanh:di,tensor:Un,tensor1d:cn,tensor2d:uo,tensor3d:db,tensor4d:ZC,tensor5d:JC,tensor6d:QC,tile:ts,topk:fx,truncatedNormal:Pf,unique:mx,unsortedSegmentSum:zf,unstack:ls,upperBound:eS,variable:gx,where:dn,whereAsync:yx,zeros:_t,zerosLike:Ke,op:F,OP_SCOPE_SUFFIX:tb,booleanMaskAsync:tS,transpose:Ge,norm:Il,movingAverage:nS,scatterND:sS,searchSorted:Sf,sparseToDense:rS,gatherND:oS,dropout:bx,enclosingPowerOfTwo:xx,cosineWindow:Bf,inTopKAsync:iS,image:ar,linalg:$x,losses:yS,spectral:mS,fused:uS,signal:gS,sparse:bS,string:xS},Symbol.toStringTag,{value:"Module"}));const uG=(n,e,t,s=nn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(v("a",n,e,t),v("b",n,e,t))];case"AddN":return[s.addN(v("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(v("a",n,e,t),v("b",n,e,t))];case"Mul":return[s.mul(v("a",n,e,t),v("b",n,e,t))];case"RealDiv":case"Div":return[s.div(v("a",n,e,t),v("b",n,e,t))];case"DivNoNan":return[s.divNoNan(v("a",n,e,t),v("b",n,e,t))];case"FloorDiv":return[s.floorDiv(v("a",n,e,t),v("b",n,e,t))];case"Sub":return[s.sub(v("a",n,e,t),v("b",n,e,t))];case"Minimum":return[s.minimum(v("a",n,e,t),v("b",n,e,t))];case"Maximum":return[s.maximum(v("a",n,e,t),v("b",n,e,t))];case"Pow":return[s.pow(v("a",n,e,t),v("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(v("a",n,e,t),v("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const hG=(n,e,t,s=nn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(v("x",n,e,t))];case"Acos":return[s.acos(v("x",n,e,t))];case"Acosh":return[s.acosh(v("x",n,e,t))];case"Asin":return[s.asin(v("x",n,e,t))];case"Asinh":return[s.asinh(v("x",n,e,t))];case"Atan":return[s.atan(v("x",n,e,t))];case"Atan2":return[s.atan2(v("x",n,e,t),v("y",n,e,t))];case"Atanh":return[s.atanh(v("x",n,e,t))];case"Ceil":return[s.ceil(v("x",n,e,t))];case"Complex":return[s.complex(v("real",n,e,t),v("imag",n,e,t))];case"Cos":return[s.cos(v("x",n,e,t))];case"Cosh":return[s.cosh(v("x",n,e,t))];case"Elu":return[s.elu(v("x",n,e,t))];case"Erf":return[s.erf(v("x",n,e,t))];case"Exp":return[s.exp(v("x",n,e,t))];case"Expm1":return[s.expm1(v("x",n,e,t))];case"Floor":return[s.floor(v("x",n,e,t))];case"Log":return[s.log(v("x",n,e,t))];case"Log1p":return[s.log1p(v("x",n,e,t))];case"Imag":return[s.imag(v("x",n,e,t))];case"Neg":return[s.neg(v("x",n,e,t))];case"Reciprocal":return[s.reciprocal(v("x",n,e,t))];case"Real":return[s.real(v("x",n,e,t))];case"Relu":return[s.relu(v("x",n,e,t))];case"Round":return[s.round(v("x",n,e,t))];case"Selu":return[s.selu(v("x",n,e,t))];case"Sigmoid":return[s.sigmoid(v("x",n,e,t))];case"Sin":return[s.sin(v("x",n,e,t))];case"Sign":return[s.sign(v("x",n,e,t))];case"Sinh":return[s.sinh(v("x",n,e,t))];case"Softplus":return[s.softplus(v("x",n,e,t))];case"Sqrt":return[s.sqrt(v("x",n,e,t))];case"Square":return[s.square(v("x",n,e,t))];case"Tanh":return[s.tanh(v("x",n,e,t))];case"Tan":return[s.tan(v("x",n,e,t))];case"ClipByValue":return[s.clipByValue(v("x",n,e,t),v("clipValueMin",n,e,t),v("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(v("x",n,e,t))];case"Rsqrt":return[s.rsqrt(yn(n.inputNames[0],e,t))];case"Prod":return[s.prod(v("x",n,e,t),v("axes",n,e,t))];case"LeakyRelu":return[s.leakyRelu(v("x",n,e,t),v("alpha",n,e,t))];case"Prelu":return[s.prelu(v("x",n,e,t),v("alpha",n,e,t))];case"IsNan":return[s.isNaN(yn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};function fs(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){N(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];N(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function $v(n){return!(typeof n=="number"||n.some(e=>e<0))}function Kl(n,e,t){let s=py(n,t);const r=!$v(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=py(o.shape,s)}),!$v(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function py(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}class dG{constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=ke(0),Ot(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),fs(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Ot(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Un([],[0].concat(this.elementShape));const s=this.readMany(e);return fs(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Rn(s,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Un([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return fs(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),St(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,ls(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];U(()=>{t=P(t,[1,s,o]);for(let l=0;l<e.length;++l){const u=[0,l===0?0:r[l-1],0],h=[1,e[l],o];i[l]=P(qe(t,u,h),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}class bi{constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);fs(t,o.shape,"TensorList shape mismatch: "),Ot(o)}),this.idTensor=ke(0),this.maxNumElements=r,Ot(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bi([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);fs(e,this.elementShape,"TensorList shape mismatch: ");const r=Kl(this.elementShape,this.tensors,e);return U(()=>{const o=this.tensors.map(i=>P(i,r));return Rn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Kl(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,fs(r.shape,e,"TensorList shape mismatch: "),P(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(fs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ot(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new bi([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);fs(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Kl(this.elementShape,this.tensors,t);return P(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);fs(this.elementShape,t.shape,"TensorList shape mismatch: "),Ot(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);fs(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Kl(this.elementShape,this.tensors,s);return e.length===0?Un([],[0].concat(r)):U(()=>{const o=e.map(i=>P(this.tensors[i],r));return Rn(o,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);fs(this.elementShape,t,"TensorList shape mismatch: ");const s=Kl(this.elementShape,this.tensors,t);return this.size()===0?Un([],[0].concat(s)):U(()=>{const r=this.tensors.map(o=>P(o,s));return St(r,0)})}}function pG(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);fs(r,e,"TensorList shape mismatch: ");const o=ls(n);return new bi(o,e,s)}function fG(n,e,t,s){return new bi([],n,e,s)}function mG(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new bi([],t,n.dtype,s),i=ls(n,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function gG(n,e,t){let s=0;const r=e.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=py(o,t),a=s===0?0:n.size/s,l=U(()=>{const u=[];n=P(n,[1,s,a]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],a];u[h]=P(qe(n,p,f),i)}return n.dispose(),u}),c=new bi([],t,n.dtype,e.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}const yG=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=v("thenBranch",n,e,t),r=v("elseBranch",n,e,t),o=v("cond",n,e,t),i=v("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=v("body",n,e,t),r=v("cond",n,e,t),o=v("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(u=>u.id);let l=await i[0].data();i.forEach(u=>{!u.kept&&a.indexOf(u.id)===-1&&u.dispose()});let c=o;for(;l[0];){const u=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const h=c.map(p=>p.id);u.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const s=v("pred",n,e,t);return[Cr(s)]}case"Switch":{const s=v("pred",n,e,t);let r=v("data",n,e,t);return r.kept||(r=Cr(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>yn(r,e,t)!==void 0);if(s){const r=yn(s,e,t);return[Cr(r)]}return}case"Enter":{const s=v("frameName",n,e,t),r=v("tensor",n,e,t);return t.enterFrame(s),[Cr(r)]}case"Exit":{const s=v("tensor",n,e,t);return t.exitFrame(),[Cr(s)]}case"NextIteration":{const s=v("tensor",n,e,t);return t.nextIteration(),[Cr(s)]}case"TensorArrayV3":{const s=v("size",n,e,t),r=v("dtype",n,e,t),o=v("elementShape",n,e,t),i=v("dynamicSize",n,e,t),a=v("clearAfterRead",n,e,t),l=v("identicalElementShapes",n,e,t),c=v("name",n,e,t),u=new dG(c,r,s,o,l,i,a);return t.addTensorArray(u),[u.idTensor,ke(1)]}case"TensorArrayWriteV3":{const s=v("tensorArrayId",n,e,t),r=v("index",n,e,t),o=v("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=v("tensorArrayId",n,e,t),r=v("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=v("tensorArrayId",n,e,t),r=v("indices",n,e,t),o=v("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=v("tensorArrayId",n,e,t),r=v("indices",n,e,t),o=v("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=v("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=v("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=v("tensorArrayId",n,e,t),r=v("tensor",n,e,t),o=v("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=v("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[ke(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=v("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=v("tensorListId",n,e,t),r=v("index",n,e,t),o=v("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=v("tensorListId",n,e,t),r=v("index",n,e,t),o=v("elementShape",n,e,t),i=v("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=v("indices",n,e,t),r=v("tensor",n,e,t),o=v("elementShape",n,e,t),i=v("numElements",n,e,t),a=mG(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=v("elementShape",n,e,t),r=v("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=v(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,l=fG(s,r,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=v("tensorListId",n,e,t),r=v("indices",n,e,t),o=v("elementShape",n,e,t),i=v("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=v("tensorListId",n,e,t),r=v("elementShape",n,e,t),o=v("elementDType",n,e,t),i=v("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=v("tensor",n,e,t),r=v("elementShape",n,e,t),o=v("elementDType",n,e,t),i=pG(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=v("tensorListId",n,e,t),r=t.getTensorList(s.id),o=v("dtype",n,e,t),i=v("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=v("tensorListId",n,e,t),r=v("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=v("tensorListId",n,e,t),r=v("elementShape",n,e,t),o=v("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=v("tensor",n,e,t),r=v("elementShape",n,e,t),o=v("lengths",n,e,t),i=gG(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=v("tensorListId",n,e,t),r=t.getTensorList(s.id);return[ke(r.size(),"int32")]}case"TensorListResize":{const s=v("tensorListId",n,e,t),r=v("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};function Iv(n,e,t){const[s,r]=v("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",c=v("numArgs",n,e,t);if(o){if(a&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=v("strides",n,e,t),h=Zh(n,e,t),d=v("dataFormat",n,e,t).toUpperCase(),p=v("dilations",n,e,t);let[f,m]=v("args",n,e,t);i&&(m=f,f=void 0);const g=v("leakyreluAlpha",n,e,t);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const bG=(n,e,t,s=nn)=>{switch(n.op){case"Conv1D":{const r=v("stride",n,e,t),o=v("pad",n,e,t),i=v("dataFormat",n,e,t).toUpperCase(),a=v("dilation",n,e,t);return[s.conv1d(v("x",n,e,t),v("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=v("strides",n,e,t),o=Zh(n,e,t),i=v("dataFormat",n,e,t).toUpperCase(),a=v("dilations",n,e,t);return[s.conv2d(v("x",n,e,t),v("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Iv(n,e,t);return[s.fused.conv2d({x:v("x",n,e,t),filter:v("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Iv(n,e,t);return[s.fused.depthwiseConv2d({x:v("x",n,e,t),filter:v("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=v("outputShape",n,e,t),o=v("strides",n,e,t),i=Zh(n,e,t);return[s.conv2dTranspose(v("x",n,e,t),v("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=v("strides",n,e,t),o=Zh(n,e,t),i=v("dilations",n,e,t),a=v("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(v("input",n,e,t),v("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("dataFormat",n,e,t).toUpperCase(),a=v("dilations",n,e,t);return[s.conv3d(v("x",n,e,t),v("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("kernelSize",n,e,t);return[s.avgPool(v("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("kernelSize",n,e,t);return[s.maxPool(v("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("kernelSize",n,e,t),a=v("includeBatchInIndex",n,e,t),{result:l,indexes:c}=s.maxPoolWithArgmax(v("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[l,c]}case"AvgPool3D":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("kernelSize",n,e,t);return[s.avgPool3d(v("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("kernelSize",n,e,t);return[s.maxPool3d(v("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=v("strides",n,e,t),o=v("pad",n,e,t),i=v("dilations",n,e,t),a=r[1],l=r[2],c=i[1],u=i[2];return[s.dilation2d(v("x",n,e,t),v("filter",n,e,t),[a,l],o,[c,u],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const xG=(n,e,t,s=nn)=>{switch(n.op){case"Fill":{const r=v("shape",n,e,t),o=v("dtype",n,e,t),i=v("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=v("start",n,e,t),o=v("stop",n,e,t),i=v("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=v("logits",n,e,t),o=v("numSamples",n,e,t),i=v("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=v("indices",n,e,t),o=v("depth",n,e,t),i=v("onValue",n,e,t),a=v("offValue",n,e,t),l=v("dtype",n,e,t);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(v("shape",n,e,t),v("dtype",n,e,t))];case"OnesLike":return[s.onesLike(v("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(v("shape",n,e,t),v("dtype",n,e,t),v("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(v("shape",n,e,t),v("minval",n,e,t),v("maxval",n,e,t),v("dtype",n,e,t))];case"Range":{const r=v("start",n,e,t),o=v("stop",n,e,t),i=v("step",n,e,t);return[s.range(r,o,i,v("dtype",n,e,t))]}case"TruncatedNormal":{const r=v("shape",n,e,t),o=v("mean",n,e,t),i=v("stdDev",n,e,t),a=v("seed",n,e,t);return[s.truncatedNormal(r,o,i,v("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(v("shape",n,e,t),v("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(v("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};function eg(n,e,t){const s=v("boxes",n,e,t),r=v("scores",n,e,t),o=v("maxOutputSize",n,e,t),i=v("iouThreshold",n,e,t),a=v("scoreThreshold",n,e,t),l=v("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const wG=async(n,e,t,s,r=nn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=eg(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,c,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=eg(n,e,t),u=v("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,c,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=eg(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,c)]}case"Where":{const o=r.cast(v("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(v("x",n,e,t),v("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};const vG=(n,e,t,s=nn)=>{switch(n.op){case"LowerBound":{const r=v("sortedSequence",n,e,t),o=v("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=v("x",n,e,t),o=v("k",n,e,t),i=v("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=v("sortedSequence",n,e,t),o=v("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=v("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=v("x",n,e,t),o=v("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const $G=(n,e,t,s=nn)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=v("default",n,e,t);return[yn(n.name,e,t)||r];case"Placeholder":return[yn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=v("x",n,e,t);return[Cr(u)]}case"IdentityN":return v("x",n,e,t).map(u=>Cr(u));case"Snapshot":const o=v("x",n,e,t);return[Cr(o)];case"Shape":return[s.tensor1d(v("x",n,e,t).shape,"int32")];case"ShapeN":return v("x",n,e,t).map(u=>s.tensor1d(u.shape));case"Size":return[s.scalar(v("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(v("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=v("x",n,e,t),a=v("data",n,e,t),l=v("message",n,e,t),c=v("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};class IG{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ke(0),this.tensorMap=new Map,Ot(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ke(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),U(()=>{const r=ls(t),o=s.length,i=r.length;N(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],c=r[a];Ot(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return U(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return Rn(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const CG=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=v("keyDType",n,e,t),i=v("valueDType",n,e,t),a=new IG(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=v("tableHandle",n,e,t,s),o=v("keys",n,e,t),i=v("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=v("tableHandle",n,e,t,s),o=v("keys",n,e,t),i=v("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=v("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const SG=(n,e,t,s=nn)=>{switch(n.op){case"ResizeBilinear":{const r=v("images",n,e,t),o=v("size",n,e,t),i=v("alignCorners",n,e,t),a=v("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=v("images",n,e,t),o=v("size",n,e,t),i=v("alignCorners",n,e,t),a=v("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=v("image",n,e,t),o=v("boxes",n,e,t),i=v("boxInd",n,e,t),a=v("cropSize",n,e,t),l=v("method",n,e,t),c=v("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,l,c)]}case"ImageProjectiveTransformV3":{const r=v("images",n,e,t),o=v("transforms",n,e,t),i=v("outputShape",n,e,t),a=v("fillValue",n,e,t),l=v("interpolation",n,e,t),c=v("fillMode",n,e,t);return[s.image.transform(r,o,l.toLowerCase(),c.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const NG=(n,e,t,s=nn)=>{switch(n.op){case"Equal":return[s.equal(v("a",n,e,t),v("b",n,e,t))];case"NotEqual":return[s.notEqual(v("a",n,e,t),v("b",n,e,t))];case"Greater":return[s.greater(v("a",n,e,t),v("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(v("a",n,e,t),v("b",n,e,t))];case"Less":return[s.less(v("a",n,e,t),v("b",n,e,t))];case"LessEqual":return[s.lessEqual(v("a",n,e,t),v("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(v("a",n,e,t),v("b",n,e,t))];case"LogicalNot":return[s.logicalNot(v("a",n,e,t))];case"LogicalOr":return[s.logicalOr(v("a",n,e,t),v("b",n,e,t))];case"Select":case"SelectV2":return[s.where(v("condition",n,e,t),v("a",n,e,t),v("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const TG=(n,e,t,s=nn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(v("a",n,e,t),v("b",n,e,t),v("transposeA",n,e,t),v("transposeB",n,e,t))];case"Einsum":return[s.einsum(v("equation",n,e,t),...v("tensors",n,e,t))];case"Transpose":return[s.transpose(v("x",n,e,t),v("perm",n,e,t))];case"_FusedMatMul":const[r,o]=v("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",l=v("numArgs",n,e,t),c=v("leakyreluAlpha",n,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=v("args",n,e,t);return[s.fused.matMul({a:v("a",n,e,t),b:v("b",n,e,t),transposeA:v("transposeA",n,e,t),transposeB:v("transposeB",n,e,t),bias:u,activation:o,preluActivationWeights:h,leakyreluAlpha:c})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const kG=(n,e,t,s=nn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(v("x",n,e,t),v("axis",n,e,t),v("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(v("x",n,e,t),v("mean",n,e,t),v("variance",n,e,t),v("offset",n,e,t),v("scale",n,e,t),v("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(v("x",n,e,t),v("mean",n,e,t),v("variance",n,e,t),v("offset",n,e,t),v("scale",n,e,t),v("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(v("x",n,e,t),v("radius",n,e,t),v("bias",n,e,t),v("alpha",n,e,t),v("beta",n,e,t))];case"Softmax":return[s.softmax(v("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(v("x",n,e,t))];case"SparseToDense":return[s.sparseToDense(v("sparseIndices",n,e,t),v("outputShape",n,e,t),v("sparseValues",n,e,t),v("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const EG=(n,e,t,s=nn)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(v("paramsNestedSplits",n,e,t),v("paramsDenseValues",n,e,t),v("indices",n,e,t),v("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(v("starts",n,e,t),v("limits",n,e,t),v("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(v("shape",n,e,t),v("values",n,e,t),v("defaultValue",n,e,t),v("rowPartitionTensors",n,e,t),v("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const _G=(n,e,t,s=nn)=>{switch(n.op){case"Max":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.max(v("x",n,e,t),a,l)]}case"Mean":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.mean(v("x",n,e,t),a,l)]}case"Min":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.min(v("x",n,e,t),a,l)]}case"Sum":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.sum(v("x",n,e,t),a,l)]}case"All":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.all(v("x",n,e,t),a,l)]}case"Any":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.any(v("x",n,e,t),a,l)]}case"ArgMax":{const a=v("axis",n,e,t);return[s.argMax(v("x",n,e,t),a)]}case"ArgMin":{const a=v("axis",n,e,t);return[s.argMin(v("x",n,e,t),a)]}case"Prod":{const a=v("axis",n,e,t),l=v("keepDims",n,e,t);return[s.prod(v("x",n,e,t),a,l)]}case"Cumprod":{const a=v("axis",n,e,t),l=v("exclusive",n,e,t),c=v("reverse",n,e,t);return[s.cumprod(v("x",n,e,t),a,l,c)]}case"Cumsum":{const a=v("axis",n,e,t),l=v("exclusive",n,e,t),c=v("reverse",n,e,t);return[s.cumsum(v("x",n,e,t),a,l,c)]}case"Bincount":const r=v("x",n,e,t),o=v("weights",n,e,t),i=v("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=v("x",n,e,t),l=v("weights",n,e,t),c=v("size",n,e,t),u=v("binaryOutput",n,e,t);return[s.denseBincount(a,l,c,u)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const AG=(n,e,t,s=nn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=v("n",n,e,t),o=v("axis",n,e,t);let i=v("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=v("x",n,e,t),o=v("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=v("axis",n,e,t),o=v("batchDims",n,e,t),i=v("x",n,e,t),a=v("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=v("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=v("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=v("axis",n,e,t),o=v("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=v("begin",n,e,t),o=v("size",n,e,t);return[s.slice(v("x",n,e,t),r,o)]}case"StridedSlice":{const r=v("begin",n,e,t),o=v("end",n,e,t),i=v("strides",n,e,t),a=v("beginMask",n,e,t),l=v("endMask",n,e,t),c=v("ellipsisMask",n,e,t),u=v("newAxisMask",n,e,t),h=v("shrinkAxisMask",n,e,t),d=v("x",n,e,t);return[s.stridedSlice(d,r,o,i,a,l,c,u,h)]}case"Pack":return U(()=>{const r=v("axis",n,e,t),o=v("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(c=>{const u=He(c.shape,i);if(!u&&!He(s.squeeze(c).shape,a))throw new Error("the input tensors shape does not match");return u?c:s.reshape(c,i)});return[s.stack(l,r)]});case"Unpack":{const r=v("axis",n,e,t),o=v("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=v("reps",n,e,t);return[s.tile(v("x",n,e,t),r)]}case"Split":case"SplitV":{const r=v("axis",n,e,t),o=v("numOrSizeSplits",n,e,t),i=v("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=v("indices",n,e,t),o=v("values",n,e,t),i=v("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=v("x",n,e,t),o=v("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=v("sparseIndices",n,e,t),o=v("outputShape",n,e,t),i=v("sparseValues",n,e,t),a=v("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};const RG=(n,e,t,s=nn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(v("indices",n,e,t),v("values",n,e,t),v("denseShape",n,e,t),v("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(v("inputIndices",n,e,t),v("inputShape",n,e,t),v("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(v("data",n,e,t),v("indices",n,e,t),v("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(v("data",n,e,t),v("indices",n,e,t),v("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const DG=(n,e,t,s=nn)=>{switch(n.op){case"FFT":return[s.fft(v("x",n,e,t))];case"IFFT":return[s.ifft(v("x",n,e,t))];case"RFFT":return[s.rfft(v("x",n,e,t))];case"IRFFT":return[s.irfft(v("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const OG=(n,e,t,s=nn)=>{switch(n.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(v("data",n,e,t),v("dataSplits",n,e,t),v("separator",n,e,t),v("nGramWidths",n,e,t),v("leftPad",n,e,t),v("rightPad",n,e,t),v("padWidth",n,e,t),v("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(v("input",n,e,t),v("delimiter",n,e,t),v("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(v("input",n,e,t),v("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};const FG=(n,e,t,s=nn)=>{switch(n.op){case"Cast":return[s.cast(v("x",n,e,t),v("dtype",n,e,t))];case"ExpandDims":{const r=v("axis",n,e,t);return[s.expandDims(v("x",n,e,t),r)]}case"Squeeze":{const r=v("axis",n,e,t);return[s.squeeze(v("x",n,e,t),r)]}case"Reshape":return[s.reshape(v("x",n,e,t),v("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(v("x",n,e,t),v("padding",n,e,t),v("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(v("x",n,e,t),v("padding",n,e,t),v("constantValue",n,e,t))];case"SpaceToBatchND":{const r=v("blockShape",n,e,t),o=v("paddings",n,e,t);return[s.spaceToBatchND(v("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=v("blockShape",n,e,t),o=v("crops",n,e,t);return[s.batchToSpaceND(v("x",n,e,t),r,o)]}case"DepthToSpace":{const r=v("blockSize",n,e,t),o=v("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(v("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(v("x",n,e,t),v("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(v("s0",n,e,t),v("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};function Cv(n,e,t,s,r=U){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>uG(i,a,l));case"basic_math":return r(()=>hG(i,a,l));case"control":return yG(i,a,l);case"convolution":return r(()=>bG(i,a,l));case"creation":return r(()=>xG(i,a,l));case"dynamic":return wG(i,a,l);case"evaluation":return r(()=>vG(i,a,l));case"image":return r(()=>SG(i,a,l));case"graph":return r(()=>$G(i,a,l));case"logical":return r(()=>NG(i,a,l));case"matrices":return r(()=>TG(i,a,l));case"normalization":return r(()=>kG(i,a,l));case"ragged":return r(()=>EG(i,a,l));case"reduction":return r(()=>_G(i,a,l));case"slice_join":return r(()=>AG(i,a,l));case"sparse":return r(()=>RG(i,a,l));case"spectral":return r(()=>DG(i,a,l));case"string":return r(()=>OG(i,a,l));case"transformation":return r(()=>FG(i,a,l));case"hash_table":return CG(i,a,l,s);case"custom":const c=nT(i.op);if(c&&c.customExecutor)return c.customExecutor(new cG(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return bo(o)?o.then(i=>[].concat(i)):[].concat(o)}class Sv{constructor(e={},t={},s={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Nv(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,c=Object.keys(n).map(d=>Mn(d)[0]);let u=[];s!=null&&(u=s.map(d=>Mn(d.name)[0]));const h=[...e];for(;h.length>0;){const d=h.pop();if((oT(d)||BG(d)||VG(d))&&i==null&&(i=d,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),t[d.name]==null&&c.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function LG(n,e,t){const{usedNodes:s,inputs:r}=t,o=[],i=Object.keys(r).map(u=>Mn(u)[0]).map(u=>n.nodes[u]),a=n.initNodes;i.forEach(u=>{s.has(u.name)&&o.push(u)}),n.weights.forEach(u=>{s.has(u.name)&&o.push(u)}),a!=null&&a.forEach(u=>{s.has(u.name)&&o.push(u)});const l=new Set,c=[];for(;o.length>0;){const u=o.pop();l.add(u.name),e[u.name]||c.push(u),u.children.forEach(h=>{!l.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&o.push(h)})}return c}const PG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],zG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],MG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function oT(n){return PG.indexOf(n.op)>=0}function BG(n){return zG.indexOf(n.op)>=0}function VG(n){return MG.indexOf(n.op)>=0}class _d{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new _d(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const s=Nv(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const a=t.map(c=>c.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}return LG(this.graph,this.weightMap,s)}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Ot(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(h=>this.graph.nodes[Mn(h)[0]]),o=t.map(h=>Mn(h)[0]);let i=o.map(h=>this.graph.nodes[h]);i.length===0&&(i=this._outputs);const a=this.getCompilationKey(r,i);let l=this.compiledMap.get(a);l==null&&(l=this.compile(e,i),this.compiledMap.set(a,l));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},u={};return U(()=>{const h=new Sv(this.weightMap,c,u,this.functionExecutorMap),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(m=>{const[g,y]=Mn(m),b=[];b[y]=e[m],d[g]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList(b))});const p=this.getFrozenTensorIds(d),f={};for(let m=0;m<l.length;m++){const g=l[m];if(!d[g.name]){const y=Cv(g,d,h,this._resourceManager);if(bo(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);d[g.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(y)),this.checkTensorForDisposal(g.name,g,d,h,p,o,f)}}return this.parent==null&&h.dispose(p),t.map(m=>yn(m,d,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){t.category==="control"||i.indexOf(e)!==-1||(s[e].forEach(l=>{l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){const c=IU(l.name,s,r);c!=null&&c.forEach(u=>{if(u&&!u.kept&&!o.has(u.id)){const h=a[u.id];h===1?(u.dispose(),delete a[u.id]):h!=null&&a[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const i=new Sv(this.weightMap,r,o,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),l=t.map(d=>yn(d,a,i)),c=l.map(d=>d.id),u=Object.keys(e).map(d=>e[d].id),h=new Set([...c,...u,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(w=>this.graph.nodes[Mn(w)[0]]),a=s.map(w=>Mn(w)[0]);let l=a.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);const{usedNodes:c,missingInputs:u,dynamicNode:h,syncInputs:d}=Nv(e,l,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[x,$]=Mn(w),S=[];S[$]=e[w],f[x]=S});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const w=this.processStack(i,p,t,f,y,g,a,m,c);await Promise.all(w)}h==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter(w=>!oT(w)&&!yn(w.name,f,t)).map(w=>w.name);if(b.length>0){let w="";throw h!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${o}]. Consider providing the following inputs: [${u}]. ${w}`)}return f}processStack(e,t,s,r,o,i,a,l,c){const u=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&v("isConstant",h.node,r,s)&&([d]=Ir(h.node.name,s)),r[h.node.name]==null){const p=Cv(h.node,r,s,this._resourceManager);d||([d]=Ir(h.node.name,s));const f=s.currentContext;bo(p)?u.push(p.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,c),m))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,c))}else this.processChildNodes(h.node,t,s,r,o,c)}return u}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[l]=Ir(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(c=>!!yn(c,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(c=>!!yn(c,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Mn(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,c)=>i[c]===-1||i[c]===l);N(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&N(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Mn(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Mn(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class WG{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const UG="?tfjs-format=file",GG="model.json";class bw{constructor(e,t={},s=ub){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new WG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return bo(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new _d(wv.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=wv.Instance.transformGraph(e.modelInitializer);this.initializer=new _d(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Ye?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Ye)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,c;const u=(c=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||c===void 0?void 0:c.resourceId;return u!=null?o[i]=this.resourceIdToCapturedInput[u]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&De(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function HG(n,e={},t=ub){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=qG(n));const s=new bw(n,e,t);return await s.load(),s}function jG(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,r]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const o=ib(s.weightsManifest),i=rb(s,o,r);e=gd(i)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=gd(n);else throw new Error("Unknown model format");const t=new bw(e);return t.load(),t}function qG(n){return n.endsWith("/")||(n=n+"/"),`${n}${GG}${UG}`}const iT="4.1.0";function KG(n,e){return Ad(n,e)}function Ad(n,e,t=new Map,s=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(s.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const r=e(n);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(ha(n)){const o=Array.isArray(n)?[]:{};s.add(n);for(const i in n){const a=n[i],l=Ad(a,e,t,s);o[i]=l}return s.delete(n),n.__proto__&&(o.__proto__=n.__proto__),o}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,r.value),r.value}function XG(n,e=lT){return aT(n,e)}function aT(n,e,t=new Set){const s=n[0];if(t.has(s))throw new Error("Circular references are not supported.");const r=e(n);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(ha(s)){const o=Array.isArray(s)?[]:{};t.add(s);for(const i in s){const a=n.map(c=>c[i]),l=aT(a,e,t);o[i]=l}return t.delete(s),o}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function lT(n){return n===null?null:ha(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function cT(n,e){const t=new Map;Ad(n,e,t);for(const r of Array.from(t.keys())){const o=t.get(r);if(bo(o)){const i=await o;t.set(r,i)}}return Ad(n,e,t)}function ha(n){let e=!1;if(H().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=require("string_decoder");e=n instanceof t}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof Ye)&&!(n instanceof Promise)&&!e)}function YG(n){return n==null||ZG(n)||Array.isArray(n)||typeof n=="object"&&n instanceof Ye||Kt(n)}function ZG(n){return n===null||typeof n!="object"&&typeof n!="function"}function JG(n){return KG(n,QG)}function QG(n){return n instanceof Ye?{value:n.clone(),recurse:!1}:ha(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class uT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}class Im extends uT{constructor(){super(Im.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),s=this.length();for(let r=0;r<s;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}Im.INITIAL_CAPACITY=32;function hT(n){return new nH(n)}function xw(n){return new sH(n)}function eH(n,e){return new dT(n,e)}function tH(n,e=oo.FAIL){return new dH(n,e)}class Ut{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let s=await e.next();for(;!s.done;)t.push(s.value),s=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),s=e(t.value);for(;!t.done&&s;)t=await this.next(),s=e(t.value)}handleErrors(e){return new uH(this,e)}filter(e){return new lH(this,e)}map(e){return new cH(this,e)}mapAsync(e){return new Tv(this,e)}serialMapAsync(e){return new Tv(this,e).serial()}flatmap(e){return new hH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new aH(this,e,t)}columnMajorBatch(e,t=!0,s=lT){return this.rowMajorBatch(e,t).map(o=>XG(o,s))}concatenate(e,t){return new dT(hT([this,e]),t)}take(e){return e<0||e==null?this:new iH(this,e)}skip(e){return e<0||e==null?this:new oH(this,e)}prefetch(e){return new pT(this,e)}shuffle(e,t){return new pH(this,e,t)}serial(){return new rH(this)}}class nH extends Ut{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:JG(e),done:!1}}}class sH extends Ut{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class rH extends Ut{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class oH extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;De(e.value)}return this.upstream.next()}}class iH extends Ut{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class aH extends Ut{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lH extends Ut{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;De(e.value)}}}class cH extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ar(e.value),s=this.transform(e.value),r=Ar(s);for(const o of t)cf(o,r)||o.dispose();return{value:s,done:!1}}}class uH extends Ut{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Tv extends Ut{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ar(e.value),s=await this.transform(e.value),r=Ar(s);for(const o of t)cf(o,r)||o.dispose();return{value:s,done:!1}}}class ww extends Ut{constructor(){super(),this.outputQueue=new Im,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hH extends ww{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Ar(e.value),s=this.transform(e.value),r=Ar(s);this.outputQueue.pushAll(s);for(const o of t)cf(o,r)||o.dispose();return!0}}class dT extends Ut{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var oo;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(oo||(oo={}));class dH extends Ut{constructor(e,t=oo.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,s=0;function r(i){return i instanceof Ut?{value:i.next().then(l=>(t++,l.done&&s++,l.value)),recurse:!1}:{value:null,recurse:!0}}const o=await cT(this.iterators,r);if(t===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case oo.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case oo.SHORTEST:return{value:null,done:!0};case oo.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class pT extends Ut{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new uT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class pH extends pT{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Tl.alea(s||qt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}class Fl{constructor(){this.size=null}batch(e,t=!0){const s=this;N(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),zn(async()=>(await s.iterator()).columnMajorBatch(e,t,gH),r)}concatenate(e){const t=this;let s;return this.size===1/0||e.size===1/0?s=1/0:this.size!=null&&e.size!=null?s=this.size+e.size:s=null,zn(async()=>(await t.iterator()).concatenate(await e.iterator()),s)}filter(e){const t=this;let s;return this.size===1/0?s=1/0:s=null,zn(async()=>(await t.iterator()).filter(r=>U(()=>e(r))),s)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return zn(async()=>(await t.iterator()).map(s=>U(()=>e(s))),this.size)}mapAsync(e){const t=this;return zn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return zn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let s;return this.size!=null&&e>0?s=this.size*e:e===0?s=0:this.size!=null&&(e===void 0||e<0)?s=1/0:s=null,zn(async()=>{const r=xw(async()=>({value:await t.iterator(),done:!1}));return eH(r.take(e))},s)}skip(e){const t=this;let s;return this.size!=null&&e>=0&&this.size>=e?s=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?s=0:s=null,zn(async()=>(await t.iterator()).skip(e),s)}shuffle(e,t,s=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,o=Tl.alea(t||qt().toString());return zn(async()=>{let i=o.int32();return s&&(i+=o.int32()),(await r.iterator()).shuffle(e,i.toString())},this.size)}take(e){const t=this;let s;return this.size!=null&&this.size>e?s=e:this.size!=null&&this.size<=e?s=this.size:s=null,zn(async()=>(await t.iterator()).take(e),s)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Fl.MAX_BUFFER_SIZE=1e4;function zn(n,e=null){return new class extends Fl{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function fH(n){return zn(async()=>hT(n),n.length)}function mH(n){if(!ha(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return zn(async()=>{const t=await cT(n,s=>{if(s instanceof Fl)return{value:s.iterator(),recurse:!1};if(ha(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return tH(t,oo.SHORTEST)},e)}function gH(n){if(n===null)return null;const e=n[0];return YG(e)?{value:yH(n),recurse:!1}:{value:null,recurse:!0}}function yH(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof Ye?Rn(n):Un(n)}class fT extends Fl{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(r=>(r.endsWith("\r")&&(r=r.slice(0,-1)),r))}}const Fh='"',Xl=Symbol("out"),kv=Symbol("field"),Lh=Symbol("quote"),tg=Symbol("quoteafterquote"),Ev=Symbol("quoteinquote");class mT extends Fl{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new fT(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(N(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&N(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((r,o)=>(r[o]=r[o]+1||1,r),{}),s=Object.keys(t).filter(r=>t[r]>1);if(N(s.length===0,()=>"Duplicate column names found: "+s.toString()),this.columnConfigs){for(const r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");const s=t.value;return this.parseRow(s,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),s={},r={};for(let o=0;o<this.fullColumnNames.length;o++){const i=this.fullColumnNames[o],a=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!a)){const l=t[o];let c=null;if(l==="")if(a&&a.default!==void 0)c=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);c=void 0}else{const u=Number(l);if(isNaN(u))a&&a.dtype==="bool"?c=this.getBoolean(l):c=l;else if(!a||!a.dtype)c=u;else switch(a.dtype){case"float32":c=u;break;case"int32":c=Math.floor(u);break;case"bool":c=this.getBoolean(l);break;default:c=u}}a&&a.isLabel?r[i]=c:s[i]=c}}return Object.keys(r).length===0?s:{xs:s,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const s=[];let r=0;const o=e.length;let i=Xl;for(let a=0;a<o;a++)switch(i){case Xl:switch(e.charAt(a)){case Fh:r=a+1,i=Lh;break;case this.delimiter:if(r=a+1,this.delimiter===" "&&this.delimWhitespace)break;s.push(""),i=Xl;break;default:i=kv,r=a;break}break;case kv:switch(e.charAt(a)){case this.delimiter:s.push(e.substring(r,a)),i=Xl,r=a+1;break}break;case Lh:switch(e.charAt(a)){case Fh:i=tg;break}break;case tg:switch(e.charAt(a)){case this.delimiter:s.push(e.substring(r,a-1)),i=Xl,r=a+1;break;case Fh:i=Lh;break;default:i=Ev;break}break;case Ev:switch(e.charAt(a)){case Fh:i=Lh;break}break}if(i===tg?s.push(e.substring(r,o-1)):s.push(e.substring(r)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}class vw extends Ut{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new vw(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const s=await this.getAudioData();if(this.includeSpectrogram){const r=this.flattenQueue(s.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const r=this.flattenQueue(s.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let s=0;return new Promise(r=>{const o=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++s===this.numFrames&&(clearInterval(o),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((r,o)=>s.set(r,o*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(K(t));return s.set(e,s.length-e.length),Un(s,t)}}class $w extends Ut{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=cn([0],"int32"),this.webcamConfig.centerCrop){const s=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,o=(1-s)/2,i=(1-r)/2,a=o+s,l=r+i;this.cropBox=uo([i,o,l,a],[1,4])}else this.cropBox=uo([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const s=new $w(e,t);return await s.start(),s}async start(){this.webcamConfig.facingMode&&N(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=QI(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return U(()=>{const t=on(he(e,"float32"),0);let s;s=ar.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=s.shape;return P(s,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class gT{}class yT extends Ut{split(e){return new bH(this,e)}}class bH extends yT{constructor(e,t){super(),this.upstream=e,this.impl=new xH(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class xH extends ww{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const s of t.slice(0,-1))this.outputQueue.push(s);return this.carryover=t[t.length-1],!0}}class wH extends Ut{decodeUTF8(){return new vH(this)}}class vH extends yT{constructor(e){super(),this.upstream=e,this.impl=new $H(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class $H extends ww{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let s;return H().get("IS_BROWSER")?s=this.decoder.decode(t,{stream:!0}):s=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(s),!0}}class bT extends wH{constructor(e,t={}){super(),this.file=e,this.options=t,N(e instanceof Uint8Array||(H().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,s)=>{const r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,r)));else{const o=new FileReader;o.onload=a=>{let l=o.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return s(new TypeError("FileReader returned unknown type."));t(l)},o.onabort=a=>s(new Error("Aborted")),o.onerror=a=>s(new Error(a.type));const i=this.file.slice(this.offset,r);o.readAsArrayBuffer(i)}this.offset=r}),done:!1}}}async function IH(n,e={},t){let s,r;typeof n=="string"?s=n:(s=n.url,r=CH(n));const o=await(t||EI)(s,r);if(o.ok){const i=new Uint8Array(await o.arrayBuffer());return new bT(i,e)}else throw new Error(o.statusText)}const CH=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});function xT(n){return typeof n=="string"&&n.slice(0,7)==="file://"}class wT extends gT{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(xT(this.input)&&H().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new bT(this.input,this.options)}}class vT extends gT{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return xT(this.url)?new wT(this.url,this.fileOptions).iterator():IH(this.url,this.fileOptions)}}function SH(n,e={}){return new mT(new vT(n),e)}function NH(n){const e=xw(n);return zn(async()=>e)}function TH(n){return zn(async()=>{const e=await n();return xw(()=>e.next())})}async function kH(n,e){return $w.create(n,e)}async function EH(n){return vw.create(n)}const $T="4.1.0";const _H=Object.freeze(Object.defineProperty({__proto__:null,array:fH,Dataset:Fl,zip:mH,CSVDataset:mT,TextLineDataset:fT,csv:SH,func:NH,generator:TH,microphone:EH,webcam:kH,FileDataSource:wT,URLDataSource:vT,version_data:$T},Symbol.toStringTag,{value:"Module"}));function $e(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}const AH=Mf;class Cm extends ep{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Gy(this,_s())}nextDataId(){return Cm.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&Qn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&ir(s[0])){const o=s.map(i=>cr(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Fr(r,o)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>_r(r));return ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,t)}makeOutput(e,t,s){return _s().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=qt();return e(),{kernelMs:qt()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){$e([e],"where");const t=this.readSync(e.dataId);return AH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Cm.nextDataId=0;function IT(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const RH=n=>{const{x:e}=n.inputs,t=n.backend;$e(e,"abs");let s=new Float32Array(K(e.shape));const r=t.data.get(e.dataId).values;return s=IT(r),t.makeOutput(s,e.shape,e.dtype)},DH={kernelName:Ac,backendName:"cpu",kernelFunc:RH};function Dt(n){return(e,t,s,r,o)=>{const i=Oe(e,t),a=i.length,l=Te(i),c=K(i),u=Mt(o,c),h=e.length,d=t.length,p=Te(e),f=Te(t),m=ui(e,i),g=ui(t,i);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const b=Ii(y,a,l),w=b.slice(-h);m.forEach(I=>w[I]=0);const x=zs(w,h,p),$=b.slice(-d);g.forEach(I=>$[I]=0);const S=zs($,d,f);u[y]=n(s[x],r[S])}return[u,i]}}function Bn(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}const OH={kernelName:cp,backendName:"cpu",kernelFunc:Bn};function Rd(n,e,t="float32"){if(t==="complex64"){const r=Rd(n,e,"float32"),o=Rd(n,e,"float32");return Bn({inputs:{real:r,imag:o},backend:n})}const s=Zt(K(e),t);return n.makeTensorInfo(e,t,s)}function gr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FH={kernelName:Ga,backendName:"cpu",kernelFunc:gr};function xi(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const LH={kernelName:Vp,backendName:"cpu",kernelFunc:xi};function CT(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=So([0],t),[o,i]=Dt((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Co(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return gr({inputs:{x:r},backend:t});const u=Rd(t,r.shape,r.dtype),h=Co({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),d=Bn({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const u=xi({inputs:{input:r},backend:t}),h=Co({inputs:{x:u},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(u),h}if(!qy(r.dtype,o)){const u=gr({inputs:{x:r},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,l,c]=CT(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,c)}const PH={kernelName:Aa,backendName:"cpu",kernelFunc:Co};function jt(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;$e([i,a],n);const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=i.dtype==="string"?mi(c):c,d=i.dtype==="string"?mi(u):u,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=Co({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Co({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(y.dataId).values,x=l.data.get(b.dataId).values,[$,S,I]=t(i.shape,a.shape,p,f,w,x),C=l.makeTensorInfo(I,"float32",$),k=l.makeTensorInfo(I,"float32",S),E=Bn({inputs:{real:C,imag:k},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(k),E}else{const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function Iw(n){return(e,t,s,r,o,i)=>{const a=Oe(e,t),l=K(a),c=a.length,u=Te(a),h=Mt("float32",l),d=Mt("float32",l),p=ui(e,a),f=ui(t,a),m=Fr(s,r),g=Fr(o,i),y=e.length,b=Te(e),w=t.length,x=Te(t);if(p.length+f.length===0)for(let $=0;$<h.length;$++){const S=$%m.length,I=$%g.length,C=n(m[S*2],m[S*2+1],g[I*2],g[I*2+1]);h[$]=C.real,d[$]=C.imag}else for(let $=0;$<h.length;$++){const S=Ii($,c,u),I=S.slice(-y);p.forEach(_=>I[_]=0);const C=zs(I,y,b),k=S.slice(-w);f.forEach(_=>k[_]=0);const E=zs(k,w,x),A=n(m[C*2],m[C*2+1],g[E*2],g[E*2+1]);h[$]=A.real,d[$]=A.imag}return[h,d,a]}}const ST=Dt((n,e)=>n+e),zH=Iw((n,e,t,s)=>({real:n+t,imag:e+s})),da=jt(Ci,ST,zH),MH={kernelName:Ci,backendName:"cpu",kernelFunc:da};function Cw(n,e,t,s,r){const o=K(s),i=Zt(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function NT(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=ze([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?i.set(1,a,c):e.size>0?i.set(i.get(a,c)+e.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}function Ao(n){return(e,t,s)=>{const r=Mt(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}function st(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if($e(i,n),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,c=K(i.shape),u=t||i.dtype,h=Ct(u,c);for(let d=0;d<c;++d)h[d]=e(l[d],r);return a.makeTensorInfo(i.shape,u,h)}}function Ll(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if($e(i,n),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=o,l=a.data.get(i.dataId).values,c=t||i.dtype,u=e(l,c,r);return a.makeTensorInfo(i.shape,c,u)}}const TT=Ao(n=>Math.ceil(n)),BH=Ll(Ra,TT),VH={kernelName:Ra,backendName:"cpu",kernelFunc:BH};function kT(n,e,t,s){const r=Ct(t,K(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=K(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?mi(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const u=c*e[1]+o;for(let h=0;h<i.shape[1];++h)r[u+h]=a[l++]}o+=i.shape[1]})}return r}const ET=Dt((n,e)=>n===e?1:0),_T=jt(qc,ET,null,"bool"),WH={kernelName:qc,backendName:"cpu",kernelFunc:_T};const AT=Ao(n=>Math.exp(n)),RT=Ll(Ma,AT,"float32"),UH={kernelName:Ma,backendName:"cpu",kernelFunc:RT};const DT=Ao(n=>Math.expm1(n)),GH=Ll(Ba,DT),HH={kernelName:Ba,backendName:"cpu",kernelFunc:GH};const OT=Ao(n=>Math.floor(n)),jH=Ll(Va,OT),qH={kernelName:Va,backendName:"cpu",kernelFunc:jH};function FT(n,e,t,s,r,o,i,a,l){const c=ze([s,o],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[u*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<o;p++)c.values[u*o+p]=e.get(...e.indexToLoc(d*o+p))}return c}function LT(n,e,t){const s=ze(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],c=e.locToIndex([a,l]);i[2]=e.values[c];const u=n.locToIndex(i);0<=u&&u<n.values.length&&(s.values[r]=n.values[u])}return s}const PT=Dt((n,e)=>n>e?1:0),KH=jt(Zc,PT,null,"bool"),XH={kernelName:Zc,backendName:"cpu",kernelFunc:KH};const zT=Dt((n,e)=>n>=e?1:0),YH=jt(Ua,zT,null,"bool"),ZH={kernelName:Ua,backendName:"cpu",kernelFunc:YH};const MT=Dt((n,e)=>n<e?1:0),JH=jt(Qc,MT,null,"bool"),QH={kernelName:Qc,backendName:"cpu",kernelFunc:JH};const BT=Dt((n,e)=>n<=e?1:0),ej=jt(eu,BT,null,"bool"),tj={kernelName:eu,backendName:"cpu",kernelFunc:ej};function VT(n,e,t){const s=(e-n)/(t-1),r=Zt(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}const WT=Ao(n=>Math.log(n)),nj=Ll(Ka,WT),sj={kernelName:Ka,backendName:"cpu",kernelFunc:nj};function UT(n,e,t,s){const r=Mt(s,K(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let l=0;l<e;++l){const c=n[i+l];(Number.isNaN(c)||c>a)&&(a=c)}r[o]=a}return r}const GT=Dt((n,e)=>Math.max(n,e)),rj=jt(Ya,GT),oj={kernelName:Ya,backendName:"cpu",kernelFunc:rj};const HT=Dt((n,e)=>Math.min(n,e)),ij=jt(Za,HT),aj={kernelName:Za,backendName:"cpu",kernelFunc:ij};const Sw=Dt((n,e)=>n*e),lj=Iw((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Sm=jt(Qa,Sw,lj),cj={kernelName:Qa,backendName:"cpu",kernelFunc:Sm};function jT(n,e,t){const s=Mr(-1,t);return Sw([],e,s,n,t)}function uj(n){const{inputs:e,backend:t}=n,{x:s}=e;$e(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=jT(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const hj={kernelName:hu,backendName:"cpu",kernelFunc:uj};const qT=Dt((n,e)=>n!==e?1:0),dj=jt(du,qT,null,"bool"),pj={kernelName:du,backendName:"cpu",kernelFunc:dj};function Nw(n,e,t,s,r){const o=e.length,i=K(e),a=Te(e),l=Te(r),c=Mt(t,K(r));for(let u=0;u<i;++u){const h=Ii(u,o,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=zs(d,o,l);c[p]=n[u]}return c}function On(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;$e(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,c=Nw(l,r.shape,r.dtype,o,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const fj={kernelName:ei,backendName:"cpu",kernelFunc:On};function KT(n,e,t,s){const[r,o]=Ht(n,s),i=_n(e,"int32"),a=Zt(K(r),i),l=K(o);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=t[u+d];a[c]=h}return{outVals:a,outShape:r,outDtype:i}}function mj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;$e(r,"prod");const a=r.shape.length,l=Ve(o,r.shape),c=It(l,a);let u=l,h=r;const d=[];c!=null&&(h=On({inputs:{x:r},backend:t,attrs:{perm:c}}),d.push(h),u=Tt(u.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=KT(h.shape,h.dtype,p,u);let y=m;return i&&(y=Nt(m,l)),d.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,g,f)}const gj={kernelName:bu,backendName:"cpu",kernelFunc:mj};function yj(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Ii(r,e.length,Te(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function bj(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function xj(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);bj(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[u];for(let y=u;y<h;++y)a[f].push(p[y+1]+g)}u=p[u],h=p[h]}h!==u&&(r.push([u,h]),o+=h-u)}return{outSplits:a,valueSlices:r,numValues:o}}function wj(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Ct("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}function _v(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function vj(n,e,t,s,r,o){const i=_v(e,2)[1],a=_v(o,2)[1];let l=0;for(const c of t)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)r[l*a+h]=n[u*i+h];++l}}function $j(n,e,t,s,r){const o=e.slice();o[0]=r;const i=Ct(t,K(o)),a=n.length,l=a===0?0:a/e[0];return vj(n,e,s,l,i,o),[i,o]}function XT(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(yj(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=xj(o,i,n,c),p=wj(u),f=$j(t,s,r,h,d);return[p,f[0],f[1]]}const Av=2147483647;function YT(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,c=i.length===0,u=[];a||u.push(e[0]),l||u.push(r[0]),c||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=Ct("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const y=a?n[0]:n[g],b=l?s[0]:s[g],w=c?o[0]:o[g];if(w===0)throw new Error("Requires delta != 0");let x;if(w>0&&b<y||w<0&&b>y)x=0;else if(x=Math.ceil(Math.abs((b-y)/w)),x>Av)throw new Error(`Requires ((limit - start) / delta) <= ${Av}`);d[g+1]=d[g]+x}const p=d[h],f=Ct(t,p);let m=0;for(let g=0;g<h;++g){const y=d[g+1]-d[g];let b=a?n[0]:n[g];const w=c?o[0]:o[g];for(let x=0;x<y;++x)f[m++]=b,b+=w}return[d,f]}var ds=Rs;class Dd{constructor(e,t,s,r,o,i,a,l,c,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=vS(u),this.raggedRank=$S(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ds.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ds.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ds.VALUE_ROWIDS:return Dd.getMaxWidthValueRowID(t);case ds.ROW_SPLITS:return Dd.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ds[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Dv(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;IS(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=wS(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return N(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let c=Math.min(r,l),u=t[a];u===-1&&(c=0);for(let h=0;h<c;++h)i.push(u),u+=s;for(let h=0;h<l-c;++h)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];i.push(c);for(let u=1;u<o;++u){const h=e[u];if(h===l)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}i.push(c)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case ds.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case ds.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${ds[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ds.FIRST_DIM_SIZE:return e[0];case ds.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ds.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ds[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=Dv(s,!1),i=Ct(this.valuesDType,K(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=K(a),c=t.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;U(()=>{const m=P(u,f);u=ni(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let m=f<c?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=o.subarray(h*l),y=i.subarray(d*l),b=(p-d)*l;Rv(y,g,b)}if(f>=c){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*l);Rv(g,u,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function Rv(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function Dv(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function ZT(n,e,t,s,r,o,i,a,l,c){return new Dd(n,e,t,s,r,o,i,a,l,c).compute()}function JT(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return Zt(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Zt(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}const QT=Ao(n=>1/Math.sqrt(n)),Ij=Ll(ol,QT),Cj={kernelName:ol,backendName:"cpu",kernelFunc:Ij};function Gi(n,e,t,s,r,o,i,a,l,c){const u=[s/r,r],h=n.values,d=e.values;if(s===0)return ze(t,e.dtype);const p=ze(u,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<i;y++){const b=h[f*i+y];m.push(b),g+=b*a[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)c?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=e.rank===0?d[0]:d[f*r+y]}return p}const Sj=Ao(n=>1/(1+Math.exp(-n))),ek=st(ul,n=>1/(1+Math.exp(-n))),Nj={kernelName:ul,backendName:"cpu",kernelFunc:ek};function tk(n,e,t,s,r){const o=yb(s,e,t),i=K(t),a=Te(s);if(o){const h=bb(e,a);return r==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const l=r==="string"?mi(n):n,c=ze(s,r,l),u=ze(t,r);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,m)=>f+e[m]);u.set(c.get(...p),...d)}return r==="string"?US(u.values):u.values}function wi(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;$e(r,"slice");const[a,l]=df(r,o,i);mb(r,a,l);const c=t.data.get(r.dataId).values,u=tk(c,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,u)}const Tj={kernelName:Cu,backendName:"cpu",kernelFunc:wi};function nk(n,e,t,s,r,o,i){const a=e[0],l=o[0],c=new Array(l),u=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(_S(a));const g=Ct(t,0),y=Ct(r,0);return[g,[0,h],y,c,u]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const y=n[g*h];if(y<0)throw new Error(AS(g,y));if(y>=l)throw new Error(RS(g,y,l));++f[y],d=d&&y>=p,p=y}let m=!0;for(let g=0;g<l;++g){const y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,y=s;for(let b=0;b<a;++b)u[b]=b;return[g,[a,h],y,c,u]}else{const g=f[l-1],y=Ct(t,g*h),b=Ct(r,g),w=new Array(l).fill(0);for(let x=0;x<a;++x){const $=n[x*h],S=w[$],I=($===0?0:f[$-1])+S;w[$]++;for(let C=0;C<h;++C)y[I*h+C]=n[x*h+C];b[I]=s[x],u[x]=I}for(let x=0;x<l;++x)if(w[x]===0){const S=x===0?0:f[x-1];y[S*h+0]=x;for(let I=1;I<h;++I)y[S*h+I]=0;b[S]=i}return[y,[g,h],b,c,u]}}function sk(n,e,t,s,r){const o=K(s),i=e[0],a=r.length,l=[];let c=1,u=-1;for(let g=0;g<a;++g){const y=r[g];if(y===-1){if(u!==-1)throw new Error(DS(u,g));u=g,l.push(1)}else{if(y<0)throw new Error(OS(g,y));c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error(FS());const g=Math.trunc(o/c);if(c*g!==o)throw new Error(LS(s,l));l[u]=g}if(K(l)!==o)throw new Error(PS(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=Ct(t,i*a);for(let g=0;g<i;++g){let y=0;for(let b=0;b<d;++b)y+=n[g*d+b]*p[b];for(let b=0;b<a;++b)m[g*a+b]=Math.trunc(y/f[b]),y%=f[b]}return[m,[i,a],l]}function Tw(n,e,t,s,r,o=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],c=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(qg());const d=e.slice();d[0]=h;const p=d.reduce((w,x)=>w*x,1),f=Ct(t,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(qg());let m=0,g=1,y=0,b=r[m];for(;;){let w=0;if(g<a){if(w=r[g],b===w){++g;continue}if(b>=w)throw new Error(zS())}if(b<0||b>=h)throw new Error(MS(b,h));b>y&&f.fill(i,y*c,b*c);for(let x=m;x<g;++x){const $=s[x];if($<0||$>=l[0])throw new Error(BS(x,s[x],l[0]));for(let S=0;S<c;S++)f[b*c+S]+=n[$*c+S]}if(o)for(let x=0;x<c;x++)f[b*c+x]/=g-m;if(m=g,++g,y=b+1,b=w,g>a)break}return y<h&&f.fill(i,y*c,h*c),[f,d]}const kj=Ao(n=>Math.sqrt(n)),Ej=st(dl,n=>Math.sqrt(n)),_j={kernelName:dl,backendName:"cpu",kernelFunc:Ej};const rk=Dt((n,e)=>{const t=n-e;return t*t}),Aj=jt(pl,rk),Rj={kernelName:pl,backendName:"cpu",kernelFunc:Aj};function ok(n,e,t,s){const r=ze(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];r.set(e.get(...a),...i)}return r}class Dj{constructor(e,t,s,r,o,i){this.separator=cr(e),this.nGramWidths=t,this.leftPad=cr(s),this.rightPad=cr(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),c=Math.max(0,l-a),u=Math.max(0,l-(o-(a+1))),h=i-(c+u),d=t+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let b=0;b<h;++b)p+=e[d+b].length;p+=u*this.rightPad.length;const f=c+u+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const y=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<c;++b)y(this.leftPad),y(this.separator);for(let b=0;b<h-1;++b)y(e[d+b]),y(this.separator);if(h>0){y(e[d+h-1]);for(let b=0;b<u;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<u-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let u=t[c]>=l;if(u=u&&t[c]<=s,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=Ct("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=o;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const c=t[l]-t[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}const a=new Array(i[o]);for(let l=0;l<o;++l){const c=t[l];let u=i[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,c,a,u,p,h),u+=p}),this.preserveShort&&u===i[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,c,a,u,p,d)}}return[a,i]}}function ik(n,e,t,s,r,o,i,a){return new Dj(t,s,r,o,i,a).compute(n,e)}function Oj(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}function ak(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;Oj(n[d],e,t,r);const f=r.length-p;a[d]=f,o+=f,i=Math.max(i,f)}const l=Ct("int32",o*2),c=new Array(o),u=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,c[h]=r[h],++h;return[l,c,u]}function lk(n,e){const t=Ct("int32",n.length);for(let s=0;s<n.length;++s)t[s]=kI(n[s]).modulo(e).getLowBitsUnsigned();return t}const ck=Dt((n,e)=>n-e),Fj=Iw((n,e,t,s)=>({real:n-t,imag:e-s})),kw=jt(fl,ck,Fj),Lj={kernelName:fl,backendName:"cpu",kernelFunc:kw};function uk(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=ze(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}const ec=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function hk(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*u/a+h)),p=Math.min(s,Math.floor(e+(a-l)*u/a+h));hk(n,e,d,p)}const r=n[e];let o=t,i=s;for(Sr(n,t,e),ec(n[s],r)>0&&Sr(n,t,s);o<i;){for(Sr(n,o,i),o++,i--;ec(n[o],r)<0;)o=o+1;for(;ec(n[i],r)>0;)i=i-1}ec(n[t],r)===0?Sr(n,t,i):(i=i+1,Sr(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function dk(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],l=Mt(t,i*s),c=Mt("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,w)=>f[w]={value:b,index:w}),s<f.length&&(hk(f,s),f=f.slice(0,s)),r&&f.sort(ec);const m=h*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,y[b]=f[b].index}const u=e.slice();return u[u.length-1]=s,[ze(u,t,l),ze(u,"int32",c)]}function pk(n,e,t,s){const r=Ve(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const i={},a=new Int32Array(t[r]),l=new Lt(o,s,n),c=[],u=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(u)m=n[f].toString();else{const g=[];for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)g.push(l.get(y,f,b));m=g.join(",")}if(i[m]!==void 0)a[f]=i[m];else{const g=Object.keys(i).length;i[m]=g,a[f]=g,c.push(f)}}const h=o.slice();h[1]=Object.keys(i).length;const d=new Lt(h,s);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)d.set(l.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}const Pj=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:IT,addImpl:ST,bincountImpl:Cw,bincountReduceImpl:NT,castImpl:CT,ceilImpl:TT,concatImpl:kT,equalImpl:ET,expImpl:AT,expm1Impl:DT,floorImpl:OT,gatherNdImpl:FT,gatherV2Impl:LT,greaterImpl:PT,greaterEqualImpl:zT,lessImpl:MT,lessEqualImpl:BT,linSpaceImpl:VT,logImpl:WT,maxImpl:UT,maximumImpl:GT,minimumImpl:HT,multiplyImpl:Sw,negImpl:jT,notEqualImpl:qT,prodImpl:KT,raggedGatherImpl:XT,raggedRangeImpl:YT,raggedTensorToTensorImpl:ZT,rangeImpl:JT,rsqrtImpl:QT,scatterImpl:Gi,sigmoidImpl:Sj,sliceImpl:tk,sparseFillEmptyRowsImpl:nk,sparseReshapeImpl:sk,sparseSegmentReductionImpl:Tw,sqrtImpl:kj,squaredDifferenceImpl:rk,stridedSliceImpl:ok,stringNGramsImpl:ik,stringSplitImpl:ak,stringToHashBucketFastImpl:lk,subImpl:ck,tileImpl:uk,topKImpl:dk,transposeImpl:Nw,uniqueImpl:pk},Symbol.toStringTag,{value:"Module"}));const zj="4.1.0";hb("cpu",()=>new Cm,1);const fk=st(Pa,n=>n>=0?n:Math.exp(n)-1),Mj={kernelName:Pa,backendName:"cpu",kernelFunc:fk};function mk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;$e([r],"leakyRelu");const i=K(r.shape),a=t.data.get(r.dataId).values,l=Mt("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?o*a[c]:a[c];return t.makeTensorInfo(r.shape,"float32",l)}const Bj={kernelName:Jc,backendName:"cpu",kernelFunc:mk};const Vj=Dt((n,e)=>n<0?e*n:n);function gk(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;$e([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,l]=Vj(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(l,"float32",a)}const Wj={kernelName:yu,backendName:"cpu",kernelFunc:gk};const yk=st(nl,n=>Math.max(0,n)),Uj={kernelName:nl,backendName:"cpu",kernelFunc:yk};const bk=st(sl,n=>Math.min(Math.max(0,n),6)),Gj={kernelName:sl,backendName:"cpu",kernelFunc:bk};function Od(n,e,t,s,r){if(t==="linear")return gr({inputs:{x:e},backend:n});if(t==="relu")return yk({inputs:{x:e},backend:n});if(t==="elu")return fk({inputs:{x:e},backend:n});if(t==="relu6")return bk({inputs:{x:e},backend:n});if(t==="prelu")return gk({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return mk({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return ek({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function lt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=K(r.shape),a=jy(o,i),l=K(a);N(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const c=t.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Hj={kernelName:xu,backendName:"cpu",kernelFunc:lt};function xk(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;$e([r,o],"matMul");const l=r.shape.length,c=o.shape.length,u=i?r.shape[l-2]:r.shape[l-1],h=a?o.shape[c-1]:o.shape[c-2],d=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=K(f),y=K(m),w=Oe(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);N(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const x=i?[g,u,d]:[g,d,u],$=a?[y,p,h]:[y,h,p],S=lt({inputs:{x:r},backend:t,attrs:{shape:x}}),I=lt({inputs:{x:o},backend:t,attrs:{shape:$}}),C=i?S.shape[1]:S.shape[2],k=i?S.shape[2]:S.shape[1],E=a?I.shape[1]:I.shape[2],A=Math.max(g,y),_=t.data.get(S.dataId).values,O=t.data.get(I.dataId).values,M=Te(S.shape),W=Te(I.shape),[z,j,G]=i?[M[0],1,M[1]]:[M[0],M[1],1],[Z,se,ee]=a?[1,W[1],W[0]]:[W[1],1,W[0]],oe=k*E,ae=ze([A,k,E],S.dtype),fe=ae.values,ue=t.blockSize;for(let de=0;de<A;de++)for(let ve=0;ve<k;ve+=ue)for(let Ee=0;Ee<E;Ee+=ue)for(let Ne=0;Ne<C;Ne+=ue){const Re=Math.min(ve+ue,k),Me=Math.min(Ee+ue,E),R=Math.min(Ne+ue,C);for(let B=ve;B<Re;B++)for(let q=Ee;q<Me;q++){let J=0;for(let Y=Ne;Y<R;Y++){const ne=Math.min(de,g-1)*z,ce=Math.min(de,y-1)*ee,le=_[ne+B*j+Y*G],ie=O[Y*Z+q*se+ce];J+=le*ie}fe[de*oe+(B*E+q)]+=J}}return t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(I),t.makeTensorInfo(w,ae.dtype,ae.values)}const jj={kernelName:Pc,backendName:"cpu",kernelFunc:xk};function qj(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=xk({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:t}),i&&(p=da({inputs:{a:d,b:i},backend:t}),m.push(d),d=p),u&&(f=Od(t,d,u,a,h),m.push(d),d=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return d}const Kj={kernelName:mc,backendName:"cpu",kernelFunc:qj};const Xj=st(Ca,n=>Math.acos(n)),Yj={kernelName:Ca,backendName:"cpu",kernelFunc:Xj};const Zj=st(Sa,n=>Math.acosh(n)),Jj={kernelName:Sa,backendName:"cpu",kernelFunc:Zj};function Qj(n){const{inputs:e,backend:t}=n,s=e;$e(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=ze(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const eq={kernelName:Rc,backendName:"cpu",kernelFunc:Qj};function tq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;$e(r,"all");const a=Ve(o,r.shape);let l=a;const c=It(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Tt(l.length,r.shape.length)),tn("all",l,u.shape.length);const[h,d]=Ht(u.shape,l),p=K(d),f=Zt(K(h),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let w=m[b];for(let x=0;x<p;++x){const $=m[b+x];w=w&&$}f[y]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const y=Nt(h,a),b=lt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const nq={kernelName:sp,backendName:"cpu",kernelFunc:tq};function sq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;$e(r,"any");const a=Ve(o,r.shape);let l=a;const c=It(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Tt(l.length,r.shape.length)),tn("any",l,u.shape.length);const[h,d]=Ht(u.shape,l),p=K(d),f=Zt(K(h),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let w=m[b];for(let x=0;x<p;++x){const $=m[b+x];w=w||$}f[y]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const y=Nt(h,a),b=lt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const rq={kernelName:rp,backendName:"cpu",kernelFunc:sq};function oq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;$e(r,"argMax");let i=Ve(o,r.shape);const a=It(i,r.shape.length);let l=r;const c=[];a!=null&&(l=On({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Tt(i.length,l.shape.length)),i=[i[0]],tn("argMax",i,l.shape.length);const[u,h]=Ht(l.shape,i),d=K(u),p=Zt(d,"int32"),f=K(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],w=0;for(let x=0;x<f;++x){const $=m[y+x];$>b&&(b=$,w=x)}p[g]=w}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const iq={kernelName:Dc,backendName:"cpu",kernelFunc:oq};function aq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;$e(r,"argMin");let i=Ve(o,r.shape);const a=It(i,r.shape.length);let l=r;const c=[];a!=null&&(l=On({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Tt(i.length,l.shape.length)),i=[i[0]],tn("argMin",i,l.shape.length);const[u,h]=Ht(l.shape,i),d=K(u),p=Zt(d,"int32"),f=K(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],w=0;for(let x=0;x<f;++x){const $=m[y+x];$<b&&(b=$,w=x)}p[g]=w}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const lq={kernelName:Oc,backendName:"cpu",kernelFunc:aq};const cq=st(Na,n=>Math.asin(n)),uq={kernelName:Na,backendName:"cpu",kernelFunc:cq};const hq=st(Ta,n=>Math.asinh(n)),dq={kernelName:Ta,backendName:"cpu",kernelFunc:hq};const pq=st(ka,n=>Math.atan(n)),fq={kernelName:ka,backendName:"cpu",kernelFunc:pq};const mq=Dt((n,e)=>Math.atan2(n,e)),gq=jt(_a,mq),yq={kernelName:_a,backendName:"cpu",kernelFunc:gq};const bq=st(Ea,n=>Math.atanh(n)),xq={kernelName:Ea,backendName:"cpu",kernelFunc:bq};function Ew(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let x=0;x<r.batchSize;++x){const $=x*y,S=x*s[0];for(let I=0;I<r.inChannels;++I)for(let C=0;C<r.outHeight;++C){const k=C*i-d,E=Math.max(0,k),A=Math.min(r.inHeight,u+k),_=$+C*b;for(let O=0;O<r.outWidth;++O){const M=O*a-p,W=Math.max(0,M),z=Math.min(r.inWidth,h+M);let j=f,G=0,Z=0;for(let ee=E;ee<A;ee+=l){const oe=S+ee*s[1];for(let ae=W;ae<z;ae+=c){const fe=oe+ae*s[2],ue=n[fe+I];o==="max"&&ue>j?j=ue:o==="avg"&&(G+=ue,Z++)}if(isNaN(j))break}const se=_+O*w+I;g[se]=o==="avg"?G/Z:j}}}return m}function wk(n,e,t,s,r=!1,o=!1){const i=ze(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ze(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const w=b*a-p;let x=w;for(;x<0;)x+=c;const $=Math.min(s.inHeight,h+w);for(let S=0;S<s.outWidth;++S){const I=S*l-f;let C=I;for(;C<0;)C+=u;const k=Math.min(s.inWidth,d+I);let E=Number.NEGATIVE_INFINITY,A=-1;for(let _=x;_<$;_+=c){const O=_-w;for(let M=C;M<k;M+=u){const W=M-I,z=m.get(g,_,M,y);z>E&&(E=z,r?A=o?((g*s.inHeight+_)*s.inWidth+M)*s.inChannels+y:(_*s.inWidth+M)*s.inChannels+y:A=O*d+W)}}i.set(A,g,b,S,y)}}return i}function vk(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=ze(r.outShape,t),x=w.values,$=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let k=0;k<r.batchSize;++k){const E=k*$,A=k*s[0];for(let _=0;_<r.inChannels;++_)for(let O=0;O<r.outDepth;++O){const M=O*i-m;let W=M;for(;W<0;)W+=c;const z=Math.min(r.inDepth,d+M),j=E+O*S;for(let G=0;G<r.outHeight;++G){const Z=G*a-g;let se=Z;for(;se<0;)se+=u;const ee=Math.min(r.inHeight,p+Z),oe=j+G*I;for(let ae=0;ae<r.outWidth;++ae){const fe=ae*l-y;let ue=fe;for(;ue<0;)ue+=h;const de=Math.min(r.inWidth,f+fe),ve=oe+ae*C;let Ee=b,Ne=0,Re=0;for(let R=W;R<z;R+=c){const B=A+R*s[1];for(let q=se;q<ee;q+=u){const J=B+q*s[2];for(let Y=ue;Y<de;Y+=h){const ne=J+Y*s[3],ce=n[ne+_];if(o==="max"&&ce>Ee?Ee=ce:o==="avg"&&(Ne+=ce,Re++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}const Me=ve+_;x[Me]=o==="avg"?Ne/Re:Ee}}}}return w}function wq(n,e){const t=ze(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-d;let w=b;for(;w<0;)w+=i;const x=Math.min(e.inDepth,c+b);for(let $=0;$<e.outHeight;++$){const S=$*r-p;let I=S;for(;I<0;)I+=a;const C=Math.min(e.inHeight,u+S);for(let k=0;k<e.outWidth;++k){const E=k*o-f;let A=E;for(;A<0;)A+=l;const _=Math.min(e.inWidth,h+E);let O=Number.NEGATIVE_INFINITY,M=-1;for(let W=w;W<x;W+=i){const z=W-b;for(let j=I;j<C;j+=a){const G=j-S;for(let Z=A;Z<_;Z+=l){const se=Z-E,ee=n.get(m,W,j,Z,g);ee>=O&&(O=ee,M=z*u*h+G*u+se)}}}t.set(M,m,y,$,k,g)}}}return t}function vq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;$e(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;N(en(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Ss(r.shape,o,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&He(u.inShape,u.outShape))h=gr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Te(r.shape),f=Ew(d,r.shape,r.dtype,p,u,"avg");h=t.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const $q={kernelName:Fc,backendName:"cpu",kernelFunc:vq};function Iq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;$e(r,"avgPool3d");const u=Br(r.shape,o,i,1,a,l,c),h=t.data.get(r.dataId).values,d=vk(h,r.shape,r.dtype,Te(r.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const Cq={kernelName:Lc,backendName:"cpu",kernelFunc:Iq};function Sq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;$e([r,o],"avgPool3DGrad");const u=Br(o.shape,i,a,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,w=u.dilationWidth,x=u.effectiveFilterDepth,$=u.effectiveFilterHeight,S=u.effectiveFilterWidth,I=x-1-u.padInfo.front,C=S-1-u.padInfo.left,k=$-1-u.padInfo.top,E=ze(o.shape,"float32"),A=1/(f*m*g),_=t.bufferSync(r);for(let O=0;O<u.batchSize;++O)for(let M=0;M<u.inChannels;++M)for(let W=0;W<u.inDepth;++W)for(let z=0;z<u.inHeight;++z)for(let j=0;j<u.inWidth;++j){const G=W-I,Z=z-k,se=j-C;let ee=0;for(let oe=0;oe<x;oe+=y){const ae=(G+oe)/h;if(!(ae<0||ae>=u.outDepth||Math.floor(ae)!==ae))for(let fe=0;fe<$;fe+=b){const ue=(Z+fe)/d;if(!(ue<0||ue>=u.outHeight||Math.floor(ue)!==ue))for(let de=0;de<S;de+=w){const ve=(se+de)/p;if(ve<0||ve>=u.outWidth||Math.floor(ve)!==ve)continue;const Ee=_.get(O,ae,ue,ve,M);ee+=Ee}}}E.set(ee*A,O,W,z,j,M)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const Nq={kernelName:ip,backendName:"cpu",kernelFunc:Sq};function Tq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;$e([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Ss(i.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,w=b-1-u.padInfo.left,x=y-1-u.padInfo.top,$=ze(i.shape,"float32"),S=1/(p*f),I=t.data.get(r.dataId).values,C=ze(r.shape,"float32",I);for(let k=0;k<u.batchSize;++k)for(let E=0;E<u.inChannels;++E)for(let A=0;A<u.inHeight;++A)for(let _=0;_<u.inWidth;++_){const O=A-x,M=_-w;let W=0;for(let z=0;z<y;z+=m){const j=(O+z)/h;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let G=0;G<b;G+=g){const Z=(M+G)/d;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;const se=C.get(k,j,Z,E);W+=se}}$.set(W*S,k,A,_,E)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const kq={kernelName:op,backendName:"cpu",kernelFunc:Tq};function Eq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=e;N(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),$e([r,a,l,o,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,w=h.length;let x=0,$=0,S=0,I=0;for(let C=0;C<u.length;++C)m[C]=f[x++]+(u[C]-h[$++])*p[S++]/Math.sqrt(d[I++]+c),x>=g&&(x=0),$>=w&&($=0),S>=y&&(S=0),I>=b&&(I=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const _q={kernelName:Xc,backendName:"cpu",kernelFunc:Eq};function Aq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;$e([r],"batchToSpaceND");const a=o.reduce((y,b)=>y*b),l=Ju(r.shape,o,a),c=Qu(l.length,o.length),u=eh(r.shape,o,a),h=Tx(i,o.length),d=kx(u,i,o.length),p=lt({inputs:{x:r},backend:t,attrs:{shape:l}}),f=On({inputs:{x:p},backend:t,attrs:{perm:c}}),m=lt({inputs:{x:f},backend:t,attrs:{shape:u}}),g=wi({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Rq={kernelName:zc,backendName:"cpu",kernelFunc:Aq};function Dq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,c=Cw(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}const Oq={kernelName:ap,backendName:"cpu",kernelFunc:Dq};function Fq(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Oe(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Lq={kernelName:lp,backendName:"cpu",kernelFunc:Fq};const Pq=st(Da,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),zq={kernelName:Da,backendName:"cpu",kernelFunc:Pq};const Mq=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(K(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")},Bq={kernelName:Mc,backendName:"cpu",kernelFunc:Mq};function pa(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const Vq={kernelName:Tp,backendName:"cpu",kernelFunc:pa};function fa(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Ve(r,e[0].shape)[0],i=e.map(m=>m.shape);Cx(i,o);let a=hr(e.map(m=>m.shape),o);if(K(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>K(m.shape)>0);if(l.length===1)return gr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(x=>xi({inputs:{input:x},backend:t})),g=l.map(x=>pa({inputs:{input:x},backend:t})),y=fa({inputs:m,backend:t,attrs:{axis:o}}),b=fa({inputs:g,backend:t,attrs:{axis:o}}),w=Bn({inputs:{real:y,imag:b},backend:t});return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),g.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),w}const c=l.map(m=>{const y=[-1,K(m.shape.slice(o))];return lt({inputs:{x:m},backend:t,attrs:{shape:y}})}),u=c.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=hr(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=kT(u,a,e[0].dtype,h),p=hr(l.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Wq={kernelName:Bc,backendName:"cpu",kernelFunc:fa};function $k(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;$e([r,o],"conv2d");const h=Vr(l),d=Gt(r.shape,o.shape,i,c,a,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",x=new Lt(d.outShape,r.dtype),$=Te(r.shape),S=Te(o.shape),I=$[0],C=w?$[1]:$[2],k=w?$[2]:1,E=w?1:$[1],A=x.strides[0],_=w?x.strides[1]:x.strides[2],O=w?x.strides[2]:1,M=w?1:x.strides[1],W=t.data.get(r.dataId).values,z=t.data.get(o.dataId).values,j=x.values;for(let G=0;G<d.batchSize;++G){const Z=G*I,se=G*A;for(let ee=0;ee<d.outHeight;++ee){const oe=se+ee*_,ae=ee*d.strideHeight-b;for(let fe=0;fe<p;++fe){const ue=ae+fe*m;if(ue<0||ue>=d.inHeight)continue;const de=fe*S[0],ve=Z+ue*C;for(let Ee=0;Ee<d.outWidth;++Ee){const Ne=oe+Ee*O,Re=Ee*d.strideWidth-y;for(let Me=0;Me<f;++Me){const R=Re+Me*g;if(R<0||R>=d.inWidth)continue;const B=de+Me*S[1],q=ve+R*k;let J=B;for(let Y=0;Y<d.inChannels;++Y){const ne=W[q+Y*E];for(let ce=0;ce<d.outChannels;++ce)j[Ne+ce*M]+=ne*z[J+ce];J+=d.outChannels}}}}}}return t.makeTensorInfo(x.shape,x.dtype,j)}const Uq={kernelName:Vc,backendName:"cpu",kernelFunc:$k};function Gq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;$e([r,o],"conv2dBackpropFilter");const h=Vr(l),d=Gt(r.shape,u,i,1,a,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new Lt(d.filterShape,"float32"),w=d.padInfo.left,x=d.padInfo.top,$=t.data.get(r.dataId).values,S=t.data.get(o.dataId).values,I=new Lt(r.shape,r.dtype,$),C=new Lt(o.shape,o.dtype,S);for(let k=0;k<m;++k){const E=Math.max(0,Math.ceil((x-k)/p)),A=Math.min(d.outHeight,(d.inHeight+x-k)/p);for(let _=0;_<g;++_){const O=Math.max(0,Math.ceil((w-_)/f)),M=Math.min(d.outWidth,(d.inWidth+w-_)/f);for(let W=0;W<d.inChannels;++W)for(let z=0;z<d.outChannels;++z){let j=0;for(let G=0;G<d.batchSize;++G)for(let Z=E;Z<A;++Z){const se=k+Z*p-x;for(let ee=O;ee<M;++ee){const oe=_+ee*f-w;y?j+=I.get(G,se,oe,W)*C.get(G,Z,ee,z):j+=I.get(G,W,se,oe)*C.get(G,z,Z,ee)}}b.set(j,k,_,W,z)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const Hq={kernelName:up,backendName:"cpu",kernelFunc:Gq};function jq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;$e([r,o],"conv2dBackpropInput");const h=Te(o.shape),d=Te(r.shape);let p=Vr(c);const f=Gt(i,o.shape,a,1,l,u,!1,p),m=new Lt(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,b=t.data.get(o.dataId).values,[w,x,$]=h,{batchSize:S,filterHeight:I,filterWidth:C,inChannels:k,inHeight:E,inWidth:A,outChannels:_,outHeight:O,outWidth:M,strideHeight:W,strideWidth:z}=f;p=f.dataFormat;const j=I-1-f.padInfo.top,G=C-1-f.padInfo.left,Z=p==="channelsLast",se=m.strides[0],ee=Z?m.strides[1]:m.strides[2],oe=Z?m.strides[2]:1,ae=Z?1:m.strides[1],fe=d[0],ue=Z?d[1]:d[2],de=Z?d[2]:1,ve=Z?1:d[1];for(let Ee=0;Ee<S;++Ee)for(let Ne=0;Ne<k;++Ne)for(let Re=0;Re<E;++Re){const Me=Re-j,R=Math.max(0,Math.ceil(Me/W)),B=Math.min(O,(I+Me)/W);for(let q=0;q<A;++q){const J=q-G,Y=Math.max(0,Math.ceil(J/z)),ne=Math.min(M,(C+J)/z);let ce=0;for(let ie=R;ie<B;++ie){const re=ie*W-Me;for(let xe=Y;xe<ne;++xe){const be=xe*z-J,Ie=fe*Ee+ue*ie+de*xe,_e=w*(I-1-re)+x*(C-1-be)+$*Ne;for(let Fe=0;Fe<_;++Fe){const Xe=y[Ie+ve*Fe],je=b[_e+Fe];ce+=Xe*je}}}const le=se*Ee+ee*Re+oe*q+ae*Ne;g[le]=ce}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const qq={kernelName:Wc,backendName:"cpu",kernelFunc:jq};function Kq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;$e([r,o],"conv3d");const c=To(r.shape,o.shape,i,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,w=g.top,x=new Lt(c.outShape,r.dtype),$=t.data.get(r.dataId).values,S=t.data.get(o.dataId).values,I=x.values,C=Te(r.shape),k=Te(o.shape);for(let E=0;E<c.batchSize;++E){const A=E*C[0],_=E*x.strides[0];for(let O=0;O<c.outDepth;++O){const M=_+O*x.strides[1],W=O*c.strideDepth-y;for(let z=0;z<u;++z){const j=W+z*p;if(j<0||j>=c.inDepth)continue;const G=z*k[0],Z=A+j*C[1];for(let se=0;se<c.outHeight;++se){const ee=M+se*x.strides[2],oe=se*c.strideHeight-w;for(let ae=0;ae<h;++ae){const fe=oe+ae*f;if(fe<0||fe>=c.inHeight)continue;const ue=G+ae*k[1],de=Z+fe*C[2];for(let ve=0;ve<c.outWidth;++ve){const Ee=ee+ve*c.outChannels,Ne=ve*c.strideWidth-b;for(let Re=0;Re<d;++Re){const Me=Ne+Re*m;if(Me<0||Me>=c.inWidth)continue;const R=ue+Re*k[2],B=de+Me*c.inChannels;let q=R;for(let J=0;J<c.inChannels;++J){const Y=$[B+J];for(let ne=0;ne<c.outChannels;++ne)I[Ee+ne]+=Y*S[q+ne];q+=c.outChannels}}}}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const Xq={kernelName:Uc,backendName:"cpu",kernelFunc:Kq};function Yq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;$e([r,o],"conv3dBackpropFilterV2");const c=Te(r.shape),u=Te(o.shape),h=To(r.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Lt(h.filterShape,"float32"),w=b.values,[x,$,S,I]=b.strides,C=t.data.get(o.dataId).values,[k,E,A,_]=u,O=t.data.get(r.dataId).values,[M,W,z,j]=c,G=h.padInfo.front,Z=h.padInfo.left,se=h.padInfo.top;for(let ee=0;ee<m;++ee){const oe=Math.max(0,Math.ceil((G-ee)/d)),ae=Math.min(h.outDepth,(h.inDepth+G-ee)/d),fe=ee*x;for(let ue=0;ue<g;++ue){const de=Math.max(0,Math.ceil((se-ue)/p)),ve=Math.min(h.outHeight,(h.inHeight+se-ue)/p),Ee=ue*$+fe;for(let Ne=0;Ne<y;++Ne){const Re=Math.max(0,Math.ceil((Z-Ne)/f)),Me=Math.min(h.outWidth,(h.inWidth+Z-Ne)/f),R=Ne*S+Ee;for(let B=0;B<h.inChannels;++B){const q=B*I+R;for(let J=0;J<h.outChannels;++J){let Y=0;for(let ne=0;ne<h.batchSize;++ne){const ce=ne*M,le=ne*k;for(let ie=oe;ie<ae;++ie){const xe=(ee+ie*d-G)*W+ce,be=ie*E+le;for(let Ie=de;Ie<ve;++Ie){const Fe=(ue+Ie*p-se)*z+xe,Xe=Ie*A+be;for(let je=Re;je<Me;++je){const Cn=(Ne+je*f-Z)*j+Fe,Xs=je*_+Xe;Y+=O[Cn+B]*C[Xs+J]}}}}w[q+J]=Y}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const Zq={kernelName:hp,backendName:"cpu",kernelFunc:Yq};function Jq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;$e([r],"conv3dBackpropInputV2");const c=Te(r.shape),u=Te(o.shape),h=To(l,o.shape,a,1,i),d=new Lt(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=t.data.get(r.dataId).values,[w,x,$,S]=c,I=t.data.get(o.dataId).values,[C,k,E,A]=u,{batchSize:_,filterDepth:O,filterHeight:M,filterWidth:W,inChannels:z,inDepth:j,inHeight:G,inWidth:Z,outChannels:se,outDepth:ee,outHeight:oe,outWidth:ae,strideDepth:fe,strideHeight:ue,strideWidth:de}=h,ve=O-1-h.padInfo.front,Ee=M-1-h.padInfo.top,Ne=W-1-h.padInfo.left;for(let Re=0;Re<_;++Re)for(let Me=0;Me<z;++Me)for(let R=0;R<j;++R){const B=R-ve,q=Math.max(0,Math.ceil(B/fe)),J=Math.min(ee,(O+B)/fe);for(let Y=0;Y<G;++Y){const ne=Y-Ee,ce=Math.max(0,Math.ceil(ne/ue)),le=Math.min(oe,(M+ne)/ue);for(let ie=0;ie<Z;++ie){const re=ie-Ne,xe=Math.max(0,Math.ceil(re/de)),be=Math.min(ae,(W+re)/de);let Ie=0;for(let _e=q;_e<J;++_e){const Fe=_e*fe-B;for(let Xe=ce;Xe<le;++Xe){const je=Xe*ue-ne;for(let ut=xe;ut<be;++ut){const Cn=ut*de-re,Xs=w*Re+x*_e+$*Xe+S*ut,xh=C*(O-1-Fe)+k*(M-1-je)+E*(W-1-Cn)+A*Me;for(let Ys=0;Ys<se;++Ys){const wh=b[Xs+Ys],Sn=I[xh+Ys];Ie+=wh*Sn}}}}p[f*Re+m*R+g*Y+y*ie+Me]=Ie}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const Qq={kernelName:dp,backendName:"cpu",kernelFunc:Jq};const e6=st(Oa,n=>Math.cos(n)),t6={kernelName:Oa,backendName:"cpu",kernelFunc:e6};const n6=st(Fa,n=>Math.cosh(n)),s6={kernelName:Fa,backendName:"cpu",kernelFunc:n6};function r6(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,p]=r.shape,f=o.shape[0],[m,g]=a,y=ze([f,m,g,p],"float32"),b=t.data.get(o.dataId).values,w=t.data.get(i.dataId).values,x=t.data.get(r.dataId).values,$=Te(r.shape),S=Te(y.shape);for(let I=0;I<f;I++){const C=I*4,k=b[C],E=b[C+1],A=b[C+2],_=b[C+3],O=w[I];if(O>=u)continue;const M=m>1?(A-k)*(h-1)/(m-1):0,W=g>1?(_-E)*(d-1)/(g-1):0;for(let z=0;z<m;z++){const j=m>1?k*(h-1)+z*M:.5*(k+A)*(h-1);if(j<0||j>h-1){for(let G=0;G<g;G++)for(let Z=0;Z<p;Z++){const se=Z+G*S[2]+z*S[1]+I*S[0];y.values[se]=c}continue}if(l==="bilinear"){const G=Math.floor(j),Z=Math.ceil(j),se=j-G;for(let ee=0;ee<g;ee++){const oe=g>1?E*(d-1)+ee*W:.5*(E+_)*(d-1);if(oe<0||oe>d-1){for(let de=0;de<p;de++){const ve=de+ee*S[2]+z*S[1]+I*S[0];y.values[ve]=c}continue}const ae=Math.floor(oe),fe=Math.ceil(oe),ue=oe-ae;for(let de=0;de<p;de++){let ve=de+ae*$[2]+G*$[1]+O*$[0];const Ee=x[ve];ve=de+fe*$[2]+G*$[1]+O*$[0];const Ne=x[ve];ve=de+ae*$[2]+Z*$[1]+O*$[0];const Re=x[ve];ve=de+fe*$[2]+Z*$[1]+O*$[0];const Me=x[ve],R=Ee+(Ne-Ee)*ue,B=Re+(Me-Re)*ue;ve=de+ee*S[2]+z*S[1]+I*S[0],y.values[ve]=R+(B-R)*se}}}else for(let G=0;G<g;++G){const Z=g>1?E*(d-1)+G*W:.5*(E+_)*(d-1);if(Z<0||Z>d-1){for(let oe=0;oe<p;oe++){const ae=oe+G*S[2]+z*S[1]+I*S[0];y.values[ae]=c}continue}const se=Math.round(Z),ee=Math.round(j);for(let oe=0;oe<p;oe++){const ae=oe+se*$[2]+ee*$[1]+O*$[0],fe=oe+G*S[2]+z*S[1]+I*S[0];y.values[fe]=x[ae]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const o6={kernelName:fp,backendName:"cpu",kernelFunc:r6};function i6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;$e(r,"cumprod");const l=It([o],r.shape.length);let c=r;l!=null&&(c=On({inputs:{x:r},backend:t,attrs:{perm:l}}));const u=Tt(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=_n(c.dtype,"int32"),d=np(K(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const w=m(y,b);if(b===0)d[w]=i?1:p[w];else{const x=m(y,b-1);d[w]=i?p[x]*d[x]:p[w]*d[x]}}const g=t.makeTensorInfo(c.shape,h,d);if(l!=null){const y=ko(l),b=On({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const a6={kernelName:pp,backendName:"cpu",kernelFunc:i6};function l6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;$e(r,"cumsum");const l=It([o],r.shape.length);let c=r;l!=null&&(c=On({inputs:{x:r},backend:t,attrs:{perm:l}}));const u=Tt(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=_n(c.dtype,"int32"),d=Zt(K(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const w=m(y,b);if(b===0)d[w]=i?0:p[w];else{const x=m(y,b-1);d[w]=i?p[x]+d[x]:p[w]+d[x]}}const g=t.makeTensorInfo(c.shape,h,d);if(l!=null){const y=ko(l),b=On({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const c6={kernelName:Gc,backendName:"cpu",kernelFunc:l6};function u6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,u=Cw(l,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(o),u=NT(l,c,i,a);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const h6={kernelName:mp,backendName:"cpu",kernelFunc:u6};function d6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;N(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],h=l*o,d=c*o,p=u/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let y=0;y<a;++y)for(let b=0;b<h;++b){const w=Math.floor(b/o),x=b%o;for(let $=0;$<d;++$){const S=Math.floor($/o),I=$%o,C=(x*o+I)*p;for(let k=0;k<p;++k){const A=k+C+u*(S+c*(w+l*y));m[g++]=f[A]}}}return t.makeTensorInfo([a,h,d,p],r.dtype,m)}const p6={kernelName:gp,backendName:"cpu",kernelFunc:d6};function Ik(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;$e([r,o],"depthwiseConv2DNative");const u=Te(r.shape),h=Te(o.shape);let d=l;d==null&&(d=[1,1]),N(en(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=Gt(r.shape,o.shape,i,d,a,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,w=b.left,x=b.top,$=p.outChannels/p.inChannels,S=new Lt(p.outShape,r.dtype),I=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,k=S.values;for(let E=0;E<p.batchSize;++E){const A=E*u[0],_=E*S.strides[0];for(let O=0;O<p.outHeight;++O){const M=_+O*S.strides[1],W=O*p.strideHeight-x;for(let z=0;z<f;++z){const j=W+z*g;if(j<0||j>=p.inHeight)continue;const G=z*h[0],Z=A+j*u[1];for(let se=0;se<p.outWidth;++se){const ee=M+se*S.strides[2],oe=se*p.strideWidth-w;for(let ae=0;ae<m;++ae){const fe=oe+ae*y;if(fe<0||fe>=p.inWidth)continue;const ue=G+ae*h[1],de=Z+fe*p.inChannels;let ve=ee,Ee=ue;for(let Ne=0;Ne<p.inChannels;++Ne){const Re=I[de+Ne];for(let Me=0;Me<$;++Me)k[ve+Me]+=Re*C[Ee+Me];ve+=$,Ee+=$}}}}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const f6={kernelName:Hc,backendName:"cpu",kernelFunc:Ik};function m6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;$e([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Gt(r.shape,u,i,a,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Lt(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,x=t.data.get(r.dataId).values,$=new Lt(r.shape,r.dtype,x),S=t.data.get(o.dataId).values,I=new Lt(o.shape,o.dtype,S);for(let C=0;C<f;++C){const k=Math.max(0,Math.ceil((b-C)/d)),E=Math.min(h.outHeight,(h.inHeight+b-C)/d);for(let A=0;A<m;++A){const _=Math.max(0,Math.ceil((y-A)/p)),O=Math.min(h.outWidth,(h.inWidth+y-A)/p);for(let M=0;M<h.outChannels;++M){const W=Math.trunc(M/w),z=M%w;let j=0;for(let G=0;G<h.batchSize;++G)for(let Z=k;Z<E;++Z){const se=C+Z*d-b;for(let ee=_;ee<O;++ee){const oe=A+ee*p-y;j+=$.get(G,se,oe,W)*I.get(G,Z,ee,M)}}g.set(j,C,A,W,z)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const g6={kernelName:yp,backendName:"cpu",kernelFunc:m6};function y6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;$e([r,o],"depthwiseConv2DNativeBackpropInput");const h=Te(r.shape),d=Te(o.shape),p=Gt(u,o.shape,i,a,l,c,!0),f=new Lt(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,w=t.data.get(r.dataId).values,[x,$,S]=h,I=t.data.get(o.dataId).values,[C,k,E]=d,{batchSize:A,filterHeight:_,filterWidth:O,inChannels:M,inHeight:W,inWidth:z,outChannels:j,outHeight:G,outWidth:Z,strideHeight:se,strideWidth:ee}=p,oe=_-1-p.padInfo.top,ae=O-1-p.padInfo.left,fe=j/M;for(let ue=0;ue<A;++ue)for(let de=0;de<M;++de)for(let ve=0;ve<W;++ve){const Ee=ve-oe,Ne=Math.max(0,Math.ceil(Ee/se)),Re=Math.min(G,(_+Ee)/se);for(let Me=0;Me<z;++Me){const R=Me-ae,B=Math.max(0,Math.ceil(R/ee)),q=Math.min(Z,(O+R)/ee);let J=0;for(let Y=Ne;Y<Re;++Y){const ne=Y*se-Ee;for(let ce=B;ce<q;++ce){const le=ce*ee-R,ie=x*ue+$*Y+S*ce,re=C*(_-1-ne)+k*(O-1-le)+E*de;for(let xe=0;xe<fe;++xe){const be=de*fe+xe,Ie=w[ie+be],_e=I[re+xe];J+=Ie*_e}}}m[g*ue+y*ve+b*Me+de]=J}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const b6={kernelName:bp,backendName:"cpu",kernelFunc:y6};function x6(n){const{inputs:e,backend:t}=n,{x:s}=e,r=K(s.shape),o=t.data.get(s.dataId).values,i=ze([r,r],s.dtype),a=i.values;for(let c=0;c<o.length;c++)a[c*r+c]=o[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const w6={kernelName:xp,backendName:"cpu",kernelFunc:x6};const v6={kernelName:jc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:x,strideWidth:$,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:k,outShape:E}=Fu(s.shape,r.shape,o,i,"NHWC",a),A=K(E),_=E.length,O=Ct(s.dtype,A);for(let W=0;W<p;++W)for(let z=0;z<y;++z){const j=z*x-w.top;for(let G=0;G<b;++G){const Z=G*$-w.left;for(let se=0;se<g;++se){let ee=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<S;++ae){const fe=j+ae*C;if(fe>=0&&fe<f)for(let ue=0;ue<I;++ue){const de=Z+ue*k;if(de>=0&&de<m){const ve=zs([W,fe,de,se],u,Te(s.shape)),Ee=zs([ae,ue,se],d,Te(r.shape)),Ne=c[ve]+h[Ee];Ne>ee&&(ee=Ne)}}}const oe=zs([W,z,G,se],_,Te(E));O[oe]=ee}}}return{dataId:l.write(So(O,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};const $6={kernelName:ud,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,c=e,u=ss(s.shape,c.data.get(s.dataId).values),h=ss(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:$,filterWidth:S,dilationHeight:I,dilationWidth:C,outShape:k}=Fu(s.shape,r.shape,i,a,"NHWC",l);N(o.rank===k.length,()=>`Error in ${ud}, dy must have the same rank as output ${k.length}, but got ${o.rank}`);const E=ss(k,c.data.get(o.dataId).values),A=Ky(r.shape,r.dtype);for(let O=0;O<d;++O)for(let M=0;M<g;++M){const W=M*w-b.top;for(let z=0;z<y;++z){const j=z*x-b.left;for(let G=0;G<m;++G){let Z=Number.MIN_SAFE_INTEGER,se=0,ee=0;for(let oe=0;oe<$;++oe){const ae=W+oe*I;if(ae>=0&&ae<p)for(let fe=0;fe<S;++fe){const ue=j+fe*C;if(ue>=0&&ue<f){const de=u[O][ae][ue][G]+h[oe][fe][G];de>Z&&(Z=de,se=oe,ee=fe)}}}A[se][ee][G]+=E[O][M][z][G]}}}return{dataId:c.write(So(A,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const I6={kernelName:cd,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,c=e,u=ss(s.shape,c.data.get(s.dataId).values),h=ss(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:$,filterWidth:S,dilationHeight:I,dilationWidth:C,outShape:k}=Fu(s.shape,r.shape,i,a,"NHWC",l);N(o.rank===k.length,()=>`Error in ${cd}, dy must have the same rank as output ${k.length}, but got ${o.rank}`);const E=ss(k,c.data.get(o.dataId).values),A=Ky(s.shape,s.dtype);for(let O=0;O<d;++O)for(let M=0;M<g;++M){const W=M*w-b.top;for(let z=0;z<y;++z){const j=z*x-b.left;for(let G=0;G<m;++G){let Z=Number.MIN_SAFE_INTEGER,se=W<0?0:W,ee=j<0?0:j;for(let oe=0;oe<$;++oe){const ae=W+oe*I;if(ae>=0&&ae<p)for(let fe=0;fe<S;++fe){const ue=j+fe*C;if(ue>=0&&ue<f){const de=u[O][ae][ue][G]+h[oe][fe][G];de>Z&&(Z=de,se=ae,ee=ue)}}}A[O][se][ee][G]+=E[O][M][z][G]}}}return{dataId:c.write(So(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function uh(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;$e(r,"sum");let a;r.dtype==="bool"?a=Co({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=gr({inputs:{x:r},backend:t});const l=a.shape.length,c=Ve(o,a.shape),u=It(c,l);let h=c,d=a;u!=null&&(d=On({inputs:{x:a},backend:t,attrs:{perm:u}}),h=Tt(h.length,l)),tn("sum",h,d.shape.length);const[p,f]=Ht(d.shape,h),m=_n(d.dtype,"int32");let g=Rd(t,p,m);const y=K(f),b=t.data.get(g.dataId).values,w=t.data.get(d.dataId).values;for(let x=0;x<b.length;++x){const $=x*y;let S=0;for(let I=0;I<y;++I)S+=w[$+I];b[x]=S}if(i){const x=Nt(g.shape,c),$=g;g=lt({inputs:{x:g},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo($)}return t.disposeIntermediateTensorInfo(a),u!=null&&t.disposeIntermediateTensorInfo(d),g}const C6={kernelName:Su,backendName:"cpu",kernelFunc:uh};function S6(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Lx(r,o.length);zx(i.length,l,o);const{path:c,steps:u}=Mx(a,l),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:y,expandDims:b}=Px(p,l[g]);let w;Bx(y)?w=o[g]:(w=On({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(w));const x=w.shape.slice();for(let $=0;$<b.length;++$)x.splice(b[$],0,1);He(w.shape,x)||(w=lt({inputs:{x:w},backend:t,attrs:{shape:x}}),f.push(w)),d===null?d=w:(d=Sm({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=uh({inputs:{x:d},backend:t,attrs:{axis:c[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const N6={kernelName:wp,backendName:"cpu",kernelFunc:S6};function T6(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;$e([s,r],"eluGrad");const o=new Float32Array(K(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];c>=1?o[l]=a[l]:o[l]=a[l]*(c+1)}return t.makeTensorInfo(r.shape,"float32",o)}const k6={kernelName:vp,backendName:"cpu",kernelFunc:T6};const E6=Ex,_6=_x,A6=Ax,R6=Rx,D6=Dx,O6=Ox,F6=st(za,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+E6*t);return e*(1-((((O6*s+D6)*s+R6)*s+A6)*s+_6)*s*Math.exp(-t*t))}),L6={kernelName:za,backendName:"cpu",kernelFunc:F6};function Fd(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(N(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),lt({inputs:{x:r},backend:t,attrs:{shape:a}})}const P6={kernelName:Kc,backendName:"cpu",kernelFunc:Fd};const z6=Dt((n,e)=>n/e),_w=jt(La,z6),fy={kernelName:La,backendName:"cpu",kernelFunc:_w};function Ck(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[r,o],u=K(c),h=Mt("float32",u),d=Mt("float32",u);for(let g=0;g<r;g++){const y=wi({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,o]}}),b=wi({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,o]}}),w=Bn({inputs:{real:y,imag:b},backend:t}),{real:x,imag:$}=M6(w,e,t),S=Fr(x,$);for(let I=0;I<o;I++){const C=Fx(S,I);h[g*o+I]=C.real,d[g*o+I]=C.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}const p=t.makeTensorInfo(c,"float32",h),f=t.makeTensorInfo(c,"float32",d),m=Bn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function M6(n,e,t){const s=K(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(B6(s)){const a=my(o,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",a.real),u=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",Mr(s,"float32")),d=gr({inputs:{x:h},backend:t}),p=fy.kernelFunc({inputs:{a:c,b:h},backend:t}),f=fy.kernelFunc({inputs:{a:u,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=Fr(o,i),l=V6(a,s,e);return CS(l)}}function B6(n){return(n&n-1)===0}function my(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=Fr(n,e),i=t/2,a=SS(o),l=a.real,c=a.imag,u=[l.length],h=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),p=Bn({inputs:{real:h,imag:d},backend:r}),f=NS(o),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),w=r.makeTensorInfo(y,"float32",g),x=Bn({inputs:{real:b,imag:w},backend:r}),$=my(l,c,i,s,r),S=$.real,I=$.imag,C=[S.length],k=r.makeTensorInfo(C,"float32",S),E=r.makeTensorInfo(C,"float32",I),A=Bn({inputs:{real:k,imag:E},backend:r}),_=my(m,g,i,s,r),O=_.real,M=_.imag,W=[O.length],z=r.makeTensorInfo(W,"float32",O),j=r.makeTensorInfo(W,"float32",M),G=Bn({inputs:{real:z,imag:j},backend:r}),Z=kS(t,s),se=[Z.real.length],ee=r.makeTensorInfo(se,"float32",Z.real),oe=r.makeTensorInfo(se,"float32",Z.imag),ae=Bn({inputs:{real:ee,imag:oe},backend:r}),fe=Sm({inputs:{a:ae,b:G},backend:r}),ue=da({inputs:{a:A,b:fe},backend:r}),de=kw({inputs:{a:A,b:fe},backend:r}),ve=xi({inputs:{input:ue},backend:r}),Ee=xi({inputs:{input:de},backend:r}),Ne=pa({inputs:{input:ue},backend:r}),Re=pa({inputs:{input:de},backend:r}),Me=fa({inputs:[ve,Ee],backend:r,attrs:{axis:0}}),R=fa({inputs:[Ne,Re],backend:r,attrs:{axis:0}}),B=r.data.get(Me.dataId).values,q=r.data.get(R.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(ve),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(R),{real:B,imag:q}}function V6(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=ES(r*a,e,t),c=Fx(n,a);o+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}t&&(o/=e,i/=e),TS(s,o,i,r)}return s}function W6(n){const{inputs:e,backend:t}=n,{input:s}=e,r=K(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=lt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=Ck(a,!1,t),c=lt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const U6={kernelName:$p,backendName:"cpu",kernelFunc:W6};function Aw(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||Ia(r),a=Ct(i,K(s));return H6(a,r,i),e.makeTensorInfo(s,i,a)}const G6={kernelName:Ip,backendName:"cpu",kernelFunc:Aw};function H6(n,e,t){n.fill(e)}const j6={kernelName:Cp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=Mt(s.dtype,K(s.shape)),[i,a,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*c;for(let f=0;f<a;f++){const m=f*(l*c);for(let g=0;g<l;g++){const y=g*c;for(let b=0;b<c;b++){const w=Math.round(l-g-1),x=p+m+y+b;let $=u[x];if(w>=0&&w<l){const S=w*c,I=p+m+S+b;$=u[I]}o[x]=$}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const q6=Dt((n,e)=>Math.floor(n/e)),K6=jt(Wa,q6,null,"int32"),X6={kernelName:Wa,backendName:"cpu",kernelFunc:K6};function Y6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=$k({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const y=lt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=da({inputs:{a:m,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else m=da({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const y=lt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=Od(t,m,p,y,f),t.disposeIntermediateTensorInfo(y)}else m=Od(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const Z6={kernelName:gc,backendName:"cpu",kernelFunc:Y6};function J6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Ik({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=da({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Od(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const Q6={kernelName:yc,backendName:"cpu",kernelFunc:J6};function eK(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=K(s.shape),i=r.shape,a=i[i.length-1],[l,c,u,h]=hf(s,r);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(r.dataId).values,p=t.bufferSync(s),f=FT(d,p,s.dtype,c,a,u,h,s.shape,o);return t.makeTensorInfo(l,s.dtype,f.values)}const tK={kernelName:Sp,backendName:"cpu",kernelFunc:eK};function nK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;$e([r,o],"gatherV2");const l=Ve(i,r.shape)[0],c=t.data.get(o.dataId).values,u=r.shape[l];for(let x=0;x<c.length;++x){const $=c[x];N($<=u-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=K(o.shape),p=Wx(r,o,l,h),f=lt({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=lt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=t.bufferSync(m),b=t.bufferSync(f),w=LT(b,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,w.dtype,w.values)}const sK={kernelName:Yc,backendName:"cpu",kernelFunc:nK};function rK(n){const{inputs:e,backend:t}=n,{input:s}=e,r=K(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=lt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=Ck(a,!0,t),c=lt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const oK={kernelName:Np,backendName:"cpu",kernelFunc:rK};const iK=st(Ha,n=>Number.isFinite(n)?1:0,"bool"),aK={kernelName:Ha,backendName:"cpu",kernelFunc:iK};const lK=st(ja,n=>Math.abs(n)===1/0?1:0,"bool"),cK={kernelName:ja,backendName:"cpu",kernelFunc:lK};const uK=st(qa,n=>Number.isNaN(n)?1:0,"bool"),hK={kernelName:qa,backendName:"cpu",kernelFunc:uK};function dK(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=VT(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const pK={kernelName:kp,backendName:"cpu",kernelFunc:dK};const fK=st(Xa,n=>Math.log1p(n)),mK={kernelName:Xa,backendName:"cpu",kernelFunc:fK};const gK=Dt((n,e)=>n&&e),yK=jt(tu,gK,null,"bool"),bK={kernelName:tu,backendName:"cpu",kernelFunc:yK};const xK=st(nu,n=>n?0:1,"bool"),wK={kernelName:nu,backendName:"cpu",kernelFunc:xK};const vK=Dt((n,e)=>n||e),$K=jt(su,vK,null,"bool"),IK={kernelName:su,backendName:"cpu",kernelFunc:$K};function CK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;$e(r,"LRN");const c=r.shape[3],u=c-1,h=t.data.get(r.dataId).values,d=K(r.shape),p=new Float32Array(d);function f(m){const g=m%c;let y=m-g+Math.max(0,g-o);const b=m-g+Math.min(g+o,u);let w=0;for(;y<=b;y++){const x=h[y];w+=x*x}return w}for(let m=0;m<d;m++){const g=f(m),y=h[m]*Math.pow(i+a*g,-l);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const SK={kernelName:ru,backendName:"cpu",kernelFunc:CK};function NK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s;$e(i,"LRNGrad");const h=K(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const w=b%d,x=b-w+Math.max(0,w-a),$=b-w+Math.min(d,w+a+1);let S=0;for(let I=x;I<$;I++)S+=Math.pow(f[I],2);S=c*S+l;for(let I=x;I<$;I++){let C=-2*c*u*f[I]*m[b]/S;b===I&&(C+=Math.pow(S,-u)),C*=p[b],g[I]+=C}}return t.makeTensorInfo(i.shape,r.dtype,g)}const TK={kernelName:Ep,backendName:"cpu",kernelFunc:NK};function Sk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let l=r.shape;const c=l.length,u=Ve(o,l);let h=u;const d=It(h,c);let p=a.data.get(r.dataId).values;if(d!=null){const x=new Array(c);for(let $=0;$<x.length;$++)x[$]=l[d[$]];p=Nw(p,l,r.dtype,d,x),h=Tt(h.length,c),l=x}$e(r,"max"),tn("max",h,c);const[f,m]=Ht(l,h),g=K(m),y=UT(p,g,f,r.dtype),b=a.write(y,f,r.dtype);let w=f;return i&&(w=Nt(f,u)),{dataId:b,shape:w,dtype:r.dtype}}const kK={kernelName:ou,backendName:"cpu",kernelFunc:Sk};function EK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;$e(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;N(en(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Ss(r.shape,o,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&He(u.inShape,u.outShape))h=gr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Te(r.shape),f=Ew(d,r.shape,r.dtype,p,u,"max");h=t.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const _K={kernelName:iu,backendName:"cpu",kernelFunc:EK};function AK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;$e(r,"maxPool3d");const u=Br(r.shape,o,i,1,a,l,c),h=t.data.get(r.dataId).values,d=vk(h,r.shape,r.dtype,Te(r.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const RK={kernelName:au,backendName:"cpu",kernelFunc:AK};function DK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;$e([r,o],"maxPool3DGrad");const u=Br(o.shape,i,a,1,l,c),h=t.bufferSync(o),d=wq(h,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,w=u.effectiveFilterDepth,x=u.effectiveFilterHeight,$=u.effectiveFilterWidth,S=w-1-u.padInfo.front,I=$-1-u.padInfo.left,C=x-1-u.padInfo.top,k=ze(o.shape,"float32"),E=t.bufferSync(r);for(let A=0;A<u.batchSize;++A)for(let _=0;_<u.inChannels;++_)for(let O=0;O<u.inDepth;++O)for(let M=0;M<u.inHeight;++M)for(let W=0;W<u.inWidth;++W){const z=O-S,j=M-C,G=W-I;let Z=0;for(let se=0;se<w;se+=g){const ee=(z+se)/p;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let oe=0;oe<x;oe+=y){const ae=(j+oe)/f;if(!(ae<0||ae>=u.outHeight||Math.floor(ae)!==ae))for(let fe=0;fe<$;fe+=b){const ue=(G+fe)/m;if(ue<0||ue>=u.outWidth||Math.floor(ue)!==ue)continue;const de=w*x*$-1-d.get(A,ee,ae,ue,_),ve=se*x*$+oe*$+fe,Ee=de===ve?1:0;if(Ee===0)continue;const Ne=E.get(A,ee,ae,ue,_);Z+=Ne*Ee}}}k.set(Z,A,O,M,W,_)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const OK={kernelName:Ap,backendName:"cpu",kernelFunc:DK};function FK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;$e([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Ss(a.shape,l,c,1,u,h),p=t.data.get(a.dataId).values,f=ze(d.outShape,a.dtype,wk(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,x=d.effectiveFilterWidth,$=x-1-d.padInfo.left,S=w-1-d.padInfo.top,I=ze(a.shape,"float32"),C=t.data.get(r.dataId).values,k=ze(r.shape,"float32",C);for(let E=0;E<d.batchSize;++E)for(let A=0;A<d.inChannels;++A)for(let _=0;_<d.inHeight;++_)for(let O=0;O<d.inWidth;++O){const M=_-S,W=O-$;let z=0;for(let j=0;j<w;j+=y){const G=(M+j)/m;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let Z=0;Z<x;Z+=b){const se=(W+Z)/g;if(se<0||se>=d.outWidth||Math.floor(se)!==se)continue;const ee=w*x-1-f.get(E,G,se,A),oe=j*x+Z,ae=ee===oe?1:0;if(ae===0)continue;const fe=k.get(E,G,se,A);z+=fe*ae}}I.set(z,E,_,O,A)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const LK={kernelName:_p,backendName:"cpu",kernelFunc:FK};function PK(n,e,t,s,r){const o=Te(e),i=Ew(n,e,t,o,r,"max"),a=wk(n,e,t,r,!0,s);return[i.values,a.values]}const zK={kernelName:Rp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;$e(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Ss(s.shape,r,o,[1,1],i),[h,d]=PK(c,s.shape,s.dtype,a,u),p=l.write(h,u.outShape,s.dtype),f=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function MK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=Ve(o,r.shape),c=Ht(r.shape,a)[1],u=K(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=Co({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=_w({inputs:{a:p,b:d},backend:t});h.push(f);const m=uh({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:i}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const BK={kernelName:lu,backendName:"cpu",kernelFunc:MK};function VK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;$e(r,"min");const a=Ve(o,r.shape);let l=a;const c=It(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Tt(l.length,r.shape.length)),tn("min",l,u.shape.length);const[h,d]=Ht(u.shape,l),p=K(d),f=Zt(K(h),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let w=m[b];for(let x=0;x<p;++x){const $=m[b+x];(Number.isNaN($)||$<w)&&(w=$)}f[y]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const y=Nt(h,a),b=lt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const WK={kernelName:cu,backendName:"cpu",kernelFunc:VK};function UK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;$e(r,"mirrorPad");const a=o.map((w,x)=>w[0]+r.shape[x]+w[1]),l=o.map(w=>w[0]),c=o.map((w,x)=>w[0]+r.shape[x]),u=i==="reflect"?0:1,h=t.data.get(r.dataId).values,d=r.shape.length,p=Te(r.shape),f=K(a),m=a.length,g=Te(a),y=Mt(r.dtype,f);for(let w=0;w<f;w++){let x=Ii(w,m,g);for(let S=0;S<m;S++)x[S]<l[S]?x[S]=l[S]*2-x[S]-u:x[S]>=c[S]&&(x[S]=(c[S]-1)*2-x[S]+u);x=x.map((S,I)=>S-l[I]);const $=zs(x,d,p);y[w]=h[$]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const GK={kernelName:uu,backendName:"cpu",kernelFunc:UK};const HK=Dt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),jK=jt(Ja,HK),qK={kernelName:Ja,backendName:"cpu",kernelFunc:jK};function Nk(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=Ve([a],r.shape),c=Sk({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),u=Nt(c.shape,l),h=lt({inputs:{x:c},backend:t,attrs:{shape:u}}),d=kw({inputs:{a:r,b:h},backend:t}),p=RT({inputs:{x:d},backend:t}),f=uh({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=lt({inputs:{x:f},backend:t,attrs:{shape:u}}),g=_w({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const KK={kernelName:ku,backendName:"cpu",kernelFunc:Nk};function XK(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;$e(r,"multinomial");const l=a?r:Nk({inputs:{logits:r},backend:t,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=t.data.get(l.dataId).values,d=[c,o],p=Zt(K(d),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const y=Tl.alea(i.toString()),b=f*o;for(let w=0;w<o;++w){const x=y();p[b+w]=g.length;for(let $=0;$<g.length;$++)if(x<g[$]){p[b+w]=$;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const YK={kernelName:Dp,backendName:"cpu",kernelFunc:XK};const ZK=Hf;function JK(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;$e(r,"NonMaxSuppression");const c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,{selectedIndices:h}=ZK(c,u,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const QK={kernelName:Op,backendName:"cpu",kernelFunc:JK};const e5=jf;function t5(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;$e(r,"NonMaxSuppressionPadded");const u=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=e5(u,h,i,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const n5={kernelName:Fp,backendName:"cpu",kernelFunc:t5};const s5=qf;function r5(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;$e(r,"NonMaxSuppressionWithScore");const u=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,d=i,p=a,f=l,m=c,{selectedIndices:g,selectedScores:y}=s5(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const o5={kernelName:Lp,backendName:"cpu",kernelFunc:r5};function i5(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;$e(r,"oneHot");const c=K(r.shape),u=new Float32Array(c*i);u.fill(l);const h=t.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<i&&(u[d*i+h[d]]=a);return t.makeTensorInfo([...r.shape,i],o,u)}const a5={kernelName:fu,backendName:"cpu",kernelFunc:i5};function Ld(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=xi({inputs:{input:s},backend:t}),o=Ld({inputs:{x:r},backend:t}),i=pa({inputs:{input:s},backend:t}),a=Ld({inputs:{x:i},backend:t}),l=Bn({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Aw({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const l5={kernelName:Au,backendName:"cpu",kernelFunc:Ld};function Tk(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=xi({inputs:{input:s},backend:t}),o=Tk({inputs:{x:r},backend:t}),i=pa({inputs:{input:s},backend:t}),a=Ld({inputs:{x:i},backend:t}),l=Bn({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Aw({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const c5={kernelName:pu,backendName:"cpu",kernelFunc:Tk};function kk(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Fd({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(u=>{Qt(o,u.shape,"All tensors passed to stack must have matching shapes"),N(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=Fd({inputs:{input:u},backend:t,attrs:{dim:r}});return a.push(h),h}),c=fa({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const u5={kernelName:mu,backendName:"cpu",kernelFunc:kk};function h5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;$e(r,"pad");const a=o.map((b,w)=>b[0]+r.shape[w]+b[1]),l=o.map(b=>b[0]),c=t.data.get(r.dataId).values,u=K(r.shape),h=r.shape.length,d=Te(r.shape),p=K(a),f=a.length,m=Te(a),g=Mt(r.dtype,p);i!==0&&g.fill(i);for(let b=0;b<u;b++){const x=Ii(b,h,d).map((S,I)=>S+l[I]),$=zs(x,f,m);g[$]=c[b]}return{dataId:t.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const Ek={kernelName:gu,backendName:"cpu",kernelFunc:h5};const d5=Dt((n,e)=>Math.pow(n,e)),p5=jt(el,d5),f5={kernelName:el,backendName:"cpu",kernelFunc:p5};function m5(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,a=r.map(g=>t.data.get(g.dataId).values),l=r.map(g=>g.shape),c=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values,[h,d,p]=XT(a,l,c,o.shape,o.dtype,u,i.shape),f=h.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,o.dtype,d);return f.concat([m])}const g5={kernelName:Pp,backendName:"cpu",kernelFunc:m5};function y5(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,u]=YT(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const b5={kernelName:zp,backendName:"cpu",kernelFunc:y5};function x5(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=ZT(c,r.shape,u,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const w5={kernelName:Mp,backendName:"cpu",kernelFunc:x5};function v5(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=JT(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const $5={kernelName:Bp,backendName:"cpu",kernelFunc:v5};const I5=st(tl,n=>1/n),C5={kernelName:tl,backendName:"cpu",kernelFunc:I5};function S5(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;$e(r,"resizeBilinear");const l=Te(r.shape),[c,u]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(K([h,c,u,f])),y=[o&&c>1?d-1:d,o&&u>1?p-1:p],b=[o&&c>1?c-1:c,o&&u>1?u-1:u];let w=0;const x=y[0]/b[0],$=y[1]/b[1];for(let S=0;S<h;S++)for(let I=0;I<c;I++){let C;i?C=x*(I+.5)-.5:C=x*I;const k=Math.max(0,Math.floor(C)),E=C-k,A=Math.min(d-1,Math.ceil(C)),_=S*l[0]+k*l[1],O=S*l[0]+A*l[1];for(let M=0;M<u;M++){let W;i?W=$*(M+.5)-.5:W=$*M;const z=Math.max(0,Math.floor(W)),j=W-z,G=Math.min(p-1,Math.ceil(W)),Z=_+z*l[2],se=O+z*l[2],ee=_+G*l[2],oe=O+G*l[2];for(let ae=0;ae<f;ae++){const fe=m[Z+ae],ue=m[se+ae],de=m[ee+ae],ve=m[oe+ae],Ee=fe+(de-fe)*j,Ne=ue+(ve-ue)*j,Re=Ee+(Ne-Ee)*E;g[w++]=Re}}}return t.makeTensorInfo([h,c,u,f],"float32",g)}const N5={kernelName:vu,backendName:"cpu",kernelFunc:S5};function T5(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;$e([o,r],"resizeBilinearGrad");const a=Te(r.shape),[l,c,u,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*c*u*h),m=[i&&d>1?c-1:c,i&&p>1?u-1:u],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],w=t.data.get(o.dataId).values;let x=0;for(let $=0;$<l;$++){const S=$*a[0];for(let I=0;I<d;I++){const C=I*y,k=Math.floor(C),E=Math.min(Math.ceil(C),c-1),A=S+k*a[1],_=S+E*a[1],O=C-k,M=1-O;for(let W=0;W<p;W++){const z=W*b,j=Math.floor(z),G=Math.min(Math.ceil(z),u-1),Z=z-j,se=1-Z,ee=A+j*a[2],oe=A+G*a[2],ae=_+j*a[2],fe=_+G*a[2],ue=M*se,de=M*Z,ve=O*se,Ee=O*Z;for(let Ne=0;Ne<h;Ne++){const Re=w[x++];f[ee+Ne]+=Re*ue,f[oe+Ne]+=Re*de,f[ae+Ne]+=Re*ve,f[fe+Ne]+=Re*Ee}}}}return t.makeTensorInfo([l,u,c,h],"float32",f)}const k5={kernelName:Up,backendName:"cpu",kernelFunc:T5};function E5(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;$e(r,"resizeNearestNeighbor");const l=Te(r.shape),[c,u]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(h*c*u*f),y=[o&&c>1?d-1:d,o&&u>1?p-1:p],b=[o&&c>1?c-1:c,o&&u>1?u-1:u],w=y[0]/b[0],x=y[1]/b[1];let $=0;for(let S=0;S<h;S++){const I=S*l[0];for(let C=0;C<c;C++){const k=i?w*(C+.5):w*C;let E=Math.min(d-1,o?Math.round(k):Math.floor(k));i&&(E=Math.max(0,E));const A=I+E*l[1];for(let _=0;_<u;_++){const O=i?x*(_+.5):x*_;let M=Math.min(p-1,o?Math.round(O):Math.floor(O));i&&(M=Math.max(0,M));const W=A+M*l[2];for(let z=0;z<f;z++){const j=m[W+z];g[$++]=j}}}}return t.makeTensorInfo([h,c,u,f],r.dtype,g)}const _5={kernelName:wu,backendName:"cpu",kernelFunc:E5};function A5(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;$e([o,r],"resizeNearestNeighborGrad");const a=Te(r.shape),l=Te(o.shape),[c,u,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*u*h*d),g=t.data.get(o.dataId).values,y=[i&&p>1?u-1:u,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=y[0]/b[0],x=y[1]/b[1],$=1/w,S=1/x,I=Math.ceil($)*2+2,C=Math.ceil(S)*2+2;for(let k=0;k<c;k++){const E=k*a[0];for(let A=0;A<u;A++){const _=E+A*a[1],O=Math.floor(A*$),M=Math.floor(O-I/2);for(let W=0;W<h;W++){const z=_+W*a[2],j=Math.floor(W*S),G=Math.floor(j-C/2);for(let Z=0;Z<d;Z++){let se=0;for(let ee=0;ee<I;ee++){const oe=ee+M;if(oe<0||oe>=p)continue;const ae=E+oe*l[1],fe=oe*w,ue=Math.min(u-1,i?Math.round(fe):Math.floor(fe));if(A===ue)for(let de=0;de<C;de++){const ve=de+G;if(ve<0||ve>=f)continue;const Ee=ae+ve*l[2],Ne=ve*x,Re=Math.min(h-1,i?Math.round(Ne):Math.floor(Ne));W===Re&&(se+=g[Ee+Z])}}m[z+Z]=se}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const R5={kernelName:Wp,backendName:"cpu",kernelFunc:A5};function D5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;$e(r,"reverse");const i=r.shape.length,a=Ve(o,r.shape);if(i===0)return gr({inputs:{x:r},backend:t});const l=new Lt(r.shape,r.dtype),c=t.bufferSync(r);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const O5={kernelName:$u,backendName:"cpu",kernelFunc:D5};const F5={kernelName:of,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=Mt(s.dtype,K(s.shape)),[c,u,h,d]=s.shape,[p,f]=Nx(i,u,h),m=255,g=Math.sin(r),y=Math.cos(r),b=a.data.get(s.dataId).values;for(let x=0;x<c;x++){const $=x*h*u*d;for(let S=0;S<u;S++){const I=S*(h*d);for(let C=0;C<h;C++){const k=C*d;for(let E=0;E<d;E++){const A=[c,S,C,E],_=A[2],O=A[1];let M=(_-p)*y-(O-f)*g,W=(_-p)*g+(O-f)*y;M=Math.round(M+p),W=Math.round(W+f);let z=o;if(typeof o!="number"&&(E===3?z=m:z=o[E]),M>=0&&M<h&&W>=0&&W<u){const G=W*(h*d),Z=M*d,se=$+G+Z+E;z=b[se]}const j=$+I+k+E;l[j]=z}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const L5=st(rl,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),P5={kernelName:rl,backendName:"cpu",kernelFunc:L5};function z5(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=xl(o,r,i),d=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=Gi(p,f,i,h,c,l,a,u,0,d);return t.makeTensorInfo(i,m.dtype,m.values)}const M5={kernelName:Gp,backendName:"cpu",kernelFunc:z5};function B5(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function V5(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function W5(n,e,t,s,r,o){const i=Ct("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),c=a*r;for(let u=0;u<r;++u)i[c+u]=o==="left"?B5(l,e[u+c]):V5(l,e[u+c])}return i}function U5(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,c=W5(a,l,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",c)}const G5={kernelName:Hp,backendName:"cpu",kernelFunc:U5};function H5(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;$e([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,u=_n(r.dtype,o.dtype),h=Zt(K(r.shape),u);let d=0;const p=i===0||i>1||r.shape.length===1?1:K(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=c[f];return t.makeTensorInfo(r.shape,u,h)}const j5={kernelName:Iu,backendName:"cpu",kernelFunc:H5};const q5=tm,K5=nm,X5=st(il,n=>n>=0?K5*n:q5*(Math.exp(n)-1)),Y5={kernelName:il,backendName:"cpu",kernelFunc:X5};const Z5=st(cl,n=>n<0?-1:n>0?1:0),J5={kernelName:cl,backendName:"cpu",kernelFunc:Z5};const Q5=st(al,n=>Math.sin(n)),eX={kernelName:al,backendName:"cpu",kernelFunc:Q5};const tX=st(ll,n=>Math.sinh(n)),nX={kernelName:ll,backendName:"cpu",kernelFunc:tX};const sX=11920928955078125e-23,Ov=Math.log(sX)+2,rX=st(hl,n=>{const e=n>-Ov,t=n<Ov,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),oX={kernelName:hl,backendName:"cpu",kernelFunc:rX};function iX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;$e([r],"spaceToBatchND");const a=K(o),l=[[0,0]];l.push(...i);for(let S=1+o.length;S<r.shape.length;++S)l.push([0,0]);const c=Ek.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),u=Ju(c.shape,o,a,!1),h=Qu(u.length,o.length,!1),d=eh(c.shape,o,a,!1),m=lt({inputs:{x:c},backend:t,attrs:{shape:u}}),b=On({inputs:{x:m},backend:t,attrs:{perm:h}}),$=lt({inputs:{x:b},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),$}const aX={kernelName:Nu,backendName:"cpu",kernelFunc:iX};function lX(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values[0],[h,d,p,f,m]=nk(a,s.shape,s.dtype,l,r.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const cX={kernelName:jp,backendName:"cpu",kernelFunc:lX};function uX(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(o.dataId).values),[c,u,h]=sk(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const hX={kernelName:qp,backendName:"cpu",kernelFunc:uX};function dX(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,u]=Tw(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const pX={kernelName:Kp,backendName:"cpu",kernelFunc:dX};function fX(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,u]=Tw(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const mX={kernelName:Xp,backendName:"cpu",kernelFunc:fX};function gX(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=xl(o,r,a),p=!1,f=t.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),y=Boolean(t.data.get(i.dataId).values[0]);m=Gi(f,g,a,d,u,c,l,h,y,p);break}case"float32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=Gi(f,g,a,d,u,c,l,h,y,p);break}case"int32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=Gi(f,g,a,d,u,c,l,h,y,p);break}case"string":{const g=t.bufferSync(o),y=_r(t.data.get(i.dataId).values[0]);m=Gi(f,g,a,d,u,c,l,h,y,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const yX={kernelName:Yp,backendName:"cpu",kernelFunc:gX};function bX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Ve(i,r.shape)[0],l=Vx(r,o,a),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const p=wi({inputs:{x:r},backend:t,attrs:{begin:c,size:d}});return c[a]+=h,p})}const xX={kernelName:Tu,backendName:"cpu",kernelFunc:bX};const wX={kernelName:Zp,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;$e(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};const vX=st(bl,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),$X={kernelName:bl,backendName:"cpu",kernelFunc:vX};function IX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;$e(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:w,strides:x}=xb(r.shape,o,i,a,l,c,u,h,d);let $;if(m)$=lt({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=gb(b,w,x),I=wi({inputs:{x:r},backend:t,attrs:{begin:b,size:S}});$=lt({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(I)}else{const S=t.bufferSync(r),I=ok(p,S,x,b);$=t.makeTensorInfo(f,I.dtype,I.values)}return $}const CX={kernelName:Jp,backendName:"cpu",kernelFunc:IX};function SX(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,p=t.data.get(h.dataId).values,[f,m]=ik(d,p,r,o,i,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const NX={kernelName:Qp,backendName:"cpu",kernelFunc:SX};function TX(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values[0],[c,u,h]=ak(a,l,r),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const kX={kernelName:ef,backendName:"cpu",kernelFunc:TX};function EX(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=lk(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const _X={kernelName:tf,backendName:"cpu",kernelFunc:EX};const AX=st(ml,n=>Math.tan(n)),RX={kernelName:ml,backendName:"cpu",kernelFunc:AX};const DX=st(gl,n=>Math.tanh(n)),OX={kernelName:gl,backendName:"cpu",kernelFunc:DX};function FX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;$e(r,"tile");const i=uk(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const LX={kernelName:yl,backendName:"cpu",kernelFunc:FX};function PX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;$e(r,"topk");const a=t.data.get(r.dataId).values,[l,c]=dk(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const zX={kernelName:nf,backendName:"cpu",kernelFunc:PX};function MX(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=t,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],y=Te(r.shape),b=y[0],w=y[1],x=y[2],$=Te(g),S=$[0],I=$[1],C=$[2],k=Mt(r.dtype,K(g));k.fill(l);const E=s.data.get(r.dataId).values,A=s.data.get(o.dataId).values;for(let O=0;O<u;++O){const M=o.shape[0]===1?A:A.subarray(O*8,O*8+8);for(let W=0;W<f;++W)for(let z=0;z<m;++z)for(let j=0;j<p;++j){let G;const Z=M[6]*z+M[7]*W+1;if(Z===0)continue;const se=(M[0]*z+M[1]*W+M[2])/Z,ee=(M[3]*z+M[4]*W+M[5])/Z,oe=Fv(se,d,a),ae=Fv(ee,h,a);switch(i){case"nearest":G=HX(E,h,d,b,w,x,O,ae,oe,j,l);break;case"bilinear":G=jX(E,h,d,b,w,x,O,ae,oe,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const fe=O*S+W*I+z*C+j;k[fe]=G}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}const BX={kernelName:sf,backendName:"cpu",kernelFunc:MX};function Fv(n,e,t){switch(t){case"reflect":return VX(n,e);case"wrap":return WX(n,e);case"nearest":return GX(n,e);case"constant":default:return UX(n)}}function VX(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return go(0,t,e-1)}function WX(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return go(0,t,e-1)}function UX(n,e){return n}function GX(n,e){return go(0,n,e-1)}function tc(n,e,t,s,r,o,i,a,l,c,u){const h=i*s+a*r+l*o+c;return 0<=a&&a<e&&0<=l&&l<t?n[h]:u}function HX(n,e,t,s,r,o,i,a,l,c,u){const h=Math.round(a),d=Math.round(l);return tc(n,e,t,s,r,o,i,h,d,c,u)}function jX(n,e,t,s,r,o,i,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*tc(n,e,t,s,r,o,i,h,d,c,u)+(l-d)*tc(n,e,t,s,r,o,i,h,f,c,u),g=(f-l)*tc(n,e,t,s,r,o,i,p,d,c,u)+(l-d)*tc(n,e,t,s,r,o,i,p,f,c,u);return(p-a)*m+(a-h)*g}function qX(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;$e(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:c}=pk(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const KX={kernelName:rf,backendName:"cpu",kernelFunc:qX};function XX(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==o&&(l[c++]=r.shape[p]);const u=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let p=0;p<d.length;p++){u[o]=p;const f=wi({inputs:{x:r},backend:t,attrs:{begin:u,size:h}});d[p]=lt({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const YX={kernelName:Eu,backendName:"cpu",kernelFunc:XX};function ZX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;$e(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,c=[],u=[],h=a-l;let d=o;for(let f=0;f<h;++f){const m=Fd({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<i;++f){const m=Mr(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=_T({inputs:{a:g,b:d},backend:t}),b=Co({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),w=Sm({inputs:{a:b,b:r},backend:t}),x=uh({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});c.push(x),u.push(g),u.push(y),u.push(b),u.push(w),u.push(x)}const p=kk({inputs:c,backend:t,attrs:{axis:0}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const JX={kernelName:_u,backendName:"cpu",kernelFunc:ZX};const QX=[Kj,DH,Yj,Jj,MH,eq,nq,rq,iq,lq,uq,dq,fq,yq,xq,$q,Cq,Nq,kq,jj,_q,Rq,Oq,Lq,PH,VH,zq,OH,Bq,Wq,Uq,Hq,qq,Xq,Zq,Qq,t6,s6,o6,a6,c6,h6,p6,f6,g6,b6,w6,v6,$6,I6,N6,Mj,k6,WH,L6,UH,P6,HH,U6,G6,j6,qH,X6,Z6,Q6,tK,sK,XH,ZH,FH,oK,Vq,aK,cK,hK,Bj,QH,tj,pK,sj,mK,bK,wK,IK,SK,TK,kK,oj,_K,RK,OK,LK,zK,BK,WK,aj,GK,qK,YK,cj,hj,QK,n5,o5,pj,a5,c5,u5,Ek,f5,Wj,gj,g5,b5,w5,$5,LH,fy,C5,Uj,Gj,Hj,N5,k5,_5,R5,O5,F5,P5,Cj,M5,G5,j5,Y5,Nj,J5,eX,nX,Tj,KK,oX,aX,cX,hX,pX,mX,yX,xX,_j,wX,Rj,$X,CX,NX,kX,_X,Lj,C6,RX,OX,LX,zX,BX,fj,KX,YX,JX,l5];for(const n of QX)af(n);const qo={},Ph={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function e8(n,e){qo[n]=e}function Gs(n,e){if(!(n in qo)||e!=null){const s=n8(n,e);if(s!==null)qo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=qo[n];return t==null||t.isContextLost()?(delete qo[n],Gs(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),qo[n])}function t8(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function n8(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??t8(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete qo[n]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ph.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Ph)||t.getContext("experimental-webgl",Ph):t.getContext("webgl2",Ph)}var Nc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Nc||(Nc={}));var ns;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(ns||(ns={}));var Xt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Xt||(Xt={}));function hh(n,e){return[e,n]}function s8(n,e){return n*e}function zh(n){const e=K(n),t=Math.ceil(e/4);return od(t)}function Pl(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function r8(n,e){const[t,s]=Pl(n,e);return t*s*4}function Rw(n,e){const t=n;let s,r,o,i,a,l,c,u,h,d;return H().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,c=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function ge(n,e){const t=e();return H().getBool("DEBUG")&&o8(n),t}function o8(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+c8(n,e))}const i8=596e-10,a8=65504;function l8(n){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||i8<Math.abs(n)&&Math.abs(n)<a8)}function c8(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Mh(n,e){return jr(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function u8(n,e){const t=jr(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ge(n,()=>n.shaderSource(t,e)),ge(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function h8(n,e){const t=jr(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ge(n,()=>n.shaderSource(t,e)),ge(n,()=>n.compileShader(t)),H().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw _k(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const d8=/ERROR: [0-9]+:([0-9]+):/g;function _k(n,e){const t=d8.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((h,d)=>Qo((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),c=i.slice(s-1,s),u=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Qo(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function p8(n){return jr(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function f8(n,e){if(ge(n,()=>n.linkProgram(e)),!H().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function ng(n,e){if(ge(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function m8(n,e){const t=jr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),ge(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function g8(n,e){const t=jr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ge(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),ge(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function y8(n){return jr(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function b8(n,e){const t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function x8(n){return jr(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Lv(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),ge(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),ge(n,()=>n.enableVertexAttribArray(a)),!0)}function w8(n,e,t){S8(n,t),ge(n,()=>n.activeTexture(n.TEXTURE0+t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function v8(n,e,t){return jr(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function $8(n,e,t){return n.getUniformLocation(e,t)}function I8(n,e,t,s){ge(n,()=>w8(n,e,s)),ge(n,()=>n.uniform1i(t,s))}function sg(n,e,t){ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Pv(n,e){ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Bh(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+C8(n,e))}function C8(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function jr(n,e,t){const s=ge(n,()=>e());if(s==null)throw new Error(t);return s}function S8(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ma(n,e=2){return K(n.slice(0,n.length-e))}function ga(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Vh(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ma(n),...ga(n)]),e}function N8(n,e=!1){let t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?tp(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=zr(n).newShape);let r=K(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=ma(n);let l=2,c=2;n.length&&([l,c]=ga(n)),r=a*(l/2)*(c/2),o=od(r).map(u=>u*2)}else o=od(r);return o}function Wh(n){return n%2===0}function Pd(n,e){if(n=n.slice(-2),e=e.slice(-2),He(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||Wh(t)&&Wh(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Wh(n[0])&&Wh(e[0])}let rg,og;function T8(n){if(rg==null){const e=Gs(n);rg=e.getParameter(e.MAX_TEXTURE_SIZE)}return rg}function k8(n){if(og==null){const e=Gs(n);og=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,og)}function E8(n){if(n===0)return 0;let e;const t=Gs(n);return vs(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:vs(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function vs(n,e){return n.getExtension(e)!=null}function zv(n){try{if(Gs(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function _8(n){if(n===0)return!1;const e=Gs(n);if(n===1){if(!vs(e,"OES_texture_float"))return!1}else if(!vs(e,"EXT_color_buffer_float"))return!1;return gy(e)}function A8(n){if(n===0)return!1;const e=Gs(n);if(n===1){if(!vs(e,"OES_texture_float")||!vs(e,"WEBGL_color_buffer_float"))return!1}else{if(vs(e,"EXT_color_buffer_float"))return gy(e);const s="EXT_color_buffer_half_float";if(vs(e,s)){const r=e.getExtension(s);return R8(e,r)}return!1}return gy(e)}function gy(n){const e=Rw(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,r=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function R8(n,e){const t=Rw(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const r=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,r,o,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function D8(n){return n!==2?!1:Gs(n).fenceSync!=null}function dh(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const Se=H();Se.registerFlag("HAS_WEBGL",()=>Se.getNumber("WEBGL_VERSION")>0);Se.registerFlag("WEBGL_VERSION",()=>zv(2)?2:zv(1)?1:0);Se.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Se.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Se.get("WEBGL_VERSION")===2);Se.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Se.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Se.registerFlag("WEBGL_PACK",()=>Se.getBool("HAS_WEBGL"));Se.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_CLIP",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_REDUCE",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_LAZILY_UNPACK",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_CONV_IM2COL",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>T8(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>k8(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Se.getNumber("WEBGL_VERSION");return n===0?0:E8(n)});Se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Se.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Qy());Se.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_8(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Se.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Se.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Se.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>A8(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_FENCE_API_ENABLED",()=>D8(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Se.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Se.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Se.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Qy()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Se.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Se.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Se.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Se.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Se.registerFlag("WEBGL_EXP_CONV",()=>!1);Se.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Se.getBool("IS_TEST"));Se.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Se.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Se.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Se.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function $n(){let n,e,t,s,r,o,i,a,l,c;return H().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}function Oi(n,e,t="index"){const s=Te(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function Nm(n,e,t="index"){const s=Te(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function O8(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function F8(n,e,t="index"){const s=n.map((o,i)=>i),r=O8(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,l=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function Dw(n){const e=Te(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Ow(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Ak=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;const{getBroadcastDims:Rk}=GS;function L8(n,e,t){const s=[];if(n.forEach(p=>{const f=K(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Fw(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>P8(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=$n(),l=B8(a);let c,u,h=U8(a);return e.isPacked?(c=z8(e.logicalShape,i,t.enableShapeUniforms),u=W8(a)):(c=M8(e.logicalShape,i,t.enableShapeUniforms),u=V8(a)),t.packedInputs&&(h+=q8),[h,l,u,r,c,o,t.userCode].join(`
`)}function zl(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return oY(n,e);case 1:return aY(n,e);case 2:return cY(n,e);case 3:return hY(n,e);case 4:return pY(n,e);case 5:return fY(n);case 6:return mY(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Dk(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return rY(n);case 1:return iY(n,e);case 2:return lY(n,e);case 3:return uY(n,e);default:return dY(n,e)}}function P8(n,e,t=!1,s){let r="";t?r+=Dk(n,s):r+=zl(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=gY(n,e):r+=yY(n,e)),r}function z8(n,e,t){switch(n.length){case 0:return Ok();case 1:return K8(n,e,t);case 2:return nY(n,e,t);case 3:return Y8(n,e,t);default:return J8(n,e,t)}}function M8(n,e,t){switch(n.length){case 0:return Ok();case 1:return X8(n,e,t);case 2:return sY(n,e,t);case 3:return Z8(n,e,t);case 4:return Q8(n,e,t);case 5:return eY(n,e);case 6:return tY(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function B8(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function V8(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function W8(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function U8(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${G8}
    ${H8}
    ${j8}
  `}const G8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,H8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,j8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Ok(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function K8(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function X8(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Y8(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Z8(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Nm(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Oi(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function J8(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)i*=n[n.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function Q8(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Nm(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Oi(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function eY(n,e){const t=Oi(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function tY(n,e){const t=Oi(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function nY(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(He(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function sY(n,e,t){return He(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Fi(n){return`offset${n}`}function rY(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=$n();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function oY(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Fi(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function iY(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=$n();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function aY(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ml(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Fi(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function lY(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=$n();if(o!=null&&He(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function cY(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&He(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=zr(t),l=i;if(l.length<t.length){const d=Bl(n,l),p=["row","col"];return`
      ${zl(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${Vl(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ml(n)}
      }
    `;const c=o[0],u=o[1],h=Fi(s);return u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function uY(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=Bl(n,d),m=["b","row","col"];return`
        ${Dk(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Vl(m,p)});
        }
      `}const a=$n();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],c=i[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function hY(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=zr(t),c=a;if(c.length<t.length){const m=Bl(n,c),g=["row","col","depth"];return`
        ${zl(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Vl(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${Ml(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Fi(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function dY(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=$n();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=o[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${t}, uv);
    }
  `}function pY(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:c}=zr(t);if(l.length<t.length){const b=Bl(n,l),w=["row","col","depth","depth2"];return`
      ${zl(b,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Vl(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${Ml(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Fi(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function fY(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:c}=zr(e);if(l.length<e.length){const m=Bl(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${zl(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Vl(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${Ml(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Fi(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function mY(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=zr(e);if(r.length<e.length){const g=Bl(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${zl(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Vl(y,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,c=e[2]*l,u=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ml(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Fi(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ml(n){const e=n.name,t=K(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function gY(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=Rk(n.shapeInfo.logicalShape,e.logicalShape),l=ct(i),c=i-o;let u;const h=["x","y","z","w","u","v"];o===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";i<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+c]}`).join(", ");let p="return outputValue;";const m=K(n.shapeInfo.logicalShape)===1,y=K(e.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=o-2,w=o-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function yY(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&He(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=ct(l),u=Rk(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function ct(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Fw(n,e,t){const{newShape:s,keptDims:r}=zr(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&o>1&&!He(e,t)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Bl(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Vl(n,e){return e.map(t=>n[t]).join(", ")}function bY(n,e,t,s){const r=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(u=>u.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=L8(r,i,e),l=h8(n.gl,a),c=n.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},Fk(n,e,c))}function Fk(n,e,t){const s={},r={},o={},i=[];let a,l,c,u=null,h=null;h=n.getUniformLocation(t,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(let p=0;p<e.variableNames.length;p++){const f=e.variableNames[p];s[f]=n.getUniformLocation(t,f,d),s[`offset${f}`]=n.getUniformLocation(t,`offset${f}`,d),e.enableShapeUniforms&&(r[`${f}Shape`]=n.getUniformLocation(t,`${f}Shape`,d),o[`${f}TexShape`]=n.getUniformLocation(t,`${f}TexShape`,d))}return e.enableShapeUniforms&&(a=n.getUniformLocation(t,"outShape",d),c=n.getUniformLocation(t,"outShapeStrides",d),l=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((p,f)=>{i[f]=n.getUniformLocation(t,p.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:u,nanLoc:h,inShapesLocations:r,inTexShapesLocations:o,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function Mv(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!He(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,l=o.isUniform?null:o.texData.texShape;if(!He(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function xY(n,e,t,s,r){e.program.enableShapeUniforms||(Mv(e.inShapeInfos,t),Mv([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),H().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((l,c)=>{const u=e.program.variableNames[c],h=e.uniformLocations[u],d=e.uniformLocations[`offset${u}`],p=e.inShapesLocations[`${u}Shape`],f=e.inTexShapesLocations[`${u}TexShape`];if(p){const{uniformShape:m}=Fw(e.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(p,new Int32Array(m));break;case 2:n.gl.uniform2iv(p,new Int32Array(m));break;case 3:n.gl.uniform3iv(p,new Int32Array(m));break;case 4:n.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(K(l.shape)<2)n.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Te(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r&&e.program.customUniforms.forEach((l,c)=>{const u=e.customUniformLocations[c],h=r[c];if(l.type==="float")n.gl.uniform1fv(u,h);else if(l.type==="vec2")n.gl.uniform2fv(u,h);else if(l.type==="vec3")n.gl.uniform3fv(u,h);else if(l.type==="vec4")n.gl.uniform4fv(u,h);else if(l.type==="int")n.gl.uniform1iv(u,h);else if(l.type==="ivec2")n.gl.uniform2iv(u,h);else if(l.type==="ivec3")n.gl.uniform3iv(u,h);else if(l.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),n.executeProgram()}function wY(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=Fw(n.packedInputs,i.shape,l);let d="",p="",f="";if(u.length===1&&n.packedInputs){const $=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${$[0]>1}_${$[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const $=Te(u);f=`${$[0]===l[1]}_${$[$.length-1]===l[1]}`}const m=i.shape.length,g=u.length===2&&He(i.shape,l),y=K(i.shape)===1,b=ui(i.shape,t.shape),w=!n.packedInputs&&m===t.shape.length&&He(l,t.texData.texShape),x=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${c?h:""}_${u.length}_${y}_${b}_${g}_${d}_${p}_${f}_${x}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${H().getNumber("WEBGL_VERSION")}`,o}function In(n){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class vY{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Nc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$n();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nm(["r","c","d"],e):Oi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}class $Y{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Nc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$n();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Nm(["r","c","d"],e):Oi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}class IY{constructor(e){this.variableNames=["A"],this.outTexUsage=ns.DOWNLOAD;const t=$n();this.outputShape=e,this.userCode=`
      ${Ak}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}class CY{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ns.DOWNLOAD;const t=$n();this.outputShape=e,this.userCode=`
      ${Ak}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}const SY={R:0,G:1,B:2,A:3};class Bv{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=$n();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${SY[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Ow():Dw(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}class NY{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=$n();this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Ow():Dw(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}function TY(n){const e=$n(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return u8(n,t)}function kY(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return m8(n,e)}function EY(n){const e=new Uint16Array([0,1,2,2,1,3]);return g8(n,e)}function ph(n,e,t,s,r,o){b8(e,t);const i=y8(n),a=n.TEXTURE_2D;return ge(n,()=>n.bindTexture(a,i)),ge(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ge(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ge(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),ge(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),H().getNumber("WEBGL_VERSION")===1?ge(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):ge(n,()=>n.texStorage2D(a,1,s,e,t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function Lk(n){return n.internalFormatFloat}function _Y(n,e,t,s){const[r,o]=hh(e,t);return ph(n,r,o,Lk(s),s.textureFormatFloat,n.FLOAT)}function Pk(n){return n.internalFormatHalfFloat}function AY(n,e,t,s){const[r,o]=hh(e,t);return ph(n,r,o,Pk(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function zk(n){return n.downloadTextureFormat}function RY(n,e,t,s){const[r,o]=hh(e,t);return ph(n,r,o,zk(s),n.RGBA,n.UNSIGNED_BYTE)}function Mk(n){return n.internalFormatPackedFloat}function DY(n,e,t,s){const[r,o]=Pl(e,t);return ph(n,r,o,Mk(s),n.RGBA,n.FLOAT)}function Bk(n){return n.internalFormatPackedHalfFloat}function OY(n,e,t,s){const[r,o]=Pl(e,t);return ph(n,r,o,Bk(s),n.RGBA,s.textureTypeHalfFloat)}function FY(n,e,t){return ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Lv(n,e,"clipSpacePos",t,3,20,0)&&Lv(n,e,"uv",t,2,20,12)}function LY(n,e,t,s,r,o){ge(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),H().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function PY(n,e,t){ge(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):H().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function zY(n,e,t,s){const r=n.createBuffer();ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return ge(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function MY(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function BY(n,e,t,s){const[r,o]=hh(e,t),i=4,a=new Uint8Array(s8(e*t,i));return ge(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function VY(n,e,t,s,r,o,i,a){const l=n,c=new Float32Array(r8(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function WY(n,e,t){const s=new Float32Array(e*t*4);return ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}class ig{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,e8(t,e)):this.gl=Gs(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>ge(o,()=>o.createVertexArray()),this.bindVertexArray=i=>ge(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>ge(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>ge(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ge(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>ge(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ge(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>ge(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Mh(this.gl,o),vs(this.gl,i))this.textureHalfFloatExtension=Mh(this.gl,i);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),vs(this.gl,r))this.colorBufferHalfFloatExtension=Mh(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",vs(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(vs(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=kY(this.gl),this.indexBuffer=EY(this.gl),this.framebuffer=x8(this.gl),this.textureConfig=Rw(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ge(e,()=>e.finish()),ge(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ge(e,()=>e.deleteFramebuffer(this.framebuffer)),ge(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ge(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ge(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_Y(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),AY(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),RY(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),PY(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),LY(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),OY(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),DY(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Pv(this.gl,this.framebuffer),this.outputTexture=null),ge(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>BY(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return VY(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return MY(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=zY(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>WY(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=TY(t));const s=p8(t);ge(t,()=>t.attachShader(s,this.vertexShader)),ge(t,()=>t.attachShader(s,e)),f8(t,s);let r;return r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),ge(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(FY(t,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&ng(t,r),this.setProgram(r),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ge(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&ng(this.gl,this.program)),ge(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?v8(this.gl,e,t):$8(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ge(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),I8(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=Pl(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ng(this.gl,this.program),Bh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ge(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ge(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Mh(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ng(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=UY(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in H().platform&&(s=H().platform.setTimeoutCustom.bind(H().platform)),Ng(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),sg(this.gl,e,this.framebuffer),this.debug&&Bh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(sg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bh(this.gl)):Pv(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;sg(r,e,this.framebuffer),this.debug&&Bh(r),this.outputTexture=e,ge(r,()=>r.viewport(0,0,t,s)),ge(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),ge(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function UY(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}const{addImpl:GY,bincountImpl:Vk,bincountReduceImpl:HY,castImpl:jY,ceilImpl:qY,concatImpl:KY,equalImpl:XY,expImpl:YY,expm1Impl:ZY,floorImpl:JY,gatherNdImpl:QY,gatherV2Impl:e7,greaterImpl:t7,greaterEqualImpl:n7,lessImpl:s7,lessEqualImpl:r7,linSpaceImpl:o7,logImpl:i7,maxImpl:a7,maximumImpl:l7,minimumImpl:c7,multiplyImpl:u7,negImpl:h7,notEqualImpl:d7,prodImpl:p7,raggedGatherImpl:f7,raggedRangeImpl:m7,raggedTensorToTensorImpl:g7,rangeImpl:y7,rsqrtImpl:b7,scatterImpl:x7,sigmoidImpl:w7,simpleAbsImpl:Wk,sliceImpl:v7,sparseFillEmptyRowsImpl:$7,sparseReshapeImpl:I7,sparseSegmentReductionImpl:Uk,sqrtImpl:C7,stridedSliceImpl:S7,stringNGramsImpl:N7,stringSplitImpl:T7,stringToHashBucketFastImpl:k7,subImpl:E7,tileImpl:_7,topKImpl:A7,transposeImpl:Lw,uniqueImpl:R7}=Pj;function Gk(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function bn(n,e){return e===1?[n]:Gk(n,e)}function D7(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}class O7{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=In(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=bn("rc",this.rank),s=ct(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Hk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${F7(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Ow():Dw(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function F7(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?F8(["r","c","d"],"inputShape"):Oi(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}class L7{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const r=Wv(t,s),o=Uv(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=Vv(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].shift();return this.usedTextures[o].push(l),l}let a;return r===Xt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Xt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Xt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Xt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Xt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=Wv(s,r),i=Uv(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Vv(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],u=c.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function P7(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Vv(n,e,t,s,r){const o=z7(e,s);let i;if(r){const[l,c]=Pl(n[0],n[1]);i=l*c}else{const[l,c]=hh(n[0],n[1]);i=l*c}const a=P7(t,o);return i*a}function z7(n,e){switch(n){case Xt.PACKED_2X2_FLOAT32:return Mk(e);case Xt.PACKED_2X2_FLOAT16:return Bk(e);case Xt.UNPACKED_FLOAT32:return Lk(e);case Xt.UNPACKED_FLOAT16:return Pk(e);case Xt.PACKED_4X1_UNSIGNED_BYTE:return zk(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function M7(n){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Xt.PACKED_2X2_FLOAT32:Xt.UNPACKED_FLOAT32:n?Xt.PACKED_2X2_FLOAT16:Xt.UNPACKED_FLOAT16}function Wv(n,e){if(n===ns.UPLOAD)return Xt.PACKED_2X2_FLOAT32;if(n===ns.RENDER||n==null)return M7(e);if(n===ns.DOWNLOAD||n===ns.PIXELS)return Xt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Uv(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}class lr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Ts="if (isnan(x)) return x;",B7="return x;",Gv="return abs(x);",V7="return (x >= 0.0) ? x : (exp(x) - 1.0);",W7=Ts+`
  return (x < 0.0) ? 0.0 : x;
`,U7=Ts+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,to="return x;",G7="return 1.0 / (1.0 + exp(-1.0 * x));";const H7="return x;",j7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,q7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,K7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,X7="return 1.0 / (1.0 + exp(-1.0 * x));";class io{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class Y7{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);const t=e.length,s=bn("rc",t),r=ct(t),o=D7(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}const Z7=Mf,J7=1e-7,Q7=1e-4,Uh={};function e9(n){return n in Uh||(Uh[n]={}),Uh[n]}const t9=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),n9=600;function s9(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*n9/1024/1024}class Tm extends ep{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof ig)t=e;else{const s=Gs(H().getNumber("WEBGL_VERSION"),e);t=new ig(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Gs(H().getNumber("WEBGL_VERSION"));t=new ig(s),this.binaryCache=e9(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new L7(this.gpgpu),this.numMBBeforeWarning=s9(),this.texData=new Gy(this,_s())}nextDataId(){return Tm.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const c=Vh(t),u=new Bv(c,!1,i),h=this.runWebGLProgram(u,[a],s,[[r,o]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:ns.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:ns.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=t;if(i!=null){let d;l?d=new io(a,to):d=new lr(a,to);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=qt());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Fr(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=qt()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(o!=null){let f;l?f=new io(r,to):f=new lr(r,to);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(i!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...zh(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=Fr(m,g)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=K(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;ge(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&_s().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new io(o,to):p=new lr(o,to);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=_s().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>_r(r));return ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!l8(s))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=K(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...zh(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const i=H().getBool("WEBGL_PACK")&&r===!0,a=i?Vh(t):t,l=i?new CY(a):new IY(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=Er(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=Er(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=hI(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:qt(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=qt(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=t9){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&K(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Qn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Z7(e.shape,t)}packedUnaryOp(e,t,s){const r=new io(e.shape,t),o=this.compileAndRun(r,[e],s);return _s().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=Wk(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Gv,e.dtype);const t=new lr(e.shape,Gv),s=this.compileAndRun(t,[e]);return _s().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&ir(s[0])){const o=s.map(i=>cr(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return _s().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Y7(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new O7(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[ma(e.shape),...ga(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[ma(t),...ga(t)],i=new Hk(o,s),a=!0,l=[s],c=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const d=K(o),p=t[0]*t[1]*4;N(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Vh(o);let l;r?l=new $Y(a):l=new vY(a);const c=!0,u=[t??zh(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,u,c,t);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Nc.DENSE){const y=i??zh(e.outputShape);l.texShape=y.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),K(a.shape)===0)return l.values=Mt(a.dtype,0),a;const c=[],u=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!e.packedInputs&&K(y.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!e.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!Pd(b.shape,y.shape)){const w=y,x=y.shape;y.shape=b.shape,y=this.packedReshape(y,x),c.push(y),b=this.texData.get(y.dataId),w.shape=x}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=wY(e,u,h),p=this.getAndSaveBinary(d,()=>bY(this.gpgpu,e,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||xY(this.gpgpu,p,u,h,r),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=H().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=qt();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=U(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=H().getBool("DEBUG");H().set("DEBUG",!1);const t=this.abs(ke(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?J7:Q7}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const c=this.activeTimers!=null;let u;c&&(u=qt());let h=t.texShape;if(h==null&&(h=N8(s,l),t.texShape=h),o!=null){const d=Vh(s);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!g)&&([f,m]=Pl(h[0],h[1])),l?p=new NY(d,g):p=new Bv(d,g);const y=g?[m,f]:h,b=this.makeTensorInfo(y,r),w=this.texData.get(b.dataId);g?w.usage=ns.PIXELS:w.usage=ns.UPLOAD,w.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,o);const x=[[m,f]],$=!0,S=this.runWebGLProgram(p,[b],r,x,$),I=this.texData.get(S.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=qt()-u)}else{const d=this.acquireTexture(h,a,r,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=r9(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*id(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ix(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(_k(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=Fk(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=l,e.outShapeStridesLocation=c,e.outTexShapeLocation=u}}createTensorFromTexture(e,t,s){const{texture:r,height:o,width:i,channels:a}=e,l=_s().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,t,s,o,i,a);return _s().makeTensorFromDataId(c,t,s,l)}}Tm.nextDataId=0;function r9(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}const o9="4.1.0";eb()&&hb("webgl",()=>new Tm,2);const Pw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ya{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Oe(t,s),this.enableShapeUniforms=In(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}const fh=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class mh{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Oe(t,s);const o=this.outputShape.length;this.enableShapeUniforms=In(o);let i="";if(r)if(o===0||K(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${ct(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=bn("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}function Kn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const i9={kernelName:Ga,backendName:"webgl",kernelFunc:Kn};function Ro(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=Kn({inputs:{x:s},backend:t}),l=Kn({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const a9={kernelName:cp,backendName:"webgl",kernelFunc:Ro};const jk="return (a < 0.) ? b * a : a;",qk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function l9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",Mr(o,"float32")),a=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mh(qk,r.shape,i.shape):new ya(jk,r.shape,i.shape),l=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const c9={kernelName:Jc,backendName:"webgl",kernelFunc:l9};const Kk="return (a < 0.) ? b * a : a;",Xk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function u9(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mh(Xk,s.shape,r.shape):new ya(Kk,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const h9={kernelName:yu,backendName:"webgl",kernelFunc:u9};const Wl="if (isnan(x)) return x;";function Ze({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),d=t(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const c=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new io(i.shape,e):u=new lr(i.shape,n),a.runWebGLProgram(u,[i],l)}}function sn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:c}=i,u=a;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[x,$]=w,S={dataId:x.dataId,dtype:x.dtype,shape:l.shape},I={dataId:$.dataId,dtype:$.dtype,shape:c.shape},C=new ya(n,l.shape,c.shape);return u.runWebGLProgram(C,[S,I],_n(x.dtype,$.dtype))}),b=Ro({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}const h=o||_n(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){const f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?mi(f):f,y=l.dtype==="string"?mi(m):m,[b,w]=r(l.shape,c.shape,g,y,h),x=u.makeTensorInfo(w,h),$=u.texData.get(x.dataId);return $.values=b,x}const d=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new mh(e,l.shape,c.shape,t):p=new ya(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function Tc(n,e=!1){if(n==="linear")return e?H7:B7;if(n==="relu")return e?q7:W7;if(n==="elu")return e?j7:V7;if(n==="relu6")return e?K7:U7;if(n==="prelu")return e?Xk:Kk;if(n==="leakyrelu")return e?qk:jk;if(n==="sigmoid")return e?X7:G7;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class Yk{constructor(e,t,s,r=!1,o=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=In(this.outputShape.length);const u=r?e[1]:e[2],h=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",x="rc.x";e[0]<t[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${w};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}const Hv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class jv{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Oe(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}const qv="return a * b;";function zw(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=_n(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),c=new jv(Hv.REAL,s.shape,r.shape),u=new jv(Hv.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Ro({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[c,u]=u7(s.shape,r.shape,a.values,l.values,o),h=t.makeTensorInfo(u,o),d=t.texData.get(h.dataId);return d.values=c,h}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new mh(qv,s.shape,r.shape):i=new ya(qv,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const d9={kernelName:Qa,backendName:"webgl",kernelFunc:zw};function p9(n,e,t){const s=[ma(n.shape),...ga(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[ma(e),...ga(e)],i=new Hk(o,s),a=!0,l=[s],c=t.runWebGLProgram(i,[r],n.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}function me(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=K(r.shape),l=jy(o,a),c=K(l);N(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=i.texData.get(r.dataId);return u.isPacked&&!Pd(r.shape,l)&&!(u.texture!==null&&Pd(u.shape,l))?p9(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const f9={kernelName:xu,backendName:"webgl",kernelFunc:me};class Kv{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${ii(h)?h.toPrecision(2):h}, ones);`}let u="";o%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}class m9{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}function g9(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=em(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Li(n,e,t,s){const r=g9(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:c}=r[i];let u,h;t==="mean"?u=i===0?new Kv({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new Kv({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new m9({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},t),h=o,o=s.runWebGLProgram(u,[o],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}class y9{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),o=b9(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function b9(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}class x9{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ct(this.rank),o=Gk("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=o[u];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}function km(n,e,t){const s=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new x9(n.shape,e):new y9(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}function w9(n,e,t,s){const r=e,o=n.shape.length,i=Ve(r,n.shape);let a=i;const l=It(a,o),c=l!=null;let u=n;c&&(u=km(n,l,s),a=Tt(a.length,o)),tn("sum",a,o);const[h,d]=Ht(u.shape,a);let p=h;t&&(p=Nt(h,i));const f=K(d),g=K(n.shape)/f,y=me({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),b=lf(n.dtype),w=Li(y,b,"sum",s),x=me({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(u),x}function Em(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return w9(r,o,i,t)}const v9={kernelName:Su,backendName:"webgl",kernelFunc:Em};function xn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=r.shape[o[u]];let c;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=Lw(h,r.shape,r.dtype,o,l);c=i.makeTensorInfo(l,r.dtype);const p=i.texData.get(c.dataId);p.values=d}else c=km(r,o,i);return c}const $9={kernelName:ei,backendName:"webgl",kernelFunc:xn};const Zk=1e3;function zd({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[c-1]:n.shape[c-2],f=s?e.shape[u-2]:e.shape[u-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=K(m),b=K(g),x=Oe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);N(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const $=t?[y,h,p]:[y,p,h],S=s?[b,f,d]:[b,d,f],I=me({inputs:{x:n},backend:r,attrs:{shape:$}}),C=me({inputs:{x:e},backend:r,attrs:{shape:S}}),k=[I,C],E=Math.max(y,b),A=t?I.shape[1]:I.shape[2],_=o!=null,O=i!=null,M=l==="leakyrelu",W=l!=null?Tc(l,!0):null,z=_||O||M||W!=null;let j;if((p===1||f===1)&&A>Zk&&z===!1){let Z=I,se=C;t&&(Z=xn({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),k.push(Z)),s&&(se=xn({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),k.push(se));const ee=f!==1,oe=f===1;let ae=Z;ee&&(ae=me({inputs:{x:Z},backend:r,attrs:{shape:[E,A,1]}}),k.push(ae));const fe=f===1?2:1;let ue=se;oe&&(ue=me({inputs:{x:se},backend:r,attrs:{shape:[E,1,A]}}),k.push(ue));const de=zw({inputs:{a:ae,b:ue},backend:r});j=Em({inputs:{x:de},backend:r,attrs:{axis:fe,keepDims:!0}}),k.push(de)}else{const Z=_n(n.dtype,e.dtype),se=new Yk($,S,[E,p,f],t,s,_,W,O,M),ee=[I,C];if(o!=null&&ee.push(o),O&&ee.push(i),M){const oe=r.makeTensorInfo([],"float32",Mr(a,"float32"));ee.push(oe),k.push(oe)}j=r.runWebGLProgram(se,ee,Z)}const G=me({inputs:{x:j},backend:r,attrs:{shape:x}});k.push(j);for(const Z of k)r.disposeIntermediateTensorInfo(Z);return G}function I9(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return zd({a:r,b:o,transposeA:l,transposeB:c,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const C9={kernelName:mc,backendName:"webgl",kernelFunc:I9};const Xv="return abs(x);";function S9(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=Wk(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new io(s.shape,Xv):r=new lr(s.shape,Xv),t.runWebGLProgram(r,[s],s.dtype)}const N9={kernelName:Ac,backendName:"webgl",kernelFunc:S9};const T9=Ts+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,k9=Ze({opSnippet:T9}),E9={kernelName:Ca,backendName:"webgl",kernelFunc:k9};const _9=Ts+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,A9=Ze({opSnippet:_9}),R9={kernelName:Sa,backendName:"webgl",kernelFunc:A9};const Yv="return a + b;",D9=sn({opSnippet:Yv,packedOpSnippet:Yv,supportsComplex:!0,cpuKernelImpl:GY}),O9={kernelName:Ci,backendName:"webgl",kernelFunc:D9};class F9{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}class L9{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}function Jh(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Kn({inputs:{x:s[0]},backend:t});if(s.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Jh({inputs:s.slice(0,l),backend:t}),u=Jh({inputs:s.slice(l),backend:t});return Jh({inputs:[c,u],backend:t})}const r=s.map(l=>l.dtype).reduce((l,c)=>_n(l,c)),o=s.map(l=>l.shape),a=H().getBool("WEBGL_PACK")?new L9(s[0].shape,o):new F9(s[0].shape,o);return t.runWebGLProgram(a,s,r)}const P9={kernelName:Rc,backendName:"webgl",kernelFunc:Jh};function z9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Ve(o,r.shape);let c=l;const u=It(c,a);let h=r;u!=null&&(h=xn({inputs:{x:r},backend:t,attrs:{perm:u}}),c=Tt(c.length,a)),tn("all",c,a);const[d,p]=Ht(h.shape,c),f=K(p),m=me({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Li(m,m.dtype,"all",t);let y;if(i){const b=Nt(d,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),y}const M9={kernelName:sp,backendName:"webgl",kernelFunc:z9};function B9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Ve(o,r.shape);let c=l;const u=It(c,a);let h=r;u!=null&&(h=xn({inputs:{x:r},backend:t,attrs:{perm:u}}),c=Tt(c.length,a)),tn("any",c,a);const[d,p]=Ht(h.shape,c),f=K(p),m=me({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Li(m,m.dtype,"any",t);let y;if(i){const b=Nt(d,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),y}const V9={kernelName:rp,backendName:"webgl",kernelFunc:B9};class W9{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class U9{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=ct(l),u=bn("coords",l);let h,d;if(i===1){d=l+1;const C=ct(d);h=`
        ${C} sourceLocR = ${C}(${u.join()}, 0);
        ++${u[l-1]};
        ${C} sourceLocG = ${C}(${u.join()}, 0);
        ++${u[l-2]};
        ${C} sourceLocA = ${C}(${u.join()}, 0);
        --${u[l-1]};
        ${C} sourceLocB = ${C}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(C=>"int "+C),g=bn("sourceLocR",d-1).concat("inIdx.r"),y=bn("sourceLocG",d-1).concat("inIdx.g"),b=bn("sourceLocB",d-1).concat("inIdx.b"),w=bn("sourceLocA",d-1).concat("inIdx.a"),x=s==="max"?"greaterThan":"lessThan",$=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,S=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,I=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${$}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function Jk(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=em(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new W9(a,t,s==null),c=[e];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=Jk(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function Qk(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=em(o),a=new U9(r,i,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const u=Qk(n,e,t,c);return n.disposeIntermediateTensorInfo(c),u}return c}function e2(n,e,t,s){const r=[t];if(tn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),o.push(l));const[c,u]=Ht(l.shape,r),h=K(u),d=me({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=Jk(n,d,s);o.push(p);const f=me({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return Qk(n,e,s)}function G9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Ve(o,r.shape);const a=It(i,r.shape.length);let l=r;const c=[];a!=null&&(l=xn({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Tt(i.length,l.shape.length)),tn("argMax",[i[0]],l.shape.length);const u=e2(t,l,i[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const H9={kernelName:Dc,backendName:"webgl",kernelFunc:G9};function j9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Ve(o,r.shape);const a=It(i,r.shape.length);let l=r;const c=[];a!=null&&(l=xn({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Tt(i.length,l.shape.length)),tn("argMin",[i[0]],l.shape.length);const u=e2(t,l,i[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const q9={kernelName:Oc,backendName:"webgl",kernelFunc:j9};const K9=Ts+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,X9=Ze({opSnippet:K9}),Y9={kernelName:Na,backendName:"webgl",kernelFunc:X9};const Z9=Ts+"return log(x + sqrt(x * x + 1.0));",J9=Ze({opSnippet:Z9}),Q9={kernelName:Ta,backendName:"webgl",kernelFunc:J9};const eZ=Ts+`
  return atan(x);
`,tZ=Ze({opSnippet:eZ}),nZ={kernelName:ka,backendName:"webgl",kernelFunc:tZ};const sZ=Pw+`
  return atan(a, b);
`,rZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fh+`
  return result;
`,oZ=sn({opSnippet:sZ,packedOpSnippet:rZ}),iZ={kernelName:_a,backendName:"webgl",kernelFunc:oZ};const aZ=Ts+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,lZ=Ze({opSnippet:aZ}),cZ={kernelName:Ea,backendName:"webgl",kernelFunc:lZ};class kc{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const C=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");const $=Math.floor(i/4)*4,S=i%4,I=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${$}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${$};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${x});
      }
    `}}class Mw{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let x="0.0";if(w||(x="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(S="avgValue / count");const I=Math.floor(i/4)*4,C=i%4,k=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${k}
            }

            int xC = xCCorner + ${I};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${k}
            }
          }
          setOutput(${S});
        }
      }
    `}}function uZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;dh(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;N(en(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Ss(r.shape,o,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&He(u.inShape,u.outShape))return Kn({inputs:{x:r},backend:t});const h=new kc(u,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const hZ={kernelName:Fc,backendName:"webgl",kernelFunc:uZ};function dZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=Br(r.shape,o,i,u,a,l,c),d=new Mw(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const pZ={kernelName:Lc,backendName:"webgl",kernelFunc:dZ};class fZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class mZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}function gZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Br(i.shape,a,l,h,c,u),p=new mZ(d);return t.runWebGLProgram(p,[r],i.dtype)}const yZ={kernelName:ip,backendName:"webgl",kernelFunc:gZ};function bZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;dh([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Ss(i.shape,a,l,1,c),h=new fZ(u);return t.runWebGLProgram(h,[r],i.dtype)}const xZ={kernelName:op,backendName:"webgl",kernelFunc:bZ};function wZ(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return zd({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const vZ={kernelName:Pc,backendName:"webgl",kernelFunc:wZ};class $Z{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Oe(e,t),Oe(e,s);let a="0.0";r!=null&&(Oe(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Oe(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class IZ{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Oe(e,t),Oe(e,s);let a="vec4(0.0)";r!=null&&(Oe(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Oe(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}const CZ=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;N(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,r,o];let u=null;i!=null&&(u=i.shape,c.push(i));let h=null;a!=null&&(h=a.shape,c.push(a));const d=H().getBool("WEBGL_PACK_NORMALIZATION")?new IZ(s.shape,r.shape,o.shape,u,h,l):new $Z(s.shape,r.shape,o.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)},SZ={kernelName:Xc,backendName:"webgl",kernelFunc:CZ};class NZ{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ct(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=TZ(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${yy[a]} = start[${a}] + coords.${yy[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const yy=["x","y","z","w","u","v"];function TZ(n){if(n===1)return"sourceLoc";if(n<=6)return yy.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}class kZ{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ct(this.rank),s=bn("coords",this.rank),r=bn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}function EZ(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=bb(e,Te(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function Ul(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=df(r,o,i);if(mb(r,a,l),K(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),d=v7(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}const{isPacked:c}=t.texData.get(r.dataId),u=yb(r.shape,a,l);if(c||!u){const h=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kZ(l):new NZ(l),d=[a];return t.runWebGLProgram(h,[r],r.dtype,d)}return t.uploadToGPU(r.dataId),EZ(r,a,l,t)}const _Z={kernelName:Cu,backendName:"webgl",kernelFunc:Ul};const AZ=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;N(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((b,w)=>b*w),l=Ju(r.shape,o,a),c=Qu(l.length,o.length),u=eh(r.shape,o,a),h=Tx(i,o.length),d=kx(u,i,o.length),p=[],f=me({inputs:{x:r},backend:t,attrs:{shape:l}}),m=xn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=me({inputs:{x:m},backend:t,attrs:{shape:u}}),y=Ul({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},RZ={kernelName:zc,backendName:"webgl",kernelFunc:AZ};function DZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),l=t.readSync(o.dataId),c=Vk(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}const OZ={kernelName:ap,backendName:"webgl",kernelFunc:DZ};function FZ(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Oe(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const LZ={kernelName:lp,backendName:"webgl",kernelFunc:FZ};const PZ="return float(a != b);",t2=sn({opSnippet:PZ,cpuKernelImpl:d7,dtype:"bool"}),zZ={kernelName:du,backendName:"webgl",kernelFunc:t2};function gh(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Kn({inputs:{x:r.complexTensorInfos.real},backend:t})}const MZ={kernelName:Vp,backendName:"webgl",kernelFunc:gh};const BZ="return float(int(x));";function VZ(n,e){const t=new lr(n.shape,BZ),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function by(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Kn({inputs:{x:r},backend:t});const i=_t(r.shape),a=by({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Ro({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=gh({inputs:{input:r},backend:t}),a=by({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!qy(r.dtype,o)){const i=Kn({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,l,c]=jY(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,c)}if(o==="int32")return VZ(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",Mt("bool",1)),l=t2({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const WZ={kernelName:Aa,backendName:"webgl",kernelFunc:by};const Zv="return ceil(x);",UZ=Ze({opSnippet:Zv,packedOpSnippet:Zv,cpuKernelImpl:qY}),GZ={kernelName:Ra,backendName:"webgl",kernelFunc:UZ};class HZ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class jZ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}function qZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;H().getBool("WEBGL_PACK_CLIP")?a=new jZ(r.shape):a=new HZ(r.shape);const l=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,l)}const KZ={kernelName:Da,backendName:"webgl",kernelFunc:qZ};class XZ{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function Jv(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function YZ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new XZ(s.shape),i=[Jv(s,r.complexTensorInfos.real),Jv(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const ZZ={kernelName:Mc,backendName:"webgl",kernelFunc:YZ};class JZ{constructor(e){this.outputShape=[],this.outputShape=hr(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}class QZ{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hr(e,t);const s=this.outputShape,r=s.length,o=ct(r),i=bn("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const c=a[t],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Gh(a,c,g)}),
            vec2(${Gh(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Gh(a,c,f)}),
          vec2(${Gh(u,c,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Gh(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}function _m(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Kn({inputs:{x:r.complexTensorInfos.imag},backend:t})}const eJ={kernelName:Tp,backendName:"webgl",kernelFunc:_m};function nc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>gh({inputs:{input:b},backend:t})),f=n.map(b=>_m({inputs:{input:b},backend:t})),m=nc(p,e,t),g=nc(f,e,t),y=Ro({inputs:{real:m,imag:g},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(x=>{const S=[-1,K(x.shape.slice(e))];return me({inputs:{x},backend:t,attrs:{shape:S}})}),f=p.map(x=>({vals:t.readSync(x.dataId),shape:x.shape})),m=hr(p.map(x=>x.shape),1),g=p[0].shape[0]===1,y=KY(f,m,s,g),b=hr(n.map(x=>x.shape),e),w=t.makeTensorInfo(b,s,y);return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),w}const o=n.filter(p=>K(p.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new lr(n[0].shape,to):new io(n[0].shape,to);return t.runWebGLProgram(p,n,s)}const a=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let m=0;m<o.length;m+=a){const g=o.slice(m,m+a);p.push(nc(g,e,t))}const f=nc(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new QZ(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:c}=tJ(o,e,t),u=new JZ(l.map(p=>p.shape)),h=t.runWebGLProgram(u,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=me({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function tJ(n,e,t){const s=hr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>me({inputs:{x:o},attrs:{shape:[-1,K(o.shape.slice(e))]},backend:t})),outShape:s}}function n2(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Ve(r,e[0].shape)[0],i=e.map(c=>c.shape);Cx(i,o);const a=hr(e.map(c=>c.shape),o);if(K(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>K(c.shape)>0);return l.length===1?Kn({inputs:{x:l[0]},backend:t}):nc(l,o,t)}const nJ={kernelName:Bc,backendName:"webgl",kernelFunc:n2};class s2{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,w=g?3:1;let x="",$="";s&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`
          float activation(float x) {
            ${s}
          }
        `,$="result = activation(result);");const S=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${$}
        setOutput(result);
      }
    `}}class sJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class r2{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=In(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const y=g*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<u)){const b=i%2===0?tp(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<u&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<u&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<u&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}class rJ{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=In(this.outputShape.length);const{dataFormat:s}=t,r=$n(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}function Md(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function o2({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(o!=null){const x=Md(o.shape,p);x!=null&&(o=me({inputs:{x:o},backend:s,attrs:{shape:x}}),y.push(o))}if(r!=null){const x=Md(r.shape,p);x!=null&&(r=me({inputs:{x:r},backend:s,attrs:{shape:x}}),y.push(r))}if(!((h===1||d===1)&&u>Zk)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&He(c.shape.slice(-3),l.slice(-3))){const x=l[0]*l[1]*(l[2]+1),$={dataId:n.dataId,shape:[1,x,t.inChannels],dtype:n.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,N(Pd(c.shape,$.shape),()=>`packed reshape ${c.shape} to ${$.shape} isn't free`);const I=me({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(I);const C=zd({a:$,b:I,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),k=s.texData.get(C.dataId);N(k.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,k.shape=t.outShape,g=Kn({inputs:{x:C},backend:s}),g.shape=t.outShape,y.push(C)}else{const x=t.outHeight*t.outWidth,$=me({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,x,t.inChannels]:[t.batchSize,t.inChannels,x]}}),S=me({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),I=zd({a:p?$:S,b:p?S:$,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});g=me({inputs:{x:I},backend:s,attrs:{shape:t.outShape}}),y.push($),y.push(S),y.push(I)}for(const x of y)s.disposeIntermediateTensorInfo(x);return g}function i2({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=l*c*u,g=d*h,y=[t.batchSize,m,g],b=!0,w=!1,x=[];if(o!=null){const G=Md(o.shape,f);G!=null&&(o=me({inputs:{x:o},backend:s,attrs:{shape:G}}),x.push(o))}if(r!=null){const G=Md(r.shape,f);G!=null&&(r=me({inputs:{x:r},backend:s,attrs:{shape:G}}),x.push(r))}const $=me({inputs:{x:e},backend:s,attrs:{shape:[1,m,K(e.shape)/m]}});x.push($);const S=new rJ(y,t),I=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],C=s.runWebGLProgram(S,[n],"float32",I),k=me({inputs:{x:C},backend:s,attrs:{shape:y}});x.push(C),x.push(k);const E=r!=null,A=o!=null,_=a==="leakyrelu",O=a?Tc(a,!0):null,M=new Yk(f?k.shape:$.shape,f?$.shape:k.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],b,w,E,O,A,_),W=f?[k,$]:[$,k];if(r&&W.push(r),A&&W.push(o),_){const G=s.makeTensorInfo([],"float32",Mr(i,"float32"));W.push(G),x.push(G)}const z=s.runWebGLProgram(M,W,"float32"),j=me({inputs:{x:z},backend:s,attrs:{shape:t.outShape}});x.push(z);for(const G of x)s.disposeIntermediateTensorInfo(G);return j}function oJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Vr(l),d=Gt(r.shape,o.shape,i,c,a,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=o2({x:r,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const m=new r2(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[r,o],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))p=i2({x:r,filter:o,convInfo:d,backend:t});else{const m=new s2(d);p=t.runWebGLProgram(m,[r,o],"float32")}const f=me({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const iJ={kernelName:Vc,backendName:"webgl",kernelFunc:oJ};class aJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class lJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class cJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class uJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}function hJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Vr(l),d=Gt(r.shape,u,i,1,a,c,!1,h),p=new aJ(d);return t.runWebGLProgram(p,[r,o],"float32")}const dJ={kernelName:up,backendName:"webgl",kernelFunc:hJ};function pJ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Vr(c),d=Gt(i,o.shape,a,1,l,u,!1,h),p=new lJ(d);return t.runWebGLProgram(p,[r,o],"float32")}const fJ={kernelName:Wc,backendName:"webgl",kernelFunc:pJ};function mJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,c=To(r.shape,o.shape,i,l,a),u=new sJ(c);return t.runWebGLProgram(u,[r,o],"float32")}const gJ={kernelName:Uc,backendName:"webgl",kernelFunc:mJ};function yJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,c=To(r.shape,l,i,1,a),u=new cJ(c);return t.runWebGLProgram(u,[r,o],"float32")}const bJ={kernelName:hp,backendName:"webgl",kernelFunc:yJ};function xJ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,c=To(l,o.shape,a,1,i),u=new uJ(c);return t.runWebGLProgram(u,[r,o],"float32")}const wJ={kernelName:dp,backendName:"webgl",kernelFunc:xJ};const vJ=Wl+`
  return cos(x);
`,$J=Ze({opSnippet:vJ}),IJ={kernelName:Oa,backendName:"webgl",kernelFunc:$J};const CJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,SJ=Ze({opSnippet:CJ}),NJ={kernelName:Fa,backendName:"webgl",kernelFunc:SJ};class TJ{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,c]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,c];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,y,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,x,$]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${x};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${$};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}const kJ=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new TJ(r.shape,o.shape,a,l,c);return t.runWebGLProgram(u,[r,o,i],"float32")},EJ={kernelName:fp,backendName:"webgl",kernelFunc:kJ};var Ec;(function(n){n.Prod="*",n.Sum="+"})(Ec||(Ec={}));class Qv{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===Ec.Prod?"1.0":"0.0",a=s?i:`getX(${e$(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=r?`end != ${l-1}`:"end != 0",u=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ct(o)} coords = getOutputCoords();
        int end = ${t$(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${t$(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${e$(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function e$(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function t$(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function a2(n,e,t,s,r,o){const i=e.shape.length,a=It([s],i);let l=e;a!=null&&(l=xn({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=Tt(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=Kn({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new Qv(n,l.shape,!1,o),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const d=new Qv(n,l.shape,r,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=ko(a),p=xn({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}function _J(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return a2(Ec.Prod,r,t,o,i,a)}const AJ={kernelName:pp,backendName:"webgl",kernelFunc:_J};function RJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return a2(Ec.Sum,r,t,o,i,a)}const DJ={kernelName:Gc,backendName:"webgl",kernelFunc:RJ};function OJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),c=t.readSync(o.dataId),u=Vk(l,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(o),u=HY(l,c,i,a);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const FJ={kernelName:mp,backendName:"webgl",kernelFunc:OJ};class LJ{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}function PJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],u=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=c*o,p=u/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new LJ(f,o,i);return t.runWebGLProgram(m,[r],r.dtype)}const zJ={kernelName:gp,backendName:"webgl",kernelFunc:PJ};class l2{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=In(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}class c2{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=In(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let y=0;y<h;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const b=y*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?tp(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}function MJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),N(en(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Gt(r.shape,o.shape,i,u,a,c,!0);let d;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new c2(h):d=new l2(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[r,o],"float32",p)}const BJ={kernelName:Hc,backendName:"webgl",kernelFunc:MJ};class VJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class WJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}function UJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=Gt(r.shape,u,i,a,l,c,!0),d=new VJ(h);return t.runWebGLProgram(d,[r,o],"float32")}const GJ={kernelName:yp,backendName:"webgl",kernelFunc:UJ};function HJ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=Gt(u,o.shape,i,a,l,c,!0),d=new WJ(h);return t.runWebGLProgram(d,[r,o],"float32")}const jJ={kernelName:bp,backendName:"webgl",kernelFunc:HJ};class qJ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}function KJ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=K(s.shape),i=me({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new qJ(o),l=t.runWebGLProgram(a,[i],i.dtype),c=me({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),c}const XJ={kernelName:xp,backendName:"webgl",kernelFunc:KJ};class YJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}function ZJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,c=Fu(r.shape,o.shape,i,a,"NHWC",l);let u;const h=new YJ(c);u=t.runWebGLProgram(h,[r,o],"float32");const d=me({inputs:{x:u},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(u),d}const JJ={kernelName:jc,backendName:"webgl",kernelFunc:ZJ};function QJ(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=Lx(r,o.length);zx(i.length,l,o);const{path:c,steps:u}=Mx(a,l),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:y,expandDims:b}=Px(p,l[g]);let w;Bx(y)?w=o[g]:(w=xn({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(w));const x=w.shape.slice();for(let $=0;$<b.length;++$)x.splice(b[$],0,1);He(w.shape,x)||(w=me({inputs:{x:w},backend:t,attrs:{shape:x}}),f.push(w)),d===null?d=w:(d=zw({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=Em({inputs:{x:d},backend:t,attrs:{axis:c[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const eQ={kernelName:wp,backendName:"webgl",kernelFunc:QJ};const tQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",nQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,sQ=Ze({opSnippet:tQ,packedOpSnippet:nQ}),rQ={kernelName:Pa,backendName:"webgl",kernelFunc:sQ};const oQ="return (b >= 1.0) ? a : a * (b + 1.0);",iQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,aQ=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mh(iQ,s.shape,r.shape):new ya(oQ,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},lQ={kernelName:vp,backendName:"webgl",kernelFunc:aQ};const cQ=`
  return vec4(equal(a, b));
`,uQ="return float(a == b);",hQ=sn({opSnippet:uQ,packedOpSnippet:cQ,dtype:"bool",cpuKernelImpl:XY}),dQ={kernelName:qc,backendName:"webgl",kernelFunc:hQ};const pQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ex};
  float a1 = ${_x};
  float a2 = ${Ax};
  float a3 = ${Rx};
  float a4 = ${Dx};
  float a5 = ${Ox};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,fQ=Ze({opSnippet:pQ}),mQ={kernelName:za,backendName:"webgl",kernelFunc:fQ};const gQ=Wl+`
  return exp(x);
`,yQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u2=Ze({opSnippet:gQ,packedOpSnippet:yQ,cpuKernelImpl:YY,dtype:"float32"}),bQ={kernelName:Ma,backendName:"webgl",kernelFunc:u2};function xy(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(N(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),me({inputs:{x:o},backend:s,attrs:{shape:a}})}const xQ={kernelName:Kc,backendName:"webgl",kernelFunc:xy};const n$="return exp(x) - 1.0;",wQ=Ze({opSnippet:n$,packedOpSnippet:n$,cpuKernelImpl:ZY}),vQ={kernelName:Ba,backendName:"webgl",kernelFunc:wQ};class s${constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function h2(n,e,t){const s=t.texData.get(n.dataId),r=K(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=me({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),l=a.shape,c=new s$("real",l,e),u=new s$("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Ro({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=me({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}function $Q(n){const{inputs:e,backend:t}=n,{input:s}=e;return h2(s,!1,t)}const IQ={kernelName:$p,backendName:"webgl",kernelFunc:$Q};class CQ{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function yh(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Ia(r),o==="string"){const i=Ct(o,K(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new CQ(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const SQ={kernelName:Ip,backendName:"webgl",kernelFunc:yh};class NQ{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}const TQ={kernelName:Cp,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new NQ(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};const r$="return floor(x);",kQ=Ze({opSnippet:r$,packedOpSnippet:r$,cpuKernelImpl:JY}),EQ={kernelName:Va,backendName:"webgl",kernelFunc:kQ};const _Q=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,AQ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,RQ=sn({opSnippet:_Q,packedOpSnippet:AQ,dtype:"int32"}),DQ={kernelName:Wa,backendName:"webgl",kernelFunc:RQ};class OQ{constructor(e){this.variableNames=["A"];const t=$n(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class FQ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$n(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}const LQ={kernelName:hd,backendName:"webgl",kernelFunc:PQ};let Mi,ag=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function PQ(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],h=[c,l,o];if(a||i){const m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Mi==null||m!==ag)&&(ag=m,Mi=document.createElement("canvas").getContext("2d",{willReadFrequently:ag})),Mi.canvas.width=l,Mi.canvas.height=c,Mi.drawImage(r,0,0,l,c),r=Mi.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=ns.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),r);const p=H().getBool("WEBGL_PACK")?new FQ(h):new OQ(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}function zQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Vr(u),g=Gt(r.shape,o.shape,l,h,c,d,!1,m);let y;const b=[],w=i!=null,x=a!=null,$=p==="leakyrelu",S=()=>{const C=[r,o],k=(E,A)=>{if(A==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const _=me({inputs:{x:E},backend:t,attrs:{shape:[E.shape[0],1,1]}});return b.push(_),_}return E};if(w&&C.push(k(i,u)),x&&C.push(k(a,u)),$){const E=t.makeTensorInfo([],"float32",Mr(f,"float32"));C.push(E),b.push(E)}return C};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=o2({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const C=p?Tc(p,!0):null,k=new r2(g,w,C,x,$),E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=S();y=t.runWebGLProgram(k,A,"float32",E)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=i2({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const C=p?Tc(p,!1):null,k=new s2(g,w,C,x,$),E=S();y=t.runWebGLProgram(k,E,"float32")}const I=me({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return b.push(y),b.forEach(C=>t.disposeIntermediateTensorInfo(C)),I}const MQ={kernelName:gc,backendName:"webgl",kernelFunc:zQ};function BQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),N(en(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Gt(r.shape,o.shape,l,m,c,h,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?Tc(d,y):null,w=[r,o],x=i!=null,$=a!=null,S=d==="leakyrelu";if(x&&w.push(i),$&&w.push(a),S){const E=t.makeTensorInfo([],"float32",Mr(p,"float32"));w.push(E),f.push(E)}let I;y?I=new c2(g,x,b,$,S):I=new l2(g,x,b,$,S);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],k=t.runWebGLProgram(I,w,"float32",C);return f.forEach(E=>t.disposeIntermediateTensorInfo(E)),k}const VQ={kernelName:yc,backendName:"webgl",kernelFunc:BQ};class WQ{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=ct(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}function UQ(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=K(s.shape),[l,c,u,h]=hf(s,r),d=me({inputs:{x:r},backend:t,attrs:{shape:[c,i]}}),p=me({inputs:{x:s},backend:t,attrs:{shape:[K(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),b=t.bufferSync(s),w=QY(y,b,s.dtype,c,i,u,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,w.values)}const f=new WQ(i,h,[c,u],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=me({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const GQ={kernelName:Sp,backendName:"webgl",kernelFunc:UQ};class HQ{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=ct(this.rank),r=jQ(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function jQ(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}function d2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=Ve(i,r.shape)[0];if(H().get("DEBUG")){const b=t.readSync(o.dataId),w=r.shape[l];for(let x=0;x<b.length;++x){const $=b[x];N($<=w-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${w-1}]`)}}const c=Wx(r,o,l,a),u=K(o.shape),h=[],d=me({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=me({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=t.bufferSync(p),w=t.bufferSync(d),x=e7(w,b,f);return h.forEach($=>t.disposeIntermediateTensorInfo($)),t.makeTensorInfo(c.outputShape,x.dtype,x.values)}const m=new HQ(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=me({inputs:{x:g},backend:t,attrs:{shape:c.outputShape}});return h.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const qQ={kernelName:Yc,backendName:"webgl",kernelFunc:d2};const KQ="return float(a > b);",XQ=`
  return vec4(greaterThan(a, b));
`,YQ=sn({opSnippet:KQ,packedOpSnippet:XQ,cpuKernelImpl:t7,dtype:"bool"}),ZQ={kernelName:Zc,backendName:"webgl",kernelFunc:YQ};const JQ="return float(a >= b);",QQ=`
  return vec4(greaterThanEqual(a, b));
`,eee=sn({opSnippet:JQ,packedOpSnippet:QQ,dtype:"bool",cpuKernelImpl:n7}),tee={kernelName:Ua,backendName:"webgl",kernelFunc:eee};function nee(n){const{inputs:e,backend:t}=n,{input:s}=e;return h2(s,!0,t)}const see={kernelName:Np,backendName:"webgl",kernelFunc:nee};const ree="return float(!isnan(x) && !isinf(x));",oee=Ze({opSnippet:ree,dtype:"bool"}),iee={kernelName:Ha,backendName:"webgl",kernelFunc:oee};const aee="return float(isinf(x));",lee=Ze({opSnippet:aee,dtype:"bool"}),cee={kernelName:ja,backendName:"webgl",kernelFunc:lee};const uee="return float(isnan(x));",hee=Ze({opSnippet:uee,dtype:"bool"}),dee={kernelName:qa,backendName:"webgl",kernelFunc:hee};const pee="return float(a < b);",fee=`
  return vec4(lessThan(a, b));
`,mee=sn({opSnippet:pee,packedOpSnippet:fee,cpuKernelImpl:s7,dtype:"bool"}),gee={kernelName:Qc,backendName:"webgl",kernelFunc:mee};const yee="return float(a <= b);",bee=`
  return vec4(lessThanEqual(a, b));
`,xee=sn({opSnippet:yee,packedOpSnippet:bee,cpuKernelImpl:r7,dtype:"bool"}),wee={kernelName:eu,backendName:"webgl",kernelFunc:xee};function vee(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=o7(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const $ee={kernelName:kp,backendName:"webgl",kernelFunc:vee};const Iee=Wl+`
  return x < 0.0 ? 0./0. : log(x);
`,Cee=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,See=Ze({opSnippet:Iee,packedOpSnippet:Cee,cpuKernelImpl:i7}),Nee={kernelName:Ka,backendName:"webgl",kernelFunc:See};const Tee=Wl+`
  return log(1.0 + x);
`,kee=Ze({opSnippet:Tee}),Eee={kernelName:Xa,backendName:"webgl",kernelFunc:kee};const _ee="return float(a >= 1.0 && b >= 1.0);",Aee=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Ree=sn({opSnippet:_ee,packedOpSnippet:Aee,dtype:"bool"}),Dee={kernelName:tu,backendName:"webgl",kernelFunc:Ree};const Oee="return float(!(x >= 1.0));",Fee=Ze({opSnippet:Oee}),Lee={kernelName:nu,backendName:"webgl",kernelFunc:Fee};const Pee="return float(a >= 1.0 || b >= 1.0);",zee=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Mee=sn({opSnippet:Pee,packedOpSnippet:zee,dtype:"bool"}),Bee={kernelName:su,backendName:"webgl",kernelFunc:Mee};class Vee{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}class Wee{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}const Uee=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,c=H().getBool("WEBGL_PACK_NORMALIZATION")?new Wee(r.shape,o,i,a,l):new Vee(r.shape,o,i,a,l);return t.runWebGLProgram(c,[r],r.dtype)},Gee={kernelName:ru,backendName:"webgl",kernelFunc:Uee};class Hee{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}const jee=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new Hee(r.shape,a,l,c,u);return t.runWebGLProgram(h,[r,o,i],r.dtype)},qee={kernelName:Ep,backendName:"webgl",kernelFunc:jee};function Kee(n,e,t,s){const r=K(e),i=K(n.shape)/r,a=me({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Li(a,n.dtype,"max",s),c=me({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}function p2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=Ve(o,r.shape);let c=l;const u=It(c,a),h=u!=null,d=t.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const w=t.texData.get(p.dataId).values,x=new Array(a);for(let I=0;I<x.length;I++)x[I]=r.shape[u[I]];const $=Lw(w,r.shape,r.dtype,u,x);p=t.makeTensorInfo(x,r.dtype);const S=t.texData.get(p.dataId);S.values=$}else p=km(r,u,t);c=Tt(c.length,a)}tn("max",c,a);const[f,m]=Ht(p.shape,c);let g=f;i&&(g=Nt(f,l));let y;if(d){const w=t.texData.get(p.dataId).values,x=a7(w,K(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const $=t.texData.get(y.dataId);$.values=x}else y=Kee(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),y}const Xee={kernelName:ou,backendName:"webgl",kernelFunc:p2};const Yee=Pw+`
  return max(a, b);
`,Zee=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fh+`
  return result;
`,Jee=sn({opSnippet:Yee,packedOpSnippet:Zee,cpuKernelImpl:l7}),Qee={kernelName:Ya,backendName:"webgl",kernelFunc:Jee};function ete(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;dh(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;N(en(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Ss(r.shape,o,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&He(u.inShape,u.outShape))return Kn({inputs:{x:r},backend:t});const h=new kc(u,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const tte={kernelName:iu,backendName:"webgl",kernelFunc:ete};function nte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=Br(r.shape,o,i,u,a,c,l),d=new Mw(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const ste={kernelName:au,backendName:"webgl",kernelFunc:nte};class rte{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,c=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class ote{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}function ite(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=Br(i.shape,a,l,h,c,u),p=new Mw(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new ote(d),g=t.runWebGLProgram(m,[r,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const ate={kernelName:Ap,backendName:"webgl",kernelFunc:ite};function lte(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;dh([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Ss(a.shape,l,c,1,u,h),p=!0,f=new kc(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new rte(d),y=t.runWebGLProgram(g,[r,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const cte={kernelName:_p,backendName:"webgl",kernelFunc:lte};function ute(n,e,t,s){let r=new kc(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new kc(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}const hte={kernelName:Rp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];N(en(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ss(s.shape,r,o,c,i),[h,d]=ute(s,a,u,l);return[h,d]}};function dte(n,e,t,s){const r=K(e),i=K(n.shape)/r,a=me({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Li(a,"float32","mean",s),c=me({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}const pte={kernelName:lu,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,l=Ve(o,s.shape);let c=l;const u=It(c,a),h=u!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const x=i.texData.get(f.dataId).values,$=new Array(a);for(let C=0;C<$.length;C++)$[C]=s.shape[u[C]];const S=Lw(x,s.shape,s.dtype,u,$);f=i.makeTensorInfo($,s.dtype);const I=i.texData.get(f.dataId);I.values=S}else f=km(s,u,i);p.push(f),c=Tt(c.length,a)}tn("sum",c,a);const[m,g]=Ht(f.shape,c);let y=m;r&&(y=Nt(m,l));const b=dte(f,g,y,i);for(const w of p)i.disposeIntermediateTensorInfo(w);return b}};function fte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Ve(o,r.shape);let c=l;const u=It(c,a);let h=r;u!=null&&(h=xn({inputs:{x:r},backend:t,attrs:{perm:u}}),c=Tt(c.length,r.shape.length)),tn("min",c,a);const[d,p]=Ht(h.shape,c),f=K(p),m=me({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Li(m,m.dtype,"min",t);let y;if(i){const b=Nt(d,l);y=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=me({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),y}const mte={kernelName:cu,backendName:"webgl",kernelFunc:fte};const gte=Pw+`
  return min(a, b);
`,yte=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fh+`
  return result;
`,bte=sn({opSnippet:gte,packedOpSnippet:yte,cpuKernelImpl:c7}),xte={kernelName:Za,backendName:"webgl",kernelFunc:bte};class wte{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const r=e.length,o=ct(r),i=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}class vte{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=ct(r),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=bn("rc",r),c=bn("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[r-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}const $te=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vte(s.shape,r,o):new wte(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},Ite={kernelName:uu,backendName:"webgl",kernelFunc:$te};const Cte=`if (b == 0.0) return NAN;
  return mod(a, b);`,Ste=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+fh+`
  return result;
`,Nte=sn({opSnippet:Cte,packedOpSnippet:Ste}),Tte={kernelName:Ja,backendName:"webgl",kernelFunc:Nte};class kte{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}const Ete=`
if (a == b) {
  return 1.0;
};
return a / b;`,_te=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,f2=sn({opSnippet:Ete,packedOpSnippet:_te,checkOutOfBounds:!0}),Ate={kernelName:La,backendName:"webgl",kernelFunc:f2};const o$="return a - b;",m2=sn({opSnippet:o$,packedOpSnippet:o$,supportsComplex:!0,cpuKernelImpl:E7}),Rte={kernelName:fl,backendName:"webgl",kernelFunc:m2};function g2(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Ve([o],r.shape),a=p2({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=Nt(a.shape,i),c=me({inputs:{x:a},backend:t,attrs:{shape:l}}),u=m2({inputs:{a:r,b:c},backend:t}),h=u2({inputs:{x:u},backend:t}),d=Em({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=me({inputs:{x:d},backend:t,attrs:{shape:l}}),f=f2({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const Dte={kernelName:ku,backendName:"webgl",kernelFunc:g2};function Ote(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:g2({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new kte(c,u,o),d=[[i]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const Fte={kernelName:Dp,backendName:"webgl",kernelFunc:Ote};const Lte=Ts+`
  return -x;
`,Pte=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function zte(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=h7(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new io(s.shape,Pte):r=new lr(s.shape,Lte),t.runWebGLProgram(r,[s],s.dtype)}const Mte={kernelName:hu,backendName:"webgl",kernelFunc:zte};const Bte=Hf;function Vte(n){Qn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(r.dataId),u=t.readSync(o.dataId),{selectedIndices:h}=Bte(c,u,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Wte={kernelName:Op,backendName:"webgl",kernelFunc:Vte};const Ute=jf;function Gte(n){Qn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=Ute(u,h,i,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const Hte={kernelName:Fp,backendName:"webgl",kernelFunc:Gte};const jte=qf;function qte(n){Qn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(r.dataId),h=t.readSync(o.dataId),d=i,p=a,f=l,m=c,{selectedIndices:g,selectedScores:y}=jte(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Kte={kernelName:Lp,backendName:"webgl",kernelFunc:qte};class Xte{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}const Yte=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,c=K(r.shape),u=new Xte(c,i,a,l),h=me({inputs:{x:r},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(u,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...r.shape,i],f=me({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},Zte={kernelName:fu,backendName:"webgl",kernelFunc:Yte};function Bd(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=gh({inputs:{input:s},backend:t}),o=Bd({inputs:{x:r},backend:t}),i=_m({inputs:{input:s},backend:t}),a=Bd({inputs:{x:i},backend:t}),l=Ro({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return yh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Jte={kernelName:Au,backendName:"webgl",kernelFunc:Bd};function y2(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=gh({inputs:{input:s},backend:t}),o=y2({inputs:{x:r},backend:t}),i=_m({inputs:{input:s},backend:t}),a=Bd({inputs:{x:i},backend:t}),l=Ro({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return yh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Qte={kernelName:pu,backendName:"webgl",kernelFunc:y2};function ene(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return xy({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(u=>{Qt(o,u.shape,"All tensors passed to stack must have matching shapes"),N(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=xy({inputs:{input:u},backend:t,attrs:{dim:r}});return a.push(h),h}),c=n2({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const tne={kernelName:mu,backendName:"webgl",kernelFunc:ene};class nne{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);const r=e.length,o=ct(r),i=t.map(c=>c[0]).join(","),a=t.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}class sne{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=ct(r),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=bn("rc",r),c=bn("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}const b2=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(K(r.shape)===0){const c=o.map((u,h)=>u[0]+r.shape[h]+u[1]);return yh({backend:t,attrs:{shape:c,value:i,dtype:r.dtype}})}const a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sne(r.shape,o,i):new nne(r.shape,o,i),l=[[i]];return t.runWebGLProgram(a,[r],r.dtype,l)},rne={kernelName:gu,backendName:"webgl",kernelFunc:b2};const one=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ine=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+fh+`
  return result;
`,ane=sn({opSnippet:one,packedOpSnippet:ine}),lne={kernelName:el,backendName:"webgl",kernelFunc:ane};function cne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],c=Ve(o,r.shape);let u=c;const h=It(u,a);let d=r;h!=null&&(d=xn({inputs:{x:r},backend:t,attrs:{perm:h}}),u=Tt(u.length,a),l.push(d)),tn("prod",u,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=p7(d.shape,d.dtype,f,u);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=Ht(d.shape,u),g=K(m),y=me({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=lf(r.dtype),w=Li(y,b,"prod",t);p=me({inputs:{x:w},backend:t,attrs:{shape:f}}),l.push(y),l.push(w)}if(i){l.push(p);const f=Nt(p.shape,c);p=me({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const une={kernelName:bu,backendName:"webgl",kernelFunc:cne};function hne(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.readSync(y.dataId)),c=r.map(y=>y.shape),u=t.readSync(o.dataId),h=t.readSync(i.dataId),[d,p,f]=f7(l,c,u,o.shape,o.dtype,h,i.shape,a),m=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const dne={kernelName:Pp,backendName:"webgl",kernelFunc:hne};function pne(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,u]=m7(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const fne={kernelName:zp,backendName:"webgl",kernelFunc:pne};function mne(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.readSync(r.dataId),u=t.readSync(o.dataId),h=t.readSync(i.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=g7(c,r.shape,u,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const gne={kernelName:Mp,backendName:"webgl",kernelFunc:mne};const x2=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=y7(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},yne={kernelName:Bp,backendName:"webgl",kernelFunc:x2};const bne="return 1.0 / x;",xne=Ze({opSnippet:bne}),wne={kernelName:tl,backendName:"webgl",kernelFunc:xne};const vne=Ts+`
  return (x < 0.0) ? 0.0 : x;
`,$ne=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ine=Ze({opSnippet:vne,packedOpSnippet:$ne}),Cne={kernelName:nl,backendName:"webgl",kernelFunc:Ine};const Sne=Ts+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Nne=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tne=Ze({opSnippet:Sne,packedOpSnippet:Nne}),kne={kernelName:sl,backendName:"webgl",kernelFunc:Tne};class Ene{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class _ne{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}function Ane(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _ne(r.shape,l,c,o,i):new Ene(r.shape,l,c,o,i);return t.runWebGLProgram(u,[r],"float32")}const Rne={kernelName:vu,backendName:"webgl",kernelFunc:Ane};class Dne{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}function One(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Dne(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const Fne={kernelName:Up,backendName:"webgl",kernelFunc:One};class Lne{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class Pne{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}function zne(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Pne(r.shape,l,c,o,i):new Lne(r.shape,l,c,o,i);return t.runWebGLProgram(u,[r],r.dtype)}const Mne={kernelName:wu,backendName:"webgl",kernelFunc:zne};class Bne{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}function Vne(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new Bne(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const Wne={kernelName:Wp,backendName:"webgl",kernelFunc:Vne};class Une{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=ct(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}class Gne{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=bn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=ct(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${i}) {
            result.b = ${u(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((b,w)=>p(w,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}function Hne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=Ve(o,r.shape);if(i===0)return Kn({inputs:{x:r},backend:t});const l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gne(r.shape,a):new Une(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const jne={kernelName:$u,backendName:"webgl",kernelFunc:Hne};class qne{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}const Kne={kernelName:of,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new qne(s.shape,o),[c,u]=Nx(i,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};const Xne=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Yne=Ze({opSnippet:Xne}),Zne={kernelName:rl,backendName:"webgl",kernelFunc:Yne};const Jne="return inversesqrt(x);",Qne=Ze({opSnippet:Jne,cpuKernelImpl:b7}),ese={kernelName:ol,backendName:"webgl",kernelFunc:Qne};class w2{constructor(e,t,s,r,o,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=ct(o.length),c=ct(i.length);let u="";s===1?u="i":s===2&&(u="i, j");const h=`getIndices(${u})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}function tse(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=xl(o,r,i),d=[h/c,c];if(h===0)return t.makeTensorInfo(i,r.dtype);const p=me({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=me({inputs:{x:o},backend:t,attrs:{shape:[l,c]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new w2(l,a,p.shape.length,f.shape.length,u,d),y=t.runWebGLProgram(g,[f,p,m],f.dtype),b=me({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),b}const nse={kernelName:Gp,backendName:"webgl",kernelFunc:tse};class sse{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=H().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}function rse(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new sse(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",l)}const ose={kernelName:Hp,backendName:"webgl",kernelFunc:rse};class ise{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<t.length;u++)c.push(`${a[u]}`),u<e&&l.push(`${a[u]}`);r=l.join(),o=c.join()}const i=ct(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}function ase(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new ise(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],_n(r.dtype,o.dtype))}const lse={kernelName:Iu,backendName:"webgl",kernelFunc:ase};const cse=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${tm};
  float scale = ${nm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,use=Ze({opSnippet:cse}),hse={kernelName:il,backendName:"webgl",kernelFunc:use};const dse=Wl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,pse=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fse=Ze({opSnippet:dse,packedOpSnippet:pse,cpuKernelImpl:w7}),mse={kernelName:ul,backendName:"webgl",kernelFunc:fse};const gse=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,yse=Ze({opSnippet:gse}),bse={kernelName:cl,backendName:"webgl",kernelFunc:yse};const xse=Wl+`
  return sin(x);
`,wse=Ze({opSnippet:xse}),vse={kernelName:al,backendName:"webgl",kernelFunc:wse};const $se=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ise=Ze({opSnippet:$se}),Cse={kernelName:ll,backendName:"webgl",kernelFunc:Ise};const Sse=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Nse=Ze({opSnippet:Sse}),Tse={kernelName:hl,backendName:"webgl",kernelFunc:Nse};const kse=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;N(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const c=[],u=b2({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=Ju(u.shape,o,a,!1),d=Qu(h.length,o.length,!1),p=eh(u.shape,o,a,!1),f=me({inputs:{x:u},backend:t,attrs:{shape:h}}),m=xn({inputs:{x:f},backend:t,attrs:{perm:d}}),g=me({inputs:{x:m},backend:t,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},Ese={kernelName:Nu,backendName:"webgl",kernelFunc:kse};function _se(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(o.dataId),u=t.readSync(i.dataId)[0],[h,d,p,f,m]=$7(a,s.shape,s.dtype,l,r.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Ase={kernelName:jp,backendName:"webgl",kernelFunc:_se};function Rse(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(o.dataId)),[c,u,h]=I7(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const Dse={kernelName:qp,backendName:"webgl",kernelFunc:Rse};function Ose(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,u]=Uk(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const Fse={kernelName:Kp,backendName:"webgl",kernelFunc:Ose};function Lse(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,u]=Uk(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const Pse={kernelName:Xp,backendName:"webgl",kernelFunc:Lse};function zse(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=xl(o,r,a),p=!1;if(o.dtype==="string"){const y=t.bufferSync(r),b=t.bufferSync(o),w=_r(t.readSync(i.dataId)[0]),x=x7(y,b,a,d,u,c,l,h,w,p);return t.makeTensorInfo(a,x.dtype,x.values)}const f=new w2(c,l,r.shape.length,o.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[o,r,i],o.dtype),g=me({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const Mse={kernelName:Yp,backendName:"webgl",kernelFunc:zse};function Bse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Ve(i,r.shape)[0],l=Vx(r,o,a),c=r.shape.length,u=new Array(c).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Ul({inputs:{x:r},backend:t,attrs:{begin:u,size:p}});return u[a]+=d,f})}const Vse={kernelName:Tu,backendName:"webgl",kernelFunc:Bse};const i$="return sqrt(x);",Wse=Ze({opSnippet:i$,packedOpSnippet:i$,cpuKernelImpl:C7}),Use={kernelName:dl,backendName:"webgl",kernelFunc:Wse};const Gse="return x * x;",Hse=Ze({opSnippet:Gse}),jse={kernelName:Zp,backendName:"webgl",kernelFunc:Hse};const a$="return (a - b) * (a - b);",qse=sn({opSnippet:a$,packedOpSnippet:a$}),Kse={kernelName:pl,backendName:"webgl",kernelFunc:qse};function Xse({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Ts+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new lr(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const Yse={kernelName:bl,backendName:"webgl",kernelFunc:Xse};class Zse{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=ct(s.length),i=ct(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}function Jse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:w,strides:x}=xb(r.shape,o,i,a,l,c,u,h,d);let $;if(m)$=me({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const I=gb(b,w,x),C=Ul({inputs:{x:r},backend:t,attrs:{begin:b,size:I}});$=me({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(C)}else if(t.shouldExecuteOnCPU([r])){const C=t.readSync(r.dataId),k=ze(r.shape,r.dtype,C),E=S7(p,k,x,b);$=t.makeTensorInfo(f,r.dtype,E.values)}else{const C=new Zse(b,x,p);$=t.runWebGLProgram(C,[r],r.dtype)}const S=me({inputs:{x:$},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo($),S}const Qse={kernelName:Jp,backendName:"webgl",kernelFunc:Jse};function ere(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),p=t.readSync(h.dataId),[f,m]=N7(d,p,r,o,i,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const tre={kernelName:Qp,backendName:"webgl",kernelFunc:ere};function nre(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),l=t.readSync(i.dataId)[0],[c,u,h]=T7(a,l,r),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const sre={kernelName:ef,backendName:"webgl",kernelFunc:nre};function rre(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=k7(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const ore={kernelName:tf,backendName:"webgl",kernelFunc:rre};const ire="return tan(x);",are=Ze({opSnippet:ire}),lre={kernelName:ml,backendName:"webgl",kernelFunc:are};const cre=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ure=Ze({opSnippet:cre}),hre={kernelName:gl,backendName:"webgl",kernelFunc:ure};class dre{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),o=pre(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function pre(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}function v2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(d=>_r(d)):l,u=ze(r.shape,r.dtype,c),h=_7(u,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new dre(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const fre={kernelName:yl,backendName:"webgl",kernelFunc:v2};class mre{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class gre{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function zo(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function l$(n){let e=1;for(;e<n;)e*=2;return e}function yre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(t.shouldExecuteOnCPU([r])||u<a||o>l){const E=t.readSync(r.dataId),[A,_]=A7(E,c,r.dtype,o,i);return[t.makeTensorInfo(A.shape,A.dtype,A.values),t.makeTensorInfo(_.shape,_.dtype,_.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,r.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(u===1)return[r,yh({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(r):r,m=K(c)/u,g=me({inputs:{x:p},attrs:{shape:[m,u]},backend:t});d&&zo(t,p);const y=l$(o),b=l$(u);let w=null;const x=()=>w===null?[g,g]:[g,w],$=(E,A,_)=>{const O=x(),M=new mre(_),z=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[E],[A]],j=w;w=t.runWebGLProgram(M,O,"int32",z),zo(t,j)};for(let E=1;E<y;E*=2){const A=E*2;for(let _=E;_>=1;_/=2)$(A,_,[m,b])}for(let E=b;E>y;E/=2){const A=x(),_=new gre([m,E/2]),M=[[u],[w===null?1:0],[y]],W=w;w=t.runWebGLProgram(_,A,"int32",M),zo(t,W);const z=y/2,j=z*2;for(let G=z;G>=1;G/=2)$(j,G,w.shape)}let S=w;w=Ul({inputs:{x:w},backend:t,attrs:{begin:0,size:[m,o]}}),zo(t,S);let I=d2({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});zo(t,g);const C=c.slice(0,-1);C.push(o),S=w,w=me({inputs:{x:w},attrs:{shape:C},backend:t}),zo(t,S);const k=I;return I=me({inputs:{x:I},attrs:{shape:C},backend:t}),zo(t,k),[I,w]}const bre={kernelName:nf,backendName:"webgl",kernelFunc:yre};class xre{constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}function wre(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],y=new xre(h,d,i,a,l,g);return t.runWebGLProgram(y,[r,o],"float32")}const vre={kernelName:sf,backendName:"webgl",kernelFunc:wre};function $re(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;dh(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:c}=R7(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const Ire={kernelName:rf,backendName:"webgl",kernelFunc:$re};function Cre(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],c=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==o&&(c[u++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=Ul({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=me({inputs:{x:g},backend:t,attrs:{shape:c}});f[m]=y,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Sre={kernelName:Eu,backendName:"webgl",kernelFunc:Cre};class Nre{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}function Tre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let c=0;const u=It([c],a);let h=r;u!=null&&(h=xn({inputs:{x:r},backend:t,attrs:{perm:u}}),l.push(h),c=Tt(1,a)[0]);const d=WS(h.shape,c,i),p=K([h.shape[c]]),f=me({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=lf(r.dtype),g=(x,$,S,I,C)=>{const k=x.shape[0],E=x.shape[1],A=VS(E,C),_={windowSize:A,inSize:E,batchSize:k,numSegments:C},O=new Nre(_,$),M=t.compileAndRun(O,[x,S],I);if(l.push(M),M.shape[1]===C)return M;const W=x2({backend:t,attrs:{start:0,stop:C,step:1,dtype:"float32"}}),z=v2({inputs:{x:W},backend:t,attrs:{reps:[E/A]}});return l.push(W),l.push(z),g(M,$,z,I,C)},y=g(f,"unsortedSegmentSum",o,m,i),b=me({inputs:{x:y},backend:t,attrs:{shape:d}});let w=b;if(u!=null){l.push(b);const x=ko(u);w=xn({inputs:{x:w},backend:t,attrs:{perm:x}})}return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),w}const kre={kernelName:_u,backendName:"webgl",kernelFunc:Tre};const Ere=[C9,N9,E9,R9,O9,P9,M9,V9,H9,q9,Y9,Q9,nZ,iZ,cZ,hZ,pZ,yZ,xZ,vZ,SZ,RZ,OZ,LZ,WZ,GZ,KZ,a9,ZZ,nJ,iJ,dJ,fJ,gJ,bJ,wJ,IJ,NJ,EJ,AJ,DJ,FJ,zJ,BJ,GJ,jJ,XJ,JJ,eQ,rQ,lQ,dQ,mQ,bQ,xQ,vQ,IQ,SQ,TQ,EQ,DQ,LQ,MQ,VQ,GQ,qQ,ZQ,tee,i9,see,eJ,iee,cee,dee,c9,gee,wee,$ee,Nee,Eee,Dee,Lee,Bee,Gee,qee,Xee,Qee,tte,ste,ate,cte,hte,pte,mte,xte,Ite,Tte,Fte,d9,Mte,Wte,Hte,Kte,zZ,Zte,Qte,tne,rne,lne,h9,une,dne,fne,gne,yne,MZ,Ate,wne,Cne,kne,f9,Rne,Fne,Mne,Wne,jne,Kne,Zne,ese,nse,ose,lse,hse,mse,bse,vse,Cse,_Z,Dte,Tse,Ese,Ase,Dse,Fse,Pse,Mse,Vse,Use,jse,Kse,Yse,Qse,tre,sre,ore,Rte,v9,lre,hre,fre,bre,vre,$9,Ire,Sre,kre,Jte];for(const n of Ere)af(n);const _re="4.1.0";const Are={"tfjs-core":hC,"tfjs-backend-cpu":zj,"tfjs-backend-webgl":o9,"tfjs-data":$T,"tfjs-layers":mm,"tfjs-converter":iT,tfjs:_re},Rre=Object.freeze(Object.defineProperty({__proto__:null,data:_H,version:Are,AdadeltaOptimizer:Kf,AdagradOptimizer:Xf,AdamOptimizer:Yf,AdamaxOptimizer:Zf,MomentumOptimizer:Jf,Optimizer:Hr,OptimizerConstructors:Jr,RMSPropOptimizer:Qf,SGDOptimizer:Zu,Tensor:Ye,TensorBuffer:Lt,Variable:xc,get Rank(){return Ag},sumOutType:lf,upcastType:_n,get Reduction(){return gn},customGrad:mr,grad:WF,grads:UF,valueAndGrad:GF,valueAndGrads:HF,variableGrads:vC,Environment:yI,env:H,get ENV(){return Xy},nextFrame:Ix,KernelBackend:ep,DataStorage:Gy,abs:Et,acos:$b,acosh:Ib,add:te,addN:dC,all:ff,any:vc,argMax:hi,argMin:Cb,asin:Sb,asinh:Nb,atan:Tb,atan2:kb,atanh:Eb,avgPool:Lu,avgPool3d:Ab,basicLSTMCell:pC,batchToSpaceND:Pu,batchNorm:wl,batchNorm2d:Rb,batchNorm3d:Db,batchNorm4d:Ob,bincount:Fb,broadcastArgs:fC,broadcastTo:ni,buffer:ze,cast:he,ceil:Lb,clipByValue:An,clone:ur,complex:Rr,concat:St,concat1d:Pb,concat2d:zb,concat3d:Mb,concat4d:Bb,conv1d:mf,conv2d:Dr,conv2dTranspose:gf,conv3d:Wb,conv3dTranspose:Ub,cos:zu,cosh:yf,cumprod:$c,cumsum:bf,denseBincount:xd,depthToSpace:Gb,depthwiseConv2d:vl,diag:gC,dilation2d:Hb,div:Ce,divNoNan:jb,dot:qb,einsum:yC,elu:$l,equal:Gn,erf:Kb,euclideanNorm:Yb,exp:Hn,expandDims:on,expm1:Zb,eye:xf,fill:Ti,floor:Cl,floorDiv:pf,gather:Sl,greater:vn,greaterEqual:Wr,imag:Ou,isFinite:Jb,isInf:Qb,isNaN:ex,leakyRelu:Mu,less:wf,lessEqual:Eo,linspace:wC,localResponseNormalization:tx,log:jn,log1p:Bu,logSigmoid:nx,logSoftmax:$f,logSumExp:If,logicalAnd:Cs,logicalNot:Vu,logicalOr:Cf,logicalXor:sx,lowerBound:$C,matMul:Be,max:rs,maxPool:Wu,maxPool3d:rx,maxPoolWithArgmax:IC,maximum:br,mean:xt,meshgrid:CC,min:ia,minimum:Nl,mirrorPad:ox,mod:ix,moments:Uu,mul:L,multiRNNCell:SC,multinomial:NC,neg:ft,notEqual:pi,oneHot:ra,ones:Wn,onesLike:qn,outerProduct:TC,pad:Ur,pad1d:kC,pad2d:EC,pad3d:_C,pad4d:AC,pool:ax,pow:Or,prelu:Hu,print:ab,prod:lx,raggedGather:RC,raggedRange:DC,raggedTensorToTensor:OC,rand:FC,randomGamma:GC,randomNormal:Nf,randomStandardNormal:HC,randomUniform:kl,range:fi,real:oa,reciprocal:ux,relu:js,relu6:Tf,reshape:P,reverse:as,reverse1d:jC,reverse2d:qC,reverse3d:KC,reverse4d:XC,round:kf,rsqrt:Ef,scalar:ke,selu:_f,separableConv2d:Af,setdiff1dAsync:YC,sigmoid:Ms,sign:hx,sin:Rf,sinh:Df,slice:qe,slice1d:ju,slice2d:Of,slice3d:qu,slice4d:aa,softmax:Ku,softplus:ki,spaceToBatchND:Gu,fft:Xu,ifft:la,irfft:Ff,rfft:Yu,split:En,sqrt:Jt,square:ot,squaredDifference:Lf,squeeze:_o,stack:Rn,step:_i,stridedSlice:dx,sub:ye,sum:we,tan:px,tanh:di,tensor:Un,tensor1d:cn,tensor2d:uo,tensor3d:db,tensor4d:ZC,tensor5d:JC,tensor6d:QC,tile:ts,topk:fx,truncatedNormal:Pf,unique:mx,unsortedSegmentSum:zf,unstack:ls,upperBound:eS,variable:gx,where:dn,whereAsync:yx,zeros:_t,zerosLike:Ke,op:F,OP_SCOPE_SUFFIX:tb,booleanMaskAsync:tS,transpose:Ge,norm:Il,movingAverage:nS,scatterND:sS,searchSorted:Sf,sparseToDense:rS,gatherND:oS,dropout:bx,enclosingPowerOfTwo:xx,cosineWindow:Bf,inTopKAsync:iS,image:ar,linalg:$x,losses:yS,spectral:mS,fused:uS,signal:gS,sparse:bS,string:xS,train:Vo,enableProdMode:uD,enableDebugMode:hD,disableDeprecationWarnings:dD,deprecationWarn:pD,disposeVariables:fD,engine:_s,memory:yd,profile:mD,tidy:U,dispose:De,keep:Ot,time:gD,setBackend:yD,ready:bD,getBackend:xD,removeBackend:wD,findBackend:vD,findBackendFactory:$D,registerBackend:hb,backend:ZI,setPlatform:ID,getKernel:dd,getGradient:Tg,getKernelsForBackend:pd,registerKernel:af,registerGradient:vI,unregisterKernel:UA,unregisterGradient:GA,copyRegisteredKernels:HA,Abs:Ac,Acos:Ca,Acosh:Sa,Add:Ci,AddN:Rc,All:sp,Any:rp,ArgMax:Dc,ArgMin:Oc,Asin:Na,Asinh:Ta,Atan:ka,Atanh:Ea,Atan2:_a,AvgPool:Fc,AvgPoolGrad:op,AvgPool3D:Lc,AvgPool3DGrad:ip,BatchMatMul:Pc,BatchToSpaceND:zc,Bincount:ap,BroadcastTo:xI,BroadcastArgs:lp,Cast:Aa,Ceil:Ra,ClipByValue:Da,Complex:cp,ComplexAbs:Mc,Concat:Bc,Conv2D:Vc,Conv2DBackpropFilter:up,Conv2DBackpropInput:Wc,Conv3D:Uc,Conv3DBackpropFilterV2:hp,Conv3DBackpropInputV2:dp,Cos:Oa,Cosh:Fa,Cumprod:pp,Cumsum:Gc,CropAndResize:fp,DenseBincount:mp,DepthToSpace:gp,DepthwiseConv2dNative:Hc,DepthwiseConv2dNativeBackpropFilter:yp,DepthwiseConv2dNativeBackpropInput:bp,Diag:xp,Dilation2D:jc,Dilation2DBackpropInput:cd,Dilation2DBackpropFilter:ud,RealDiv:La,Einsum:wp,Elu:Pa,EluGrad:vp,Erf:za,Equal:qc,Exp:Ma,ExpandDims:Kc,Expm1:Ba,FFT:$p,Fill:Ip,FlipLeftRight:Cp,Floor:Va,FloorDiv:Wa,FusedBatchNorm:Xc,GatherV2:Yc,GatherNd:Sp,Greater:Zc,GreaterEqual:Ua,Identity:Ga,IFFT:Np,Imag:Tp,IsFinite:Ha,IsInf:ja,IsNan:qa,LeakyRelu:Jc,Less:Qc,LessEqual:eu,LinSpace:kp,Log:Ka,Log1p:Xa,LogicalAnd:tu,LogicalNot:nu,LogicalOr:su,LogicalXor:zA,LogSoftmax:wI,LowerBound:MA,LRN:ru,LRNGrad:Ep,Max:ou,Maximum:Ya,MaxPool:iu,MaxPoolGrad:_p,MaxPool3D:au,MaxPool3DGrad:Ap,MaxPoolWithArgmax:Rp,Mean:lu,Min:cu,Minimum:Za,MirrorPad:uu,Mod:Ja,Multinomial:Dp,Multiply:Qa,Neg:hu,NotEqual:du,NonMaxSuppressionV3:Op,NonMaxSuppressionV4:Fp,NonMaxSuppressionV5:Lp,OnesLike:pu,OneHot:fu,Pack:mu,PadV2:gu,Pool:BA,Pow:el,Prelu:yu,Prod:bu,RaggedGather:Pp,RaggedRange:zp,RaggedTensorToTensor:Mp,Range:Bp,Real:Vp,Reciprocal:tl,Relu:nl,Reshape:xu,ResizeNearestNeighbor:wu,ResizeNearestNeighborGrad:Wp,ResizeBilinear:vu,ResizeBilinearGrad:Up,Relu6:sl,Reverse:$u,Round:rl,Rsqrt:ol,ScatterNd:Gp,SearchSorted:Hp,Select:Iu,Selu:il,Slice:Cu,Sin:al,Sinh:ll,Sign:cl,Sigmoid:ul,Softplus:hl,Sqrt:dl,Sum:Su,SpaceToBatchND:Nu,SplitV:Tu,Softmax:ku,SparseFillEmptyRows:jp,SparseReshape:qp,SparseSegmentMean:Kp,SparseSegmentSum:Xp,SparseToDense:Yp,SquaredDifference:pl,Square:Zp,StridedSlice:Jp,StringNGrams:Qp,StringSplit:ef,StringToHashBucketFast:tf,Sub:fl,Tan:ml,Tanh:gl,Tile:yl,TopK:nf,Transform:sf,Transpose:ei,Unique:rf,Unpack:Eu,UnsortedSegmentSum:_u,UpperBound:VA,ZerosLike:Au,Step:bl,FromPixels:hd,RotateWithOffset:of,_FusedMatMul:mc,FusedConv2D:gc,FusedDepthwiseConv2D:yc,version_core:hC,browser:zD,io:ub,math:_D,serialization:HD,test_util:tO,util:QA,backend_util:GS,broadcast_util:AD,tensor_util:hR,slice_util:lC,gather_util:MD,scatter_util:BD,device_util:gR,kernel_impls:xz,CallbackList:aN,CustomCallback:cN,History:lN,Callback:eT,callbacks:xU,EarlyStopping:tT,InputSpec:At,SymbolicTensor:Fs,LayersModel:Tr,input:IN,loadLayersModel:pW,model:gW,registerCallbackConstructor:bW,sequential:yW,RNN:Ks,Sequential:yi,LayerVariable:sN,version_layers:mm,constraints:cV,initializers:SV,layers:Y4,metrics:dU,models:pU,regularizers:yU,GraphModel:bw,loadGraphModel:HG,loadGraphModelSync:jG,deregisterOp:$U,registerOp:vU,version_converter:iT},Symbol.toStringTag,{value:"Module"})),_c=Wy(Rre);var vi={};Object.defineProperty(vi,"__esModule",{value:!0});vi.cropTensor=vi.capture=void 0;var Yo=_c;function Dre(n,e){return Yo.tidy(function(){var t=Yo.browser.fromPixels(n),s=$2(t,e),r=s.expandDims(0);return r.toFloat().div(Yo.scalar(127)).sub(Yo.scalar(1))})}vi.capture=Dre;function $2(n,e,t){var s=Math.min(n.shape[0],n.shape[1]),r=n.shape[0]/2,o=r-s/2,i=n.shape[1]/2,a=i-s/2;if(e&&!t){var l=n.slice([o,a,0],[s,s,3]);l=l.reshape([s*s,1,3]);var c=[.2989,.587,.114];return l=Yo.mul(l,c),l=l.reshape([s,s,3]),l=Yo.sum(l,-1),l=Yo.expandDims(l,-1),l}return n.slice([o,a,0],[s,s,3])}vi.cropTensor=$2;var Ls={};Object.defineProperty(Ls,"__esModule",{value:!0});Ls.cropTo=Ls.resizeMinTo=Ls.resizeMaxTo=Ls.resize=void 0;var Am=function(){return document.createElement("canvas")};function Bw(n,e,t){t===void 0&&(t=Am()),t.width=n.width*e,t.height=n.height*e;var s=t.getContext("2d");return s.drawImage(n,0,0,t.width,t.height),t}Ls.resize=Bw;function Ore(n,e,t){t===void 0&&(t=Am());var s=Math.max(n.width,n.height);return Bw(n,e/s,t)}Ls.resizeMaxTo=Ore;function Fre(n,e,t){t===void 0&&(t=Am());var s=Math.min(n.width,n.height);return Bw(n,e/s,t)}Ls.resizeMinTo=Fre;function Lre(n,e,t,s){t===void 0&&(t=!1),s===void 0&&(s=Am());var r=n.width,o=n.height;n instanceof HTMLVideoElement&&(r=n.videoWidth,o=n.videoHeight);var i=Math.min(r,o),a=e/i,l=Math.ceil(r*a),c=Math.ceil(o*a),u=l-e,h=c-e;s.width=s.height=e;var d=s.getContext("2d");return d.drawImage(n,~~(u/2)*-1,~~(h/2)*-1,l,c),t&&(d.scale(-1,1),d.drawImage(s,e*-1,0)),s}Ls.cropTo=Lre;var bh={};Object.defineProperty(bh,"__esModule",{value:!0});bh.version=void 0;var Pre="0.8.4-alpha2";bh.version=Pre;(function(n){var e=rt&&rt.__awaiter||function(I,C,k,E){function A(_){return _ instanceof k?_:new k(function(O){O(_)})}return new(k||(k=Promise))(function(_,O){function M(j){try{z(E.next(j))}catch(G){O(G)}}function W(j){try{z(E.throw(j))}catch(G){O(G)}}function z(j){j.done?_(j.value):A(j.value).then(M,W)}z((E=E.apply(I,C||[])).next())})},t=rt&&rt.__generator||function(I,C){var k={label:0,sent:function(){if(_[0]&1)throw _[1];return _[1]},trys:[],ops:[]},E,A,_,O;return O={next:M(0),throw:M(1),return:M(2)},typeof Symbol=="function"&&(O[Symbol.iterator]=function(){return this}),O;function M(z){return function(j){return W([z,j])}}function W(z){if(E)throw new TypeError("Generator is already executing.");for(;k;)try{if(E=1,A&&(_=z[0]&2?A.return:z[0]?A.throw||((_=A.return)&&_.call(A),0):A.next)&&!(_=_.call(A,z[1])).done)return _;switch(A=0,_&&(z=[z[0]&2,_.value]),z[0]){case 0:case 1:_=z;break;case 4:return k.label++,{value:z[1],done:!1};case 5:k.label++,A=z[1],z=[0];continue;case 7:z=k.ops.pop(),k.trys.pop();continue;default:if(_=k.trys,!(_=_.length>0&&_[_.length-1])&&(z[0]===6||z[0]===2)){k=0;continue}if(z[0]===3&&(!_||z[1]>_[0]&&z[1]<_[3])){k.label=z[1];break}if(z[0]===6&&k.label<_[1]){k.label=_[1],_=z;break}if(_&&k.label<_[2]){k.label=_[2],k.ops.push(z);break}_[2]&&k.ops.pop(),k.trys.pop();continue}z=C.call(I,k)}catch(j){z=[6,j],A=0}finally{E=_=0}if(z[0]&5)throw z[1];return{value:z[0]?z[1]:void 0,done:!0}}};Object.defineProperty(n,"__esModule",{value:!0}),n.loadFromFiles=n.load=n.loadTruncatedMobileNet=n.CustomMobileNet=n.getTopKClasses=n.IMAGE_SIZE=void 0;var s=_c,r=_c,o=vi,i=Ls,a=bh,l=1,c="conv_pw_13_relu",u="out_relu",h=.25,d=.35;n.IMAGE_SIZE=224;var p=function(I){return I.packageVersion=I.packageVersion||a.version,I.packageName=I.packageName||"@teachablemachine/image",I.timeStamp=I.timeStamp||new Date().toISOString(),I.userMetadata=I.userMetadata||{},I.modelName=I.modelName||"untitled",I.labels=I.labels||[],I.imageSize=I.imageSize||n.IMAGE_SIZE,I},f=function(I){return!!I&&Array.isArray(I.labels)},m=function(I,C){if(I===1){if(C!==.25&&C!==.5&&C!==.75&&C!==1)return console.warn("Invalid alpha. Options are: 0.25, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",h.toFixed(2)),h}else if(C!==.35&&C!==.5&&C!==.75&&C!==1)return console.warn("Invalid alpha. Options are: 0.35, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",d.toFixed(2)),d;return C},g=function(I){if(I=I||{},I.checkpointUrl&&I.trainingLayer)return(I.alpha||I.version)&&console.warn("Checkpoint URL passed to modelOptions, alpha options are ignored"),[I.checkpointUrl,I.trainingLayer];if(I.version=I.version||l,I.version===1){I.alpha=I.alpha||h,I.alpha=m(I.version,I.alpha),console.log("Loading mobilenet "+I.version+" and alpha "+I.alpha);var C=I.alpha.toFixed(2);return C==="1.00"&&(C="1.0"),["https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_"+C+"_"+n.IMAGE_SIZE+"/model.json",c]}else{if(I.version===2)return I.alpha=I.alpha||d,I.alpha=m(I.version,I.alpha),console.log("Loading mobilenet "+I.version+" and alpha "+I.alpha),["https://storage.googleapis.com/teachable-machine-models/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_"+I.alpha.toFixed(2)+"_"+n.IMAGE_SIZE+"_no_top/model.json",u];throw new Error("MobileNet V"+I.version+" doesn't exist")}},y=function(I){return e(void 0,void 0,void 0,function(){var C,k;return t(this,function(E){switch(E.label){case 0:return typeof I!="string"?[3,3]:[4,fetch(I)];case 1:return k=E.sent(),[4,k.json()];case 2:return C=E.sent(),[3,4];case 3:if(f(I))C=I;else throw new Error("Invalid Metadata provided");E.label=4;case 4:return[2,p(C)]}})})};function b(I,C,k){return k===void 0&&(k=3),e(this,void 0,void 0,function(){var E;return t(this,function(A){switch(A.label){case 0:return[4,C.data()];case 1:return E=A.sent(),[2,s.tidy(function(){k=Math.min(k,E.length);for(var _=[],O=0;O<E.length;O++)_.push({value:E[O],index:O});_.sort(function(j,G){return G.value-j.value});for(var M=new Float32Array(k),W=new Int32Array(k),O=0;O<k;O++)M[O]=_[O].value,W[O]=_[O].index;for(var z=[],O=0;O<W.length;O++)z.push({className:I[W[O]],probability:M[O]});return z})]}})})}n.getTopKClasses=b;var w=function(){function I(C,k){this.model=C,this._metadata=p(k)}return Object.defineProperty(I,"EXPECTED_IMAGE_SIZE",{get:function(){return n.IMAGE_SIZE},enumerable:!1,configurable:!0}),I.prototype.getMetadata=function(){return this._metadata},I.prototype.getTotalClasses=function(){var C=this.model.output,k=C.shape[1];return k},I.prototype.getClassLabels=function(){return this._metadata.labels},I.prototype.predictTopK=function(C,k,E){return k===void 0&&(k=10),E===void 0&&(E=!1),e(this,void 0,void 0,function(){var A,_,O,M=this;return t(this,function(W){switch(W.label){case 0:return A=i.cropTo(C,this._metadata.imageSize,E),_=s.tidy(function(){var z=o.capture(A,M._metadata.grayscale);return M.model.predict(z)}),[4,b(this._metadata.labels,_,k)];case 1:return O=W.sent(),r.dispose(_),[2,O]}})})},I.prototype.predict=function(C,k){return k===void 0&&(k=!1),e(this,void 0,void 0,function(){var E,A,_,O,M,W=this;return t(this,function(z){switch(z.label){case 0:return E=i.cropTo(C,this._metadata.imageSize,k),A=s.tidy(function(){var j=o.capture(E,W._metadata.grayscale);return W.model.predict(j)}),[4,A.data()];case 1:for(_=z.sent(),O=[],M=0;M<_.length;M++)O.push({className:this._metadata.labels[M],probability:_[M]});return r.dispose(A),[2,O]}})})},I.prototype.dispose=function(){this.truncatedModel.dispose()},I}();n.CustomMobileNet=w;function x(I){return e(this,void 0,void 0,function(){var C,k,E,A,_,O,M,_,O,M;return t(this,function(W){switch(W.label){case 0:return C=g(I),k=C[0],E=C[1],[4,s.loadLayersModel(k)];case 1:return A=W.sent(),I&&I.version===1?(_=A.getLayer(E),O=s.model({inputs:A.inputs,outputs:_.output}),M=s.sequential(),M.add(O),M.add(s.layers.flatten()),[2,M]):(_=A.getLayer(E),O=s.model({inputs:A.inputs,outputs:_.output}),M=s.sequential(),M.add(O),M.add(s.layers.globalAveragePooling2d({})),[2,M])}})})}n.loadTruncatedMobileNet=x;function $(I,C){return e(this,void 0,void 0,function(){var k,E,A;return t(this,function(_){switch(_.label){case 0:return[4,s.loadLayersModel(I)];case 1:return k=_.sent(),C?[4,y(C)]:[3,3];case 2:return A=_.sent(),[3,4];case 3:A=null,_.label=4;case 4:return E=A,[2,new w(k,E)]}})})}n.load=$;function S(I,C,k){return e(this,void 0,void 0,function(){var E,A,_,O;return t(this,function(M){switch(M.label){case 0:return[4,s.loadLayersModel(s.io.browserFiles([I,C]))];case 1:return E=M.sent(),[4,new Response(k).json()];case 2:return A=M.sent(),k?[4,y(A)]:[3,4];case 3:return O=M.sent(),[3,5];case 4:O=null,M.label=5;case 5:return _=O,[2,new w(E,_)]}})})}n.loadFromFiles=S})(Uy);var ba={},I2={exports:{}};(function(n){(function(e,t,s){function r(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function i(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,u),d.state=function(){return o(u,{})}),d}function a(){var l=4022871197,c=function(u){u=u.toString();for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(rt,n,!1)})(I2);var C2={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(rt,n,!1)})(C2);var S2={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(rt,n,!1)})(S2);var N2={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(rt,n,!1)})(N2);var T2={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;u.w=g,u.X=y,u.i=f}c(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(rt,n,!1)})(T2);var k2={exports:{}};(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(rt,n,!1)})(k2);var E2={exports:{}};(function(n){(function(e,t){var s=(0,eval)("this"),r=256,o=6,i=52,a="random",l=t.pow(r,o),c=t.pow(2,i),u=c*2,h=r-1,d;function p(x,$,S){var I=[];$=$==!0?{entropy:!0}:$||{};var C=y(g($.entropy?[x,w(e)]:x??b(),3),I),k=new f(I),E=function(){for(var A=k.g(o),_=l,O=0;A<c;)A=(A+O)*r,_*=r,O=k.g(1);for(;A>=u;)A/=2,_/=2,O>>>=1;return(A+O)/_};return E.int32=function(){return k.g(4)|0},E.quick=function(){return k.g(4)/4294967296},E.double=E,y(w(k.S),e),($.pass||S||function(A,_,O,M){return M&&(M.S&&m(M,k),A.state=function(){return m(k,{})}),O?(t[a]=A,_):A})(E,C,"global"in $?$.global:this==t,$.state)}t["seed"+a]=p;function f(x){var $,S=x.length,I=this,C=0,k=I.i=I.j=0,E=I.S=[];for(S||(x=[S++]);C<r;)E[C]=C++;for(C=0;C<r;C++)E[C]=E[k=h&k+x[C%S]+($=E[C])],E[k]=$;(I.g=function(A){for(var _,O=0,M=I.i,W=I.j,z=I.S;A--;)_=z[M=h&M+1],O=O*r+z[h&(z[M]=z[W=h&W+_])+(z[W]=_)];return I.i=M,I.j=W,O})(r)}function m(x,$){return $.i=x.i,$.j=x.j,$.S=x.S.slice(),$}function g(x,$){var S=[],I=typeof x,C;if($&&I=="object")for(C in x)try{S.push(g(x[C],$-1))}catch{}return S.length?S:I=="string"?x:x+"\0"}function y(x,$){for(var S=x+"",I,C=0;C<S.length;)$[h&C]=h&(I^=$[h&C]*19)+S.charCodeAt(C++);return w($)}function b(){try{var x;return d&&(x=d.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),w(x)}catch{var $=s.navigator,S=$&&$.plugins;return[+new Date,s,S,s.screen,w(e)]}}function w(x){return String.fromCharCode.apply(0,x)}if(y(t.random(),e),n.exports){n.exports=p;try{d=UC}catch{}}})([],Math)})(E2);var zre=I2.exports,Mre=C2.exports,Bre=S2.exports,Vre=N2.exports,Wre=T2.exports,Ure=k2.exports,Pi=E2.exports;Pi.alea=zre;Pi.xor128=Mre;Pi.xorwow=Bre;Pi.xorshift7=Vre;Pi.xor4096=Wre;Pi.tychei=Ure;var Gre=Pi;var Hre=rt&&rt.__extends||function(){var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(s,r){s.__proto__=r}||function(s,r){for(var o in r)r.hasOwnProperty(o)&&(s[o]=r[o])},n(e,t)};return function(e,t){n(e,t);function s(){this.constructor=e}e.prototype=t===null?Object.create(t):(s.prototype=t.prototype,new s)}}(),xr=rt&&rt.__awaiter||function(n,e,t,s){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function a(u){try{c(s.next(u))}catch(h){i(h)}}function l(u){try{c(s.throw(u))}catch(h){i(h)}}function c(u){u.done?o(u.value):r(u.value).then(a,l)}c((s=s.apply(n,e||[])).next())})},wr=rt&&rt.__generator||function(n,e){var t={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},s,r,o,i;return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(c){return function(u){return l([c,u])}}function l(c){if(s)throw new TypeError("Generator is already executing.");for(;t;)try{if(s=1,r&&(o=c[0]&2?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[c[0]&2,o.value]),c[0]){case 0:case 1:o=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(o=t.trys,!(o=o.length>0&&o[o.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!o||c[1]>o[0]&&c[1]<o[3])){t.label=c[1];break}if(c[0]===6&&t.label<o[1]){t.label=o[1],o=c;break}if(o&&t.label<o[2]){t.label=o[2],t.ops.push(c);break}o[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(u){c=[6,u],r=0}finally{s=o=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}};Object.defineProperty(ba,"__esModule",{value:!0});ba.createTeachable=ba.TeachableMobileNet=void 0;var rn=_c,jre=_c,qre=vi,_2=Uy,Kre=Gre,Xre=.15,Yre=function(n){return typeof n.dataId=="object"&&typeof n.shape=="object"};function Zre(n,e){var t=new Array(e).fill(0);return t[n]=1,t}function lg(n,e){for(var t,s=n.length,r=n.slice(),o=s-1;o>0;o-=1){var i=void 0;e?i=Math.floor(e()*(o+1)):i=Math.floor(Math.random()*(o+1)),t=[r[i],r[o]],r[o]=t[0],r[i]=t[1]}return r}var A2=function(n){Hre(e,n);function e(t,s){var r=n.call(this,rn.sequential(),s)||this;return r.totalSamples=0,r.examples=[],r.truncatedModel=t,r}return Object.defineProperty(e.prototype,"asSequentialModel",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),e.prototype.addExample=function(t,s){return xr(this,void 0,void 0,function(){var r,o,i;return wr(this,function(a){return r=Yre(s)?s:qre.capture(s,this._metadata.grayscale),o=this.truncatedModel.predict(r),i=o.dataSync(),r.dispose(),o.dispose(),this.examples[t].push(i),this.totalSamples++,[2]})})},e.prototype.predict=function(t,s){return s===void 0&&(s=!1),xr(this,void 0,void 0,function(){return wr(this,function(r){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,n.prototype.predict.call(this,t,s)]})})},e.prototype.predictTopK=function(t,s,r){return s===void 0&&(s=10),r===void 0&&(r=!1),xr(this,void 0,void 0,function(){return wr(this,function(o){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,n.prototype.predictTopK.call(this,t,s,r)]})})},e.prototype.prepare=function(){for(var t in this.examples)if(t.length===0)throw new Error("Add some examples before training");var s=this.convertToTfDataset();this.trainDataset=s.trainDataset,this.validationDataset=s.validationDataset},e.prototype.convertToTfDataset=function(){for(var t=0;t<this.examples.length;t++)this.examples[t]=lg(this.examples[t],this.seed);for(var s=[],r=[],o=function(h){var d=Zre(h,i.numClasses),p=i.examples[h].length,f=Math.ceil(Xre*p),m=p-f,g=i.examples[h].slice(0,m).map(function(b){return{data:b,label:d}}),y=i.examples[h].slice(m).map(function(b){return{data:b,label:d}});s=s.concat(g),r=r.concat(y)},i=this,t=0;t<this.examples.length;t++)o(t);s=lg(s,this.seed),r=lg(r,this.seed);var a=rn.data.array(s.map(function(h){return h.data})),l=rn.data.array(r.map(function(h){return h.data})),c=rn.data.array(s.map(function(h){return h.label})),u=rn.data.array(r.map(function(h){return h.label}));return{trainDataset:rn.data.zip({xs:a,ys:c}),validationDataset:rn.data.zip({xs:l,ys:u})}},e.prototype.save=function(t,s){return xr(this,void 0,void 0,function(){return wr(this,function(r){return[2,this.model.save(t,s)]})})},e.prototype.train=function(t,s){return s===void 0&&(s={}),xr(this,void 0,void 0,function(){var r,o,i,a,l,c,u,h,d,p=this;return wr(this,function(f){switch(f.label){case 0:if(r=s.onTrainEnd||function(){},s.onTrainEnd=function(m){p.__stopTrainingResolve&&(p.__stopTrainingResolve(),p.__stopTrainingResolve=null),r(m)},this.isPrepared||this.prepare(),o=this.getLabels().length,jre.util.assert(o===this.numClasses,function(){return"Can not train, has "+o+" labels and "+p.numClasses+" classes"}),i=this.truncatedModel.outputs[0].shape.slice(1),a=rn.util.sizeFromShape(i),this.seed?l=rn.initializers.varianceScaling({seed:3.14}):l=rn.initializers.varianceScaling({}),this.trainingModel=rn.sequential({layers:[rn.layers.dense({inputShape:[a],units:t.denseUnits,activation:"relu",kernelInitializer:l,useBias:!0}),rn.layers.dense({kernelInitializer:l,useBias:!1,activation:"softmax",units:this.numClasses})]}),c=rn.train.adam(t.learningRate),this.trainingModel.compile({optimizer:c,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(t.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return u=this.trainDataset.batch(t.batchSize),h=this.validationDataset.batch(t.batchSize),[4,this.trainingModel.fitDataset(u,{epochs:t.epochs,validationData:h,callbacks:s})];case 1:return f.sent(),d=rn.sequential(),d.add(this.truncatedModel),d.add(this.trainingModel),this.model=d,c.dispose(),[2,this.model]}})})},e.prototype.prepareDataset=function(){for(var t=0;t<this.numClasses;t++)this.examples[t]=[]},e.prototype.setLabel=function(t,s){this._metadata.labels[t]=s},e.prototype.setLabels=function(t){this._metadata.labels=t,this.prepareDataset()},e.prototype.getLabel=function(t){return this._metadata.labels[t]},e.prototype.getLabels=function(){return this._metadata.labels},e.prototype.setName=function(t){this._metadata.modelName=t},e.prototype.getName=function(){return this._metadata.modelName},e.prototype.stopTraining=function(){var t=this,s=new Promise(function(r,o){t.trainingModel.stopTraining=!0,t.__stopTrainingResolve=r});return s},e.prototype.dispose=function(){this.trainingModel.dispose(),n.prototype.dispose.call(this)},e.prototype.calculateAccuracyPerClass=function(){return xr(this,void 0,void 0,function(){var t,s,r,o,i,a,l,c,u,h,w,d,p,f,m,g,y,b,w,x=this;return wr(this,function($){switch($.label){case 0:return t=this.validationDataset.mapAsync(function(S){return xr(x,void 0,void 0,function(){return wr(this,function(I){return[2,S.xs]})})}),s=this.validationDataset.mapAsync(function(S){return xr(x,void 0,void 0,function(){return wr(this,function(I){return[2,S.ys]})})}),r=Math.min(s.size,32),o=Math.ceil(s.size/r),i=t.batch(r),a=s.batch(r),[4,i.iterator()];case 1:return l=$.sent(),[4,a.iterator()];case 2:c=$.sent(),u=[],h=[],w=0,$.label=3;case 3:return w<o?[4,l.next()]:[3,7];case 4:return d=$.sent(),p=this.trainingModel.predict(d.value),f=p.argMax(1),u.push(f),[4,c.next()];case 5:m=$.sent(),g=m.value.argMax(1),h.push(g),d.value.dispose(),p.dispose(),m.value.dispose(),$.label=6;case 6:return w++,[3,3];case 7:if(y=rn.concat(h),b=rn.concat(u),o!==1)for(w=0;w<u.length;w++)u[w].dispose(),h[w].dispose();return[2,{reference:y,predictions:b}]}})})},e.prototype.setSeed=function(t){this.seed=Kre(t)},e}(_2.CustomMobileNet);ba.TeachableMobileNet=A2;function Jre(n,e){return xr(this,void 0,void 0,function(){var t;return wr(this,function(s){switch(s.label){case 0:return[4,_2.loadTruncatedMobileNet(e)];case 1:return t=s.sent(),[2,new A2(t,n)]}})})}ba.createTeachable=Jre;var Rm={};function Qh(n){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Qh=function(t){return typeof t}:Qh=function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Qh(n)}function Vw(n,e,t){var s=t.value;if(typeof s!="function")throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(Qh(s)));var r=!1;return{configurable:!0,get:function(){if(r||this===n.prototype||this.hasOwnProperty(e)||typeof s!="function")return s;var i=s.bind(this);return r=!0,Object.defineProperty(this,e,{configurable:!0,get:function(){return i},set:function(l){s=l,delete this[e]}}),r=!1,i},set:function(i){s=i}}}function R2(n){var e;return typeof Reflect<"u"&&typeof Reflect.ownKeys=="function"?e=Reflect.ownKeys(n.prototype):(e=Object.getOwnPropertyNames(n.prototype),typeof Object.getOwnPropertySymbols=="function"&&(e=e.concat(Object.getOwnPropertySymbols(n.prototype)))),e.forEach(function(t){if(t!=="constructor"){var s=Object.getOwnPropertyDescriptor(n.prototype,t);typeof s.value=="function"&&Object.defineProperty(n.prototype,t,Vw(n,t,s))}}),n}function Qre(){return arguments.length===1?R2.apply(void 0,arguments):Vw.apply(void 0,arguments)}const eoe=Object.freeze(Object.defineProperty({__proto__:null,boundMethod:Vw,boundClass:R2,default:Qre},Symbol.toStringTag,{value:"Module"})),toe=Wy(eoe);var Yr=rt&&rt.__decorate||function(n,e,t,s){var r=arguments.length,o=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(n,e,t,s);else for(var a=n.length-1;a>=0;a--)(i=n[a])&&(o=(r<3?i(o):r>3?i(e,t,o):i(e,t))||o);return r>3&&o&&Object.defineProperty(e,t,o),o},noe=rt&&rt.__awaiter||function(n,e,t,s){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function a(u){try{c(s.next(u))}catch(h){i(h)}}function l(u){try{c(s.throw(u))}catch(h){i(h)}}function c(u){u.done?o(u.value):r(u.value).then(a,l)}c((s=s.apply(n,e||[])).next())})},soe=rt&&rt.__generator||function(n,e){var t={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},s,r,o,i;return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(c){return function(u){return l([c,u])}}function l(c){if(s)throw new TypeError("Generator is already executing.");for(;t;)try{if(s=1,r&&(o=c[0]&2?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[c[0]&2,o.value]),c[0]){case 0:case 1:o=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(o=t.trys,!(o=o.length>0&&o[o.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!o||c[1]>o[0]&&c[1]<o[3])){t.label=c[1];break}if(c[0]===6&&t.label<o[1]){t.label=o[1],o=c;break}if(o&&t.label<o[2]){t.label=o[2],t.ops.push(c);break}o[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(u){c=[6,u],r=0}finally{s=o=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}};Object.defineProperty(Rm,"__esModule",{value:!0});Rm.Webcam=void 0;var Zr=toe,roe=Ls,cg={facingMode:"user",frameRate:24},ooe=function(n){return n.facingMode=n.facingMode||cg.facingMode,n.frameRate=n.frameRate||cg.frameRate,n.aspectRatio=n.aspectRatio||cg.aspectRatio,n},ioe=function(){function n(e,t,s){e===void 0&&(e=400),t===void 0&&(t=400),s===void 0&&(s=!1),this.width=e,this.height=t,this.flip=s}return n.prototype.getWebcam=function(e){if(e===void 0&&(e={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");e.width=640;var t=ooe(e),s=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:t}).then(function(r){return s.srcObject=r,s.addEventListener("loadedmetadata",function(o){var i=s.videoWidth,a=s.videoHeight;s.width=i,s.height=a}),s},function(){return Promise.reject("Could not open your camera. You may have denied access.")})},n.prototype.setup=function(e){return e===void 0&&(e={}),noe(this,void 0,void 0,function(){var t;return soe(this,function(s){switch(s.label){case 0:return this.webcam?[3,2]:(t=this,[4,this.getWebcam(e)]);case 1:t.webcam=s.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),s.label=2;case 2:return[2]}})})},n.prototype.play=function(){var e=this.webcam.play();return e},n.prototype.pause=function(){this.webcam.pause()},n.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},n.prototype.update=function(){this.renderCameraToCanvas()},n.prototype.stopStreamedVideo=function(e){var t=e.srcObject,s=t.getTracks();s.forEach(function(r){r.stop()}),e.srcObject=null},n.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var e=this.canvas.getContext("2d");if(this.webcam.videoWidth!==0){var t=roe.cropTo(this.webcam,this.width,this.flip);e.drawImage(t,0,0)}}},Yr([Zr.default],n.prototype,"getWebcam",null),Yr([Zr.default],n.prototype,"setup",null),Yr([Zr.default],n.prototype,"play",null),Yr([Zr.default],n.prototype,"pause",null),Yr([Zr.default],n.prototype,"stop",null),Yr([Zr.default],n.prototype,"update",null),Yr([Zr.default],n.prototype,"stopStreamedVideo",null),Yr([Zr.default],n.prototype,"renderCameraToCanvas",null),n}();Rm.Webcam=ioe;(function(n){Object.defineProperty(n,"__esModule",{value:!0});var e=Uy;Object.defineProperty(n,"IMAGE_SIZE",{enumerable:!0,get:function(){return e.IMAGE_SIZE}}),Object.defineProperty(n,"CustomMobileNet",{enumerable:!0,get:function(){return e.CustomMobileNet}}),Object.defineProperty(n,"load",{enumerable:!0,get:function(){return e.load}}),Object.defineProperty(n,"loadFromFiles",{enumerable:!0,get:function(){return e.loadFromFiles}}),Object.defineProperty(n,"loadTruncatedMobileNet",{enumerable:!0,get:function(){return e.loadTruncatedMobileNet}});var t=ba;Object.defineProperty(n,"TeachableMobileNet",{enumerable:!0,get:function(){return t.TeachableMobileNet}}),Object.defineProperty(n,"createTeachable",{enumerable:!0,get:function(){return t.createTeachable}});var s=Rm;Object.defineProperty(n,"Webcam",{enumerable:!0,get:function(){return s.Webcam}});var r=bh;Object.defineProperty(n,"version",{enumerable:!0,get:function(){return r.version}})})(uI);const aoe=["fine","cloudy","rainy"];let ug;const loe=()=>(ug||(ug=uI.load("/ml/model.json","/ml/metadata.json")),ug),coe=async n=>{const t=await(await loe()).predict(n);t.sort((i,a)=>a.probability-i.probability);const{className:s,probability:r}=t[0],o=aoe.find(i=>i===s);if(!!o)return{weather:o,probability:r}},uoe=async n=>new Promise((e,t)=>{const s=new Image;s.src=n,s.onabort=s.onerror=t,s.onload=()=>e(s)}),hoe=n=>{const e=oi(!1);return{panpudding:gA(async()=>{if(!n.value)return;const s=await uoe(n.value),r=await coe(s);if(!!r)return CA(r.weather,r.probability)},void 0,e),isProcessing:e}};function doe(n){return new Promise((e,t)=>{const s=new FileReader;s.onload=()=>{e(s.result||"")},s.onabort=()=>{t(new Error("aborted"))},s.onerror=()=>{t(new Error("error"))},s.readAsDataURL(n)})}const poe=n=>{const e=oi("");return{selectFile:()=>{n.value.click()},loadSelected:async()=>{var o,i;const r=(i=(o=n.value)==null?void 0:o.files)==null?void 0:i[0];if(!!r)return e.value=await doe(r),e.value},imageDataUrl:e}},foe=["src"],moe={key:1,class:"description"},goe={class:"inputArea"},yoe=Lr({__name:"ImageSelect",emits:["imageChange"],setup(n,{emit:e}){const t=oi(),s=oi(),{imageDataUrl:r,selectFile:o,loadSelected:i}=poe(t),a=async()=>{await i(),r.value&&e("imageChange",r.value)};return(l,c)=>(Wt(),un("div",{class:"ImageSelect",onClick:c[0]||(c[0]=(...u)=>gs(o)&&gs(o)(...u))},[gs(r)?(Wt(),un("img",{key:0,ref_key:"imageRef",ref:s,class:"ref-image",src:gs(r)},null,8,foe)):pc("",!0),gs(r)?pc("",!0):(Wt(),un("div",moe,[K$(l.$slots,"default",{},void 0,!0)])),et("label",goe,[er("Select Image File "),et("input",{type:"file",onChange:a,ref_key:"fileSelectorRef",ref:t},null,544)])]))}});const boe=yr(yoe,[["__scopeId","data-v-5572698f"]]);const xoe={},woe={class:"OutlineText"};function voe(n,e){return Wt(),un("span",woe,[K$(n.$slots,"default",{},void 0,!0)])}const no=yr(xoe,[["render",voe],["__scopeId","data-v-c78426fa"]]),$oe={class:"ImageSelectDescription"},Ioe={class:"title"},Coe={class:"note"},Soe=Lr({__name:"ImageSelectDescription",setup(n){return(e,t)=>(Wt(),un("div",$oe,[et("div",Ioe,[Je(no,null,{default:ms(()=>[er("写真を選択")]),_:1})]),et("div",Coe,[Je(no,null,{default:ms(()=>[er("撮影または選択した写真はこのスマートフォン・パソコン内で処理されます。写真や占い結果はどこにも送信されません。")]),_:1})])]))}});const Noe=yr(Soe,[["__scopeId","data-v-4d6168e9"]]),Toe={key:0,class:"main"},koe=Lr({__name:"ProcessingMsg",props:{visible:{type:Boolean,default:!1}},setup(n){const e=async(s,r)=>{await s.animate([{transform:"translateY(30px)"},{transform:"translateY(-10px)"},{transform:"translateY(0px)"}],{duration:500,easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished,r()},t=async(s,r)=>{await s.animate([{transform:"scale(1)",filter:"blur(0px)",opacity:1},{transform:"scale(1.3)",filter:"blur(8px)",opacity:0}],{duration:1500,easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished,r()};return(s,r)=>(Wt(),un("div",{class:xa(["ProcessingMsg",{visible:n.visible}])},[Je(Jd,{onEnter:e,onLeave:t},{default:ms(()=>[n.visible?(Wt(),un("div",Toe,"あしのさきの天気からおすすめのパンプリンを考えています")):pc("",!0)]),_:1})],2))}});const Eoe=yr(koe,[["__scopeId","data-v-9999b14c"]]),_oe={key:0,class:"main"},Aoe={class:"weatherLabel appear"},Roe={class:"weatherResult appear"},Doe={class:"weather"},Ooe={class:"probability"},Foe={class:"nameLabelPre appear"},Loe={class:"nameBox appear"},Poe={class:"name"},zoe={class:"nameLabelPost appear"},Moe={class:"msg appear"},Boe=Lr({__name:"ResultMsg",props:{result:{default:void 0}},setup(n){const e=n,t=ic(()=>!!e.result),s=async(a,l)=>{const c=[...a.querySelectorAll(".appear")];await Promise.all(c.map((u,h)=>u.animate([{transform:"translateY(30px) scale(1.1)",filter:"blur(4px)",opacity:0},{transform:"translateY(0px) scale(1)",filter:"blur(0px)",opacity:1}],{duration:1400,delay:h*400,fill:"backwards",easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished)),l()},r=async(a,l)=>{await a.animate([{transform:"scale(1)",filter:"blur(0px)",opacity:1},{transform:"scale(1.3)",filter:"blur(8px)",opacity:0}],{duration:1500,easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished,l()},o=ic(()=>{var a;return e.result?{fine:"晴れ",cloudy:"曇り",rainy:"雨"}[(a=e.result)==null?void 0:a.weather]:""}),i=ic(()=>e.result?Math.round(e.result.probability*100)+"%":"");return(a,l)=>(Wt(),un("div",{class:xa(["ResultMsg",{visible:gs(t)}])},[Je(Jd,{onEnter:s,onLeave:r},{default:ms(()=>[n.result?(Wt(),un("div",_oe,[et("div",Aoe,[Je(no,null,{default:ms(()=>[er("今日の天気は")]),_:1})]),et("div",Roe,[et("div",Doe,[Je(no,null,{default:ms(()=>[er(vh(gs(o)),1)]),_:1})]),et("div",Ooe,[Je(no,null,{default:ms(()=>[er(vh(`（確率${gs(i)}）`),1)]),_:1})])]),et("div",Foe,[Je(no,null,{default:ms(()=>[er("おすすめの動物パンプリンは")]),_:1})]),et("div",Loe,[et("div",Poe,[Je(no,null,{default:ms(()=>[er(vh(n.result.name),1)]),_:1})])]),et("div",zoe,[Je(no,null,{default:ms(()=>[er("です")]),_:1})]),et("div",Moe,vh(n.result.msg),1)])):pc("",!0)]),_:1})],2))}});const Voe=yr(Boe,[["__scopeId","data-v-ef888310"]]),Woe=n=>(z$("data-v-d821fddd"),n=n(),M$(),n),Uoe={class:"MainStage"},Goe={class:"inputLayer"},Hoe=Woe(()=>et("div",{class:"direction"}," 「あしのさきの動物パンプリン占い」は脚の先をカメラで撮影して、その映像から天気を判定し、その天気に合ったパンプリンの占いをするクソアプリです。AIが考えました。 ",-1)),joe={class:"processingLayer"},qoe={class:"resultLayer"},Koe=Lr({__name:"MainStage",setup(n){const e=oi(""),t=o=>{e.value=o},{isProcessing:s,panpudding:r}=hoe(e);return(o,i)=>(Wt(),un("div",Uoe,[et("div",Goe,[Hoe,Je(boe,{onImageChange:t,class:xa(["inputImage",{hasResult:!!gs(r)}])},{default:ms(()=>[Je(Noe)]),_:1},8,["class"])]),et("div",joe,[Je(Eoe,{visible:gs(s)},null,8,["visible"])]),et("div",qoe,[Je(Voe,{result:gs(r)},null,8,["result"])])]))}});const Xoe=yr(Koe,[["__scopeId","data-v-d821fddd"]]),Yoe=n=>(z$("data-v-128a56e8"),n=n(),M$(),n),Zoe={class:"AppPage"},Joe={class:"title"},Qoe={class:"stage"},eie=Yoe(()=>et("div",{class:"footer"},"2022 yuneco & support by ChatGPT",-1)),tie=Lr({__name:"AppPage",setup(n){return(e,t)=>(Wt(),un("div",Zoe,[et("div",Joe,[Je(pA)]),et("div",Qoe,[Je(Xoe)]),eie]))}});const nie=yr(tie,[["__scopeId","data-v-128a56e8"]]),sie=Lr({props:{filterId:{type:String,required:!0},animated:{type:Boolean,default:!1},noiseSeed:{type:Number,default:1},frequency:{type:Number,default:.3},octaves:{type:Number,default:5},scale:{type:Number,default:10},areaW:{type:String,default:"105%"},areaH:{type:String,default:"105%"},filterUnits:{type:String,default:"objectBoundingBox"}},setup(){return{}}}),rie=["id","filterUnits","width","height"],oie=["baseFrequency","numOctaves","seed"],iie={key:0,attributeName:"seed",from:"1",to:"100",dur:"10s",repeatCount:"indefinite"},aie=["scale"];function lie(n,e,t,s,r,o){return Wt(),un("filter",{id:n.filterId,filterUnits:n.filterUnits,x:"0",y:"0",width:n.areaW,height:n.areaH},[et("feTurbulence",{type:"turbulence",baseFrequency:`${n.frequency} ${n.frequency}`,numOctaves:n.octaves,seed:n.noiseSeed,stitchTiles:"stitch"},[n.animated?(Wt(),un("animate",iie)):pc("",!0)],8,oie),et("feDisplacementMap",{in:"SourceGraphic",scale:n.scale},null,8,aie)],8,rie)}const cie=yr(sie,[["render",lie]]),uie=["id"],hie=et("feMorphology",{in:"SourceAlpha",operator:"dilate",radius:"4"},null,-1),die=et("feComponentTransfer",null,[et("feFuncR",{type:"linear",slope:"-1",intercept:"1"}),et("feFuncG",{type:"linear",slope:"-1",intercept:"1"}),et("feFuncB",{type:"linear",slope:"-1",intercept:"1"})],-1),pie=et("feMerge",null,[et("feMergeNode"),et("feMergeNode",{in:"SourceGraphic"})],-1),fie=[hie,die,pie],mie=Lr({__name:"OutlineFilter",props:{filterId:{default:"outline"}},setup(n){return(e,t)=>(Wt(),un("filter",{id:n.filterId,filterUnits:"objectBoundingBox",x:"0",y:"0",width:"110%",height:"110%"},fie,8,uie))}}),gie={class:"invisible"},yie=Lr({__name:"App",setup(n){return(e,t)=>(Wt(),un(Jn,null,[(Wt(),un("svg",gie,[et("defs",null,[Je(cie,{filterId:"fulful",frequency:.001,scale:5,animated:!0},null,8,["frequency"]),Je(mie,{filterId:"outline"})])])),Je(nie)],64))}});const bie=yr(yie,[["__scopeId","data-v-1d54c949"]]);iA(bie).mount("#app");
